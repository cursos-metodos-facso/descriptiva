[
  {
    "objectID": "syllabus.html",
    "href": "syllabus.html",
    "title": "Programa",
    "section": "",
    "text": "Rodrigo Asún\n   Departamento de Sociología FACSO\n   &lt;a href=“mailto:rasun@uchile.cl”&gt;rasun@uchile.cl\n\n\n\n\n\n   Martes y Jueves\n   Marzo–Julio, 2025\n   8:30 AM - 10:00 AM\n   Aulario B - Sala B1"
  },
  {
    "objectID": "syllabus.html#propósito-general-del-curso",
    "href": "syllabus.html#propósito-general-del-curso",
    "title": "Programa",
    "section": "Propósito general del curso",
    "text": "Propósito general del curso\nAl finalizar el curso los estudiantes conocerán los fundamentos del análisis estadístico diferenciando entre tipos de variables, niveles de medición y formas de distribución. Se espera que los estudiantes sean capaces de diseñar y depurar bases de datos; identificar y definir diferentes tipos de muestreo; aplicar de manera pertinente, estadísticos descriptivos uni y bivariados, utilizar diferentes softwares de análisis estadístico; a partir de los cuáles puedan desarrollar análisis de problemas sociales; contrastar hipótesis de investigación; y elaborar conclusiones integrando fundamentos teóricos con herramientas de análisis estadístico de resultados. Complementariamente se espera que los estudiantes adquieran herramientas que les permitan comunicar resultados de investigación en contextos sociales, profesionales y académicos."
  },
  {
    "objectID": "syllabus.html#competencias",
    "href": "syllabus.html#competencias",
    "title": "Programa",
    "section": "Competencias",
    "text": "Competencias\n\nDelimitar, conceptualizar y analizar diversos objetos de investigación social, con especial énfasis en aquellos relacionados con los procesos de transformación del país y Latinoamérica\nManejar diversas estrategias metodológicas de las ciencias sociales.\nManejar un conjunto de herramientas para el procesamiento y análisis de información.\nTransmitir los conocimientos derivados de la práctica investigativa, así como aquellos adquiridos durante el proceso formativo.\n\n\nSubcompetencias\n\nContribuir a generar conocimiento sociológico en el marco de estudios y/o procesos de investigación donde se articulen creativamente las dimensiones teórica, metodológica y práctica.\nComunicar los saberes disciplinares de manera pertinente a las características de distintos contextos y audiencias, utilizando diversas estrategias y formatos."
  },
  {
    "objectID": "syllabus.html#resultados-de-aprendizaje",
    "href": "syllabus.html#resultados-de-aprendizaje",
    "title": "Programa",
    "section": "Resultados de Aprendizaje",
    "text": "Resultados de Aprendizaje\nAl finalizar el curso, los estudiantes serán capaces de:\n\nComprender la relevancia del análisis estadístico como herramienta para la investigación sociológica y la comprensión de lo social.\nConocer y manejar a nivel inicial las herramientas estadísticas e informáticas necesarias para realizar análisis y descripciones univariadas de datos sociales y sociológicos.\nSer capaz de resolver problemas de investigación sociológica simples a partir del uso de técnicas de cálculo, análisis y visualización estadística."
  },
  {
    "objectID": "syllabus.html#saberes-contenidos",
    "href": "syllabus.html#saberes-contenidos",
    "title": "Programa",
    "section": "Saberes / contenidos",
    "text": "Saberes / contenidos\nUNIDAD I. Sociología y estadística: algunas vinculaciones y conceptos fundamentales\n1.1. ¿Por qué debe aprender estadística un estudiante o una estudiante de sociología?\n\nLa construcción de conocimiento sociológico y la estadística.\nLa estrategia de investigación cuantitativa: estrategia epistemológica, limitaciones y potencialidades.\n\n1.2. La medición en ciencias sociales:\n\nMedir en ciencias sociales: del constructo teórico al dato estadístico.\nTipos de variables y niveles de medición.\nLa noción de población, muestra, estadístico, parámetro y estimación.\n\n1.3. Datos y bases de datos:\n\nLas fuentes de información: tratamiento, producción y análisis de datos primarios y secundarios.\nManejo y depuración de datos y bases de datos.\nAspectos éticos y posibilidades de investigación en la era de los datos no estructurados.\n\nUNIDAD II. La descripción de los datos: Medidas de tendencia central, dispersión y posición\n2.1. Medidas de tendencia central\n\nSupuestos sociológicos tras las medidas de tendencia central. Ejemplos de investigaciones sociológicas relevantes.\nLa media, la media recortada, la mediana y la moda. Potencialidades y limitaciones.\n\n2.2. Medidas de dispersión\n\nSupuestos sociológicos tras las medidas de dispersión. Ejemplos de investigaciones sociológicas relevantes.\nRango, varianza y desviación típica. Coeficiente de variación. Representaciones gráficas.\n\n2.3. Medidas de Posición\n\nDistribuciones de frecuencias absoluta, relativa y acumulada.\nMedidas de posición no central: los cuantiles.\nRepresentaciones gráficas.\n\nUNIDAD III. La forma de una distribución\n\nNoción de función, distribución empírica, teórica y de muestreo. Distribución discreta y distribución continua.\nCaracterísticas de la forma de una distribución: Asimetría y Curtosis.\nIntroducción a la distribución normal. Principales características de la distribución. Uso de la distribución normal. Estandarización y puntaje Z.\nIntroducción a otras distribuciones.\n\nUNIDAD IV. Inferencia estadística univariada: de la estimación puntual al parámetro\n\nTipos de hipótesis y prueba estadística.\nConfianza, potencia y error.\nEstimadores puntuales para medias y proporciones.\nConceptos de error típico, nivel de confianza y error de estimación.\nLa construcción de intervalos de confianza para medias y proporciones.\nPonderadores y sesgos en estimación de parámetros poblacionales."
  },
  {
    "objectID": "syllabus.html#metodología",
    "href": "syllabus.html#metodología",
    "title": "Programa",
    "section": "Metodología",
    "text": "Metodología\nLa asignatura se desarrollará a través de:\n\nClases lectivas o exposiciones a cargo del profesor, en las que se presentarán las principales temáticas de la asignatura, y en las que los y las estudiantes tendrán la posibilidad de resolver dudas relacionadas con los aspectos teóricos/conceptuales.\nUn Laboratorio de Análisis de Datos (LAD) a cargo del profesor y Equipo Docente. Se realizarán ejercicios prácticos de procesamiento, análisis e interpretación de resultados mediante diversos softwares de análisis estadístico (Excel, Spss y R). En ellos los y las estudiantes aprenderán a interpretar sociológicamente datos provenientes de múltiples fuentes, visualizar datos en forma gráfica, así como elaborar reportes de resultados.\nFinalmente, de ser requerido, se realizarán sesiones de ayudantía específicas para reforzamiento de contenidos y del trabajo del Laboratorio de Análisis de Datos.\nSe reforzarán los contenidos con la entrega de material audiovisual y tutoriales"
  },
  {
    "objectID": "syllabus.html#evaluación",
    "href": "syllabus.html#evaluación",
    "title": "Programa",
    "section": "Evaluación",
    "text": "Evaluación\n\nSe realizarán dos controles de los contenidos vistos en clase con el apoyo de alguna lectura bibliográfica. Cada uno de estos controles tendrá una ponderación de 15% (30% en total).\nDurante el transcurso de la asignatura (y en el marco del Laboratorio de Análisis de Datos) se realizará: Un Trabajo de Taller Colectivo (con dos entregas a lo largo del semestre, cada una de las cuales valdrá 20% de la nota final)."
  },
  {
    "objectID": "syllabus.html#requisitos-de-aprobación",
    "href": "syllabus.html#requisitos-de-aprobación",
    "title": "Programa",
    "section": "Requisitos de aprobación",
    "text": "Requisitos de aprobación\n\n60% de asistencia obligatoria.\nEximición de examen:\n\nNota 5.0 o superior.\nCumplir con la asistencia obligatoria.\n\nRequisitos para presentación a examen de primera oportunidad:\n\nNota de presentación igual o superior a 3.5.\nCumplir con la asistencia obligatoria.\n\nPara dar el examen en segunda oportunidad no hay requisitos.\nNota de aprobación mínima (Escala de 1.0 a 7.0): 4.0.\n\nLas situaciones no cubiertas por este programa se resolverán por las disposiciones existentes en el Reglamento General de Estudios de Pregrado de la Facultad de Ciencias Sociales (Decreto Exento Nº0045106 del 24 de noviembre de 2017).\nSe advierte que todo acto que falte a la ética e integridad académica será sancionado a partir de las medidas establecidas en los reglamentos existentes en la Universidad de Chile, y que velan por asegurar la calidad en la formación académica."
  },
  {
    "objectID": "syllabus.html#palabras-clave",
    "href": "syllabus.html#palabras-clave",
    "title": "Programa",
    "section": "Palabras Clave",
    "text": "Palabras Clave\n\nEstadística Descriptiva, Estadística Univariada, Medidas de tendencia central, Medidas de dispersión, Distribución Normal."
  },
  {
    "objectID": "syllabus.html#bibliografía-obligatoria",
    "href": "syllabus.html#bibliografía-obligatoria",
    "title": "Programa",
    "section": "Bibliografía Obligatoria",
    "text": "Bibliografía Obligatoria\n\nBlalock, H. (1986). Estadística Social. México D.F.: Fondo de Cultura Económica.\nFerrando, M. (1999): Socioestadística: Introducción a la Estadística en Sociología. Alianza Editorial.\nPardo Merino, A., & San Martín Castellanos, R. (2010). Análisis de datos en ciencias sociales y de la salud II. Síntesis, Madrid.\nCea, D’Ancona, M. (2001). Metodología Cuantitativa. Estrategias y técnicas de investigación social. Síntesis.\nAsún, R. (2006). Medir la Realidad Social: el sentido de la investigación cuantitativa. En: M. Canales (Ed.). Metodologías de Investigación Social (pp. 29-60). Santiago de Chile: LOM."
  },
  {
    "objectID": "syllabus.html#bibliografía-complementaria",
    "href": "syllabus.html#bibliografía-complementaria",
    "title": "Programa",
    "section": "Bibliografía Complementaria",
    "text": "Bibliografía Complementaria\n\nField, A. (2009). Discovering Statistics Using IBM SPSS. California: SAGE Publications. Disponible online en: http://www.soc.univ.kiev.ua/sites/default/files/library/elopen/andyfield-discovering-statistics-using-spss-third-edition-20091.pdf\nField, A., Miles, J. y Field, Z. (2012) Discovering Statistics Using R. California: SAGE Publications.\nBoccardo, G. & Ruiz, F. (2019). RStudio para Estadística Descriptiva en Ciencias Sociales. Segunda edición. En línea en: https://bookdown.org/. Departamento de Sociología, Facultad de Ciencias Sociales, Universidad de Chile.\nRitchey, F. J. (2008). Estadística para las ciencias sociales. McGraw-Hill.\nStallman, R. (2004). Software libre para una sociedad libre. En línea en: https://www.traficantes.net/. Traficantes de Sueños.\nWrigth Mills, C. (1975). Empirismo abstracto. En: La imaginación sociológica. México: Fondo de Cultura Económica.\nde Micheaux, P. L., Drouilhet, R., & Liquet, B. (2013). The R software.Fundamentals of Programming and Statistical Analysis. Springer.\nElousa, P. (2009). ¿Existe vida más allá del SPSS? Descubre R. En Revista Psicothema, vol.21, n° 4, pp. 652-655. Disponible online en: www.ehu.eus/gip/publicaciones/articulos/2009/2.pdf\nGonzález, F. (2019). Big data, algoritmos y política: las ciencias sociales en la era de las redes digitales. Revista Cinta moebio 65: pp. 267-280.\nGrolemund & Wickham (2016). R for Data Science. Disponible en línea en: https://r4ds.had.co.nz/. O’Reilly Media.\nParadis, E. (2003). R para Principiantes. Francia: Institut des Sciences de l’Évolution. Disponible oline en: https://cran.r-project.org/doc/contrib/rdebuts_es.pdf\nUrdines, F. & Cruz, A. (2019). Analiza R Datos Políticos. Instituto de Ciencia Política de la Universidad Católica de Chile. Disponible en línea: https://arcruz0.github.io/\nWickham, H. (2015). ggplot2: Elegant Graphics for Data Analysis. Disponible en línea en: https://ggplot2-book.org/. Springer."
  },
  {
    "objectID": "syllabus.html#recursos-web",
    "href": "syllabus.html#recursos-web",
    "title": "Programa",
    "section": "Recursos web",
    "text": "Recursos web\nTutoriales online para uso de software R (en español)\n\nhttps://www.youtube.com/playlist?list=PLccec9enm1CwAZXr9bv92QQ-f_-lVx0ts\nhttps://www.youtube.com/watch?v=ox8Q6YGqC3I\nhttps://www.youtube.com/watch?v=Sl82PDYjXK0\n\nCursos en línea para uso de software R (ambos en inglés y con modalidad gratuita y pagada)\n\nhttps://www.coursera.org/specializations/jhu-data-science\nhttps://www.datacamp.com/courses\n\nBases de datos de interés\n\nhttp://www.bcentral.cl/index.asp\nhttp://www.cepchile.cl/dms/lang_1/home.html\nhttp://www.cepal.org/es\nhttps://coes.cl/encuesta-panel/\nhttp://www.cl.undp.org/\nhttp://datos.bancomundial.org/\nhttp://www.ilo.org/stat/lang–es/index.htm\nhttp://www.ine.cl/\nhttp://www.nudesoc.cl/\nhttp://stats.oecd.org/\nhttp://observatorio.ministeriodesarrollosocial.gob.cl/casen_obj.php\nhttps://ourworldindata.org/"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "\n            Estadística Descriptiva\n        ",
    "section": "",
    "text": "Estadística Descriptiva\n        \n        \n            \n        \n        \n            SOC01014-1 • Primer Semestre 2025Departamento de Sociología, Facultad de Ciencias SocialesUniversidad de Chile\n        \n    \n    \n        \n    \n\n\n\n\n\n\nEquipo docente\nProfesor\n\n\n\nRodrigo Asún\n\n   Departamento de Sociología FACSO\n   rasun@uchile.cl\n\nApoyos docentes\n\n\n\nDaniela Olivares Collío\n\n   danielaolivarescollio@gmail.com\n\n\n\n\nMaría Fernanda Núñez\n\n   maria.nunez.2@ug.uchile.cl\n\nAyudantes\n\nVictoria Arias\nMartina Gallardo\nNicolás Outerbridge\nMatilda Raccagni\nIsidora Ramos\nTomás Urzúa\nFelipe Vega\nBenjamín Zavala\n\n\n\nActividades\n\n   Martes 8:30-10:00 - Aulario B1\n   Jueves 8:30-10:00 - Aulario B1 y Sala 45 facso\n\n\n\n\nContacto\nA través de correo o U-Cursos\n\n\nVersiones anteriores del curso\n\n2024\n2023"
  },
  {
    "objectID": "class/index.html",
    "href": "class/index.html",
    "title": "Presentaciones",
    "section": "",
    "text": "En esta sección se encuentran las presentaciones de las clases lectivas de la cátedra de Estadística Descriptiva.\nTodo el material es accesible desde el menú de la izquierda &lt;–",
    "crumbs": [
      "Clases",
      "Información general",
      "Presentaciones"
    ]
  },
  {
    "objectID": "class/08-class.html#lecturas",
    "href": "class/08-class.html#lecturas",
    "title": "Presentación",
    "section": "Lecturas",
    "text": "Lecturas"
  },
  {
    "objectID": "class/06-class.html#lecturas",
    "href": "class/06-class.html#lecturas",
    "title": "Presentación",
    "section": "Lecturas",
    "text": "Lecturas"
  },
  {
    "objectID": "ayudantias/index.html",
    "href": "ayudantias/index.html",
    "title": "Sesiones de ayudantía",
    "section": "",
    "text": "En esta sección se aloja el contenido de las ayudantías, a las cuales van asociadas dos materiales: presentaciones y guías de ejercicios.",
    "crumbs": [
      "Ayudantías",
      "Información general",
      "Sesiones de ayudantía"
    ]
  },
  {
    "objectID": "ayudantias/index.html#sobre-las-sesiones",
    "href": "ayudantias/index.html#sobre-las-sesiones",
    "title": "Sesiones de ayudantía",
    "section": "Sobre las sesiones",
    "text": "Sobre las sesiones\nL-s ayudantes apoyaran a sus grupos designados a partir de sesiones personalizadas. Estas serán 3 sesiones, en las cuales se verán los distintos estadísticos aprendidos en clases.\n\nLa sesión 1 corresponde a las medidas de frecuencia y tendencia central\nLa sesión 2 corresponde a las medidas de dispersión\nLa sesión 3 corresponde a las medidas de posición y forma\n\nPara estas sesiones sus ayudantes se coordinarán con ustedes mediante el canal de comunicación que utilicen.\nEn estas se dará un espacio de presentación y discusión del contenido, junto a una instancia práctica en que se les entregará una guía de ejercicios orientada a los estadísticos vistos en la sesión.\n\n\n\n\n\n\nImportante\n\n\n\nLa realización de la guía de ejercicios por sesión proporcionará 1 décima para la entrega final del trabajo grupal (es decir, se puede optar a un total 3 décimas).\nPara optar a esta bonificación la guía debe ser realizada dentro de la sesión de ayudantía. De todos modos, las guías quedarán disponibles para su estudio autónomo.",
    "crumbs": [
      "Ayudantías",
      "Información general",
      "Sesiones de ayudantía"
    ]
  },
  {
    "objectID": "ayudantias/02_ayudantia.html#guía-de-ejercicios",
    "href": "ayudantias/02_ayudantia.html#guía-de-ejercicios",
    "title": "Ayudantía 02. Medidas de Dispersión",
    "section": "Guía de ejercicios",
    "text": "Guía de ejercicios",
    "crumbs": [
      "Ayudantías",
      "Sesiones",
      "2: Medidas de Dispersión"
    ]
  },
  {
    "objectID": "assignment/index.html",
    "href": "assignment/index.html",
    "title": "Laboratorio de Análisis de Datos",
    "section": "",
    "text": "En esta sección se encuentran las guías prácticas a desarrollar durante las sesiones del Laboratorio de Análisis de Datos.\nTodo el material es accesible desde el menú de la izquierda &lt;–",
    "crumbs": [
      "Prácticos",
      "Información general",
      "Laboratorio de Análisis de Datos"
    ]
  },
  {
    "objectID": "assignment/index.html#instrucciones-generales-para-las-prácticas",
    "href": "assignment/index.html#instrucciones-generales-para-las-prácticas",
    "title": "Laboratorio de Análisis de Datos",
    "section": "Instrucciones generales para las prácticas",
    "text": "Instrucciones generales para las prácticas\n\nLas instancia prácticas consisten en el desarrollo de una guía práctica cada 2 semanas donde se aplican y profundizan los contenidos de las clases mediante las herramientas del lenguaje R. La organización de estas prácticas se puede revisar en la planificación del curso.\nEstas sesiones acompañarán el desarrollo de las guías prácticas disponibles en este sitio.\nEn las prácticas vamos a trabajar con el software R, Versión 4.2.2\nPara poder tener una asesoría y monitoreo más cercano en el desarrollo de las guías, los estudiantes han sido divididos en grupos asignados a un/a ayudante (ver en UCursos).\nEl trabajo con estas guías se organiza en los siguientes momentos:\n\nlas sesiones de laboratorios serán en modalidad online, en donde el equipo docente guiará el desarrollo del práctico\nel equipo docente mostrará el código para cada sesión, el cual contendrá los mismos contenidos de las guías alojadas en este sitio\nen paralelo, cada estudiante realiza esta guía de manera autónoma durante la sesión de laboratorio en su propio computador, apoyándose en el código que mostrarán los apoyos docentes\nen caso de dudas, las realizan en los foros disponibles o se contactan directamente con su ayudante",
    "crumbs": [
      "Prácticos",
      "Información general",
      "Laboratorio de Análisis de Datos"
    ]
  },
  {
    "objectID": "assignment/index.html#trabajo-con-software-r",
    "href": "assignment/index.html#trabajo-con-software-r",
    "title": "Laboratorio de Análisis de Datos",
    "section": "Trabajo con software R",
    "text": "Trabajo con software R\nPara los análisis estadísticos de este curso usamos el programa R, en parte porque es gratuito, pero la principal razón es que es de código abierto. Esto quiere decir que cualquier persona puede revisar cómo está hecho y aportar con modificaciones y procedimientos nuevos, como son las librerías que realizan funciones específicas.\nEl carácter de apertura de R posee muchas ventajas, pero también conlleva complicaciones. Se actualiza permanentemente, así como también las librerías, y esto puede generar problemas de compatibilidad y de fallas en ejecución del código de análisis.\nPara minimizar estos posibles problemas en este curso, vamos a:\n\ntrabajar con la misma y última versión de R, que es la 4.2\nevitar uso de tilde, ñ, espacios y mayúsculas tanto en carpetas y archivos, así como también en los nombres de las variables\nal momento de hacer consultas sobre problemas en la ejecución del código, adjuntar la siguiente información:\n\nCódigo completo hasta que se produce el problema\nIndicar línea del código donde se produce el problema\nAdjuntar el resultado del output de la información de la sesión (sessionInfo())\n\n\n\nInstalación de R & RStudio\nPara esta versión del curso vamos a trabajar con el programa R Version 4.2 (se sugiere la última versión 4.2.2) y con RStudio, que ofrece un entorno más amigable para trabajar con R.\nPara instalar R: ir a https://cran.r-project.org/index.html y bajar/instalar la versión correspondiente a la plataforma utilizada (Windows, Mac o Linux)\nPara instalar RStudio: ir a https://posit.co/downloads/ y bajar/instalar RStudio desktop, Open Source License (libre).\nSi por alguna razón se prefiere trabajar sin descargar, también se puede utilizar RCloud, abajo un tutorial de una versión anterior del curso de estadística multivarada\n\n\n\n\n\n\n\nSobre el trabajo en hojas de código en RStudio\n\nEl trabajo de análisis en RStudio se efectua en una hoja de código (o R script o sintaxis, o para los usuarios de Stata la do-file), que es donde se anotan los comandos y funciones. Para abrir una hoja, en RStudio ir a File &gt; New File &gt; R Script (o ctrl+shift+N),y aparecerá un panel con una pestaña “Untitled” (sin título). Esta es la hoja de código donde se anotan los comandos.\nLos contenidos de las hojas de código son básicamente 2:\n\ncomandos o funciones: se escriben en la hoja, y para ejecutarlos se debe posicionar el cursor en la línea respectiva y ctrl+enter, el resultado aparecerá en el panel de resultados o Consola.\ntexto: para escribir títulos, comentarios, y todo lo que permita entender qué se está haciendo, al principio de la línea respectiva escribir el signo #\n\nPara grabar nuestra hoja de código y así respaldar nuestros análisis, File &gt; Save (o ctrl+s), y dar un nombre al archivo. Recordar: breve, sin espacios ni tildes ni eñes. Por defecto, la extensión de estos archivos es .R",
    "crumbs": [
      "Prácticos",
      "Información general",
      "Laboratorio de Análisis de Datos"
    ]
  },
  {
    "objectID": "assignment/07-practico.html",
    "href": "assignment/07-practico.html",
    "title": "Práctica 7. Forma de una distribución",
    "section": "",
    "text": "El objetivo de esta guía práctica es aplicar los conocimientos aprendidos en clases sobre la forma de una distribución en R, comprendiendo sus usos, relevancia y formas de analizarla.\nEn detalle, aprenderemos:\n\nLa noción de una distribución y sus tipos (continuas y discretas)\nEstimar e interpretar la asimetría y curtosis de una distribución\nContrastar distribuciones empíricas con teóricas\n\n\n\n\nEn esta práctica trabajeremos con los datos procesados que obtuvimos en la práctica anterior, en la cual trabajamos sobre la Encuesta de Opinión Pública (CEP) de Diciembre del 2019 realizada por el Centro de Estudios Públicos."
  },
  {
    "objectID": "assignment/07-practico.html#objetivo-de-la-práctica",
    "href": "assignment/07-practico.html#objetivo-de-la-práctica",
    "title": "Práctica 7. Forma de una distribución",
    "section": "",
    "text": "El objetivo de esta guía práctica es aplicar los conocimientos aprendidos en clases sobre la forma de una distribución en R, comprendiendo sus usos, relevancia y formas de analizarla.\nEn detalle, aprenderemos:\n\nLa noción de una distribución y sus tipos (continuas y discretas)\nEstimar e interpretar la asimetría y curtosis de una distribución\nContrastar distribuciones empíricas con teóricas"
  },
  {
    "objectID": "assignment/07-practico.html#recursos-de-la-práctica",
    "href": "assignment/07-practico.html#recursos-de-la-práctica",
    "title": "Práctica 7. Forma de una distribución",
    "section": "",
    "text": "En esta práctica trabajeremos con los datos procesados que obtuvimos en la práctica anterior, en la cual trabajamos sobre la Encuesta de Opinión Pública (CEP) de Diciembre del 2019 realizada por el Centro de Estudios Públicos."
  },
  {
    "objectID": "assignment/07-practico.html#distribuciones-continuas-y-discretas",
    "href": "assignment/07-practico.html#distribuciones-continuas-y-discretas",
    "title": "Práctica 7. Forma de una distribución",
    "section": "1. Distribuciones continuas y discretas",
    "text": "1. Distribuciones continuas y discretas\nExisten dos tipos de distribuciones según el nivel de medición de las variables: las continuas y las discretas.\nComo cabe esperar, las distribuciones continuas aplican a variables numericas (intervalares y de razón). Es una distribución que describe la probabilidad o frecuencia de que una variable continua tome un valor particular dado un intervalo o un rango. Toma valores a lo largo de un continuo de dominio (\\(R\\)), es decir, su dominio son todos los números reales.\n\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\n\nPor su parte, las distribuciones discretas son comunmente utilizadas con variables categóricas (nominales y ordinales). Son distribuciones en las que una variable sólo puede tomar un número contable de valores distintos. En otras palabras, es una distribución en la que la variable sólo puede tomar valores específicos, en lugar de cualquier valor dentro de un intervalo. Su dominio es un conjunto de valores enteros (\\(N, Z, Q\\))."
  },
  {
    "objectID": "assignment/07-practico.html#preparación-de-datos",
    "href": "assignment/07-practico.html#preparación-de-datos",
    "title": "Práctica 7. Forma de una distribución",
    "section": "1. Preparación de datos",
    "text": "1. Preparación de datos\nCargamos las librerías y datos que ocuparemos\n\npacman::p_load(tidyverse, \n               psych, \n               sjmisc) \n\noptions(scipen = 999) \nrm(list = ls()) \n\nproc_cep &lt;- readRDS(\"Output/proc_cep.RData\")"
  },
  {
    "objectID": "assignment/07-practico.html#análisis-de-la-forma-de-distribución",
    "href": "assignment/07-practico.html#análisis-de-la-forma-de-distribución",
    "title": "Práctica 7. Forma de una distribución",
    "section": "2. Análisis de la forma de distribución",
    "text": "2. Análisis de la forma de distribución\nAnalicemos e interpretemos la forma de la distribución de nuestras variables. En este ejemplo tenemos:\n\nuna de razón,\nuna ordinal de 10 categorías.\n\n\npsych::describe(proc_cep$edad)\n\n   vars    n  mean    sd median trimmed  mad min max range skew kurtosis   se\nX1    1 1474 48.43 17.84   48.5   48.01 21.5  18  99    81 0.14    -0.93 0.46\n\nggplot(data = proc_cep, \n       mapping = aes(x = edad)) + \n  geom_density(color = \"black\", fill = \"#FA8072\", alpha = 0.8)  + \n  labs(title =\"Diagrama densidad: Edad\", \n       x = \"Edad\", \n       y = \"Frecuencia\",\n       caption = \"Fuente: Elaboración propia en base a Encuesta CEP Diciembre 2019.\") \n\n\n\n\n\n\n\n\nA partir de los estadísticos entregados, sabemos que la variable edad tiene una asimetría positiva (skew = 0.14) pero baja (&lt; 0.5), lo cual indica que los datos se tienden a distribuir hacía los menores valores del eje X. Por su parte, la curtosis es negativa (kurtosis = -0.93) o platicúrtica, lo cual indica que existe una baja concentración en el centro de los datos.\n\npsych::describe(proc_cep$satisfaccion)\n\n   vars    n mean   sd median trimmed  mad min max range  skew kurtosis   se\nX1    1 1474 6.87 2.18      7    6.97 2.97   1  10     9 -0.32    -0.45 0.06\n\nggplot(data = proc_cep, \n       mapping = aes(x = satisfaccion)) + \n  geom_density(color = \"black\", fill = \"darkred\", alpha = 0.8)  + \n  labs(title =\"Histograma densidad: Satisfaccion\", \n       x = \"Satisfaccion\", \n       y = \"Frecuencia\",\n       caption = \"Fuente: Elaboración propia en base a Encuesta CEP Diciembre 2019.\") \n\n\n\n\n\n\n\n\nEn cuanto a la variable satisfaccion, tenemos una asimetría negativa (skew = -0.32) aunque baja, indicando que los datos se tienden a distribuir hacia la parte superior de la variable. Además, la curtosis también es negativa o platicúrtica (kurtosis = -0.45), por lo que existe una baja concentración en el centro de los datos."
  },
  {
    "objectID": "assignment/07-practico.html#resumen",
    "href": "assignment/07-practico.html#resumen",
    "title": "Práctica 7. Forma de una distribución",
    "section": "Resumen",
    "text": "Resumen\nHoy aprendimos a visualizar datos en R. En detalle, vimos:\n\nLa noción de una distribución y sus tipos (continuas y discretas)\nEstimar e interpretar la asimetría y curtosis de una distribución\nContrastar distribuciones empíricas con teóricas"
  },
  {
    "objectID": "assignment/07-practico.html#video-tutorial",
    "href": "assignment/07-practico.html#video-tutorial",
    "title": "Práctica 7. Forma de una distribución",
    "section": "Video tutorial",
    "text": "Video tutorial"
  },
  {
    "objectID": "assignment/05-practico.html",
    "href": "assignment/05-practico.html",
    "title": "Práctica 5. Repaso procesamiento y análisis de datos en R",
    "section": "",
    "text": "El objetivo de esta guía práctica es repasar los procedimientos básicos para el procesamiento y análisis descripivo de datos en R, los cuales fueron vistos en las sesiones pasadas del laboratorio.\nEn detalle, aprenderemos:\n\nEstablecer un flujo de trabajo en R.\nProcesar, limpiar y transformar bases de datos en R.\nRealizar análisis desciptivos (medidas de posición, tendencia central y dispersión) en R.\n\n¡Al final de esta práctica la idea es que cada un_ elabore y entienda su propio documento de preparación y análisis de datos!\n\n\n\nEn esta práctica trabajaremos con un subset de los datos del Estudio Longitudinal Social de Chile (ELSOC) realizado por COES. Esta base la pueden encontrar en el canal de U-Cursos sección Material Docente, o bien, en el siguiente enlace  ELSOC 2022 podrán descargar el archivo que contiene la base ELSOC 2022.\nRecuerden que siempre es importante trabajar con el manual/libro de códigos de las bases de datos. El manual de la ELSOC 2022 lo pueden encontrar aquí."
  },
  {
    "objectID": "assignment/05-practico.html#objetivo-de-la-práctica",
    "href": "assignment/05-practico.html#objetivo-de-la-práctica",
    "title": "Práctica 5. Repaso procesamiento y análisis de datos en R",
    "section": "",
    "text": "El objetivo de esta guía práctica es repasar los procedimientos básicos para el procesamiento y análisis descripivo de datos en R, los cuales fueron vistos en las sesiones pasadas del laboratorio.\nEn detalle, aprenderemos:\n\nEstablecer un flujo de trabajo en R.\nProcesar, limpiar y transformar bases de datos en R.\nRealizar análisis desciptivos (medidas de posición, tendencia central y dispersión) en R.\n\n¡Al final de esta práctica la idea es que cada un_ elabore y entienda su propio documento de preparación y análisis de datos!"
  },
  {
    "objectID": "assignment/05-practico.html#recursos-de-la-práctica",
    "href": "assignment/05-practico.html#recursos-de-la-práctica",
    "title": "Práctica 5. Repaso procesamiento y análisis de datos en R",
    "section": "",
    "text": "En esta práctica trabajaremos con un subset de los datos del Estudio Longitudinal Social de Chile (ELSOC) realizado por COES. Esta base la pueden encontrar en el canal de U-Cursos sección Material Docente, o bien, en el siguiente enlace  ELSOC 2022 podrán descargar el archivo que contiene la base ELSOC 2022.\nRecuerden que siempre es importante trabajar con el manual/libro de códigos de las bases de datos. El manual de la ELSOC 2022 lo pueden encontrar aquí."
  },
  {
    "objectID": "assignment/05-practico.html#video-de-clase",
    "href": "assignment/05-practico.html#video-de-clase",
    "title": "Práctica 5. Repaso procesamiento y análisis de datos en R",
    "section": "Video de clase",
    "text": "Video de clase\n\nPrimer bloque\n\n\n\nSegundo bloque"
  },
  {
    "objectID": "assignment/03-practico.html",
    "href": "assignment/03-practico.html",
    "title": "Práctica 3. Procesamiento, limpieza y manipulación de datos en R",
    "section": "",
    "text": "El objetivo de esta guía práctica es revisar algunos procedimientos básicos de la preparación de datos con R, los cuales son necesarios para luego poder aplicar los contenidos más específicos de este curso.\nEn detalle, aprenderemos:\n\nEstablecer un flujo de trabajo ordenado en un script (.R).\nInstalar y cargar paquetes y librerías, así como también leer bases de datos en R.\nLimpiar, transformar y exportar bases de datos en R.\n\n¡Al final de esta práctica la idea es que cada un_ elabore y entienda su propio documento de preparación de datos!\n\nEn la sesión de hoy, retomaremos nuestro flujo de trabajo IPO revisado en el práctico 1 de este curso. Para ello, es importante recordar la estructura de nuestro trabajo, la cual debe tener la siguiente ruta:\nRproject/\n├── input/\n│   └── data/\n│       \n├── processing/\n│   └── procesamiento.R/\n│       \n└── output/\n    └── datos-procesados.Rdata/\nParticularmente, nos enfocaremos en el procesamiento de los datos, y para ello debemos tener siempre en mente la estructura de las carpetas IPO.",
    "crumbs": [
      "Prácticos",
      "Sesiones",
      "3: Procesamiento, limpieza y manipulación de datos en R"
    ]
  },
  {
    "objectID": "assignment/03-practico.html#objetivo-de-la-práctica",
    "href": "assignment/03-practico.html#objetivo-de-la-práctica",
    "title": "Práctica 3. Procesamiento, limpieza y manipulación de datos en R",
    "section": "",
    "text": "El objetivo de esta guía práctica es revisar algunos procedimientos básicos de la preparación de datos con R, los cuales son necesarios para luego poder aplicar los contenidos más específicos de este curso.\nEn detalle, aprenderemos:\n\nEstablecer un flujo de trabajo ordenado en un script (.R).\nInstalar y cargar paquetes y librerías, así como también leer bases de datos en R.\nLimpiar, transformar y exportar bases de datos en R.\n\n¡Al final de esta práctica la idea es que cada un_ elabore y entienda su propio documento de preparación de datos!\n\nEn la sesión de hoy, retomaremos nuestro flujo de trabajo IPO revisado en el práctico 1 de este curso. Para ello, es importante recordar la estructura de nuestro trabajo, la cual debe tener la siguiente ruta:\nRproject/\n├── input/\n│   └── data/\n│       \n├── processing/\n│   └── procesamiento.R/\n│       \n└── output/\n    └── datos-procesados.Rdata/\nParticularmente, nos enfocaremos en el procesamiento de los datos, y para ello debemos tener siempre en mente la estructura de las carpetas IPO.",
    "crumbs": [
      "Prácticos",
      "Sesiones",
      "3: Procesamiento, limpieza y manipulación de datos en R"
    ]
  },
  {
    "objectID": "assignment/03-practico.html#recursos-de-la-práctica",
    "href": "assignment/03-practico.html#recursos-de-la-práctica",
    "title": "Práctica 3. Procesamiento, limpieza y manipulación de datos en R",
    "section": "Recursos de la práctica",
    "text": "Recursos de la práctica\nEn esta práctica trabajaremos con un subset de los datos del Estudio Longitudinal Social de Chile (ELSOC) realizado por COES. Esta base la pueden encontrar en el canal de U-Cursos sección Material Docente, o bien, en el siguiente enlace  ELSOC 2022 podrán descargar el archivo que contiene la base ELSOC 2022.\nRecuerden que siempre es importante trabajar con el manual/libro de códigos de las bases de datos. El manual de la ELSOC 2022 lo pueden encontrar aquí.",
    "crumbs": [
      "Prácticos",
      "Sesiones",
      "3: Procesamiento, limpieza y manipulación de datos en R"
    ]
  },
  {
    "objectID": "assignment/03-practico.html#cargar-librerías",
    "href": "assignment/03-practico.html#cargar-librerías",
    "title": "Práctica 3. Procesamiento, limpieza y manipulación de datos en R",
    "section": "1 Cargar librerías",
    "text": "1 Cargar librerías\nEn R se trabaja a partir de paquetes (packages). ¿Qué son? De forma resumida, los paquetes son un conjunto de funciones o herramientas que pueden ser usadas en R. Los directorios de R donde se almacenan los paquetes se denominan librerías. La lógica es instalar paquetes y luego cargar (o llamar) las librerías cada vez que es necesario usarlas.\nUsualmente para cargar paquetes lo hacemos de la siguiente manera:\n\ninstall.packages(\"paquete\")\nlibrary(paquete)\n\nPero en esta ocasión utilizaremos un paquete llamado pacman, que facilita y agiliza la lectura (instalación y carga) de los paquetes a utilizar en R. De esta forma lo instalamos 1 única vez así:\n\ninstall.packages(\"pacman\")\nlibrary(pacman)\n\nLuego instalaremos y cargaremos los paquetes de R de la siguiente manera, volviendo más eficiente el procedimiento de carga de paquetes.\nEn este práctico utilizaremos seis paquetes\n\npacman: este facilita y agiliza la lectura de los paquetes a utilizar en R\ntidyverse: colección de paquetes, de la cual utilizaremos dplyr y haven\ndplyr: nos permite seleccionar variables de un set de datos\nhaven: cargar y exportar bases de datos en formatos .sav y .dta\ncar: para recodificar/agrupar valores de variables\n\n\npacman::p_load(tidyverse, # colección de paquetes para manipulación de datos\n               dplyr, # para manipular datos\n               haven, # para importar datos\n               car) # para recodificar datos\n               \noptions(scipen = 999) # para desactivar notacion cientifica\nrm(list = ls()) # para limpiar el entorno de trabajo\n\nComo se puede ver, antes de la función p_load hay un ::, esto se refiere a que se “fuerza” que esa función provenga de ese paquete (en este caso del paquete pacman).",
    "crumbs": [
      "Prácticos",
      "Sesiones",
      "3: Procesamiento, limpieza y manipulación de datos en R"
    ]
  },
  {
    "objectID": "assignment/03-practico.html#importar-datos",
    "href": "assignment/03-practico.html#importar-datos",
    "title": "Práctica 3. Procesamiento, limpieza y manipulación de datos en R",
    "section": "2 Importar datos",
    "text": "2 Importar datos\nEn R es es posible importar y exportar datos que se encuentren en cualquier formato: ya sea .csv, .dta, .sav, .xlsx y, por supuesto, .rds y .RData. Sin embargo, para poder hacerlo lo primero es instalar y cargar las librerías que contienen las funciones necesarias para la importación de distintos tipos de archivos.\nPero, ¿dónde están mis datos? Como hemos mencionado, nuestros datos los dejaremos en la carpeta input/data de nuestro proyecto. La base con la que trabajaremos en este práctico pueden encontrarla en el material docente en U-Cursos, o bien, en el siguiente enlace.\nLuego de descargar la base de datos, asegurate de dejar el archivo .sav en la carpeta input/data de tu proyecto. Nota: Los datos tendrán distinto nombre según su formato (.sav, .csv, .dta, etc.).\nUna vez descargados los datos y cargado el paquete haven, procedemos a importar nuestra base de datos. Para ello, en nuestro script, dejamos indicado que a partir de la lectura de los datos con read_sav(), crearemos un objeto llamado elsoc_2022. Fijate en el Enviroment, ya que si lo anterior se logra, el objeto aparecerá allí.\nLa estructura general para importar datos es la siguiente:\nread_*(\"ruta_hacia_archivo/nombre_archivo.*\")\n\nelsoc_2022 &lt;- read_sav(\"input/data/ELSOC_W06_v1.0_SPSS.sav\")\n\n\n\n\n\n\n\nNota\n\n\n\nPara importar los datos en R debemos tener en consideración tres cosas:\n\nCómo se llaman los datos (en nuestro caso ELSOC_W05_v1.0_SPSS)\nEl formato de nuestros datos (en nuestro caso .sav)\nEl lugar de donde están alojados nuestros datos\n\n\n\n\n2.1.1 Importar datos en otros formatos\nNo siempre nuestros datos vendrán en un único formato. Para ello, R cuenta con otras formas de leer distintos tipos de formatos. Puedes ver las principales en el siguiente enlace.",
    "crumbs": [
      "Prácticos",
      "Sesiones",
      "3: Procesamiento, limpieza y manipulación de datos en R"
    ]
  },
  {
    "objectID": "assignment/03-practico.html#explorar-datos",
    "href": "assignment/03-practico.html#explorar-datos",
    "title": "Práctica 3. Procesamiento, limpieza y manipulación de datos en R",
    "section": "3 Explorar datos",
    "text": "3 Explorar datos\nLo más probable es que no trabajemos con todos los datos que importamos, por lo que debemos seleccionar aquellas variables con las que trabajaremos para nuestro problema de investigación (cualquiera sea).\nPero, para ello primero debemos explorar nuestros datos, si no ¿cómo puedo saber qué seleccionar y qué no? En R, las funciones más comunes para explorar datos son:\n\nView(elsoc_2022) # Ver datos\nnames(elsoc_2022) # Nombre de columnas\ndim(elsoc_2022) # Dimensiones\nstr(elsoc_2022) # Estructura de los datos (las clases y categorias de repuesta)\n\nTenemos una base de datos con 1000 casos o filas y con 13 variables o columnas.",
    "crumbs": [
      "Prácticos",
      "Sesiones",
      "3: Procesamiento, limpieza y manipulación de datos en R"
    ]
  },
  {
    "objectID": "assignment/03-practico.html#limpiar-datos",
    "href": "assignment/03-practico.html#limpiar-datos",
    "title": "Práctica 3. Procesamiento, limpieza y manipulación de datos en R",
    "section": "4 Limpiar datos",
    "text": "4 Limpiar datos\nPara todos los subprocesos que involucra la “limpieza” de datos, tenemos al menos dos maneras. Por un lado, podemos usar las funciones de R base, es decir, que no requieren paquetes extras. Por el otro, podemos usar las funciones del paquete dplyr(), que es una gramática o dialecto de manipulación de datos que proporciona un conjunto de coherente funciones o “verbos” básicos para programar.\n\n\n\n\n\n\n\n\n\nPero, ¿por qué gramática y verbos? Porque a diferencia de otras formas de programar, dplyr() está orientado a escribir código como la escritura normal, es decir, de izquierda a derecha. Generalmente, la estructura de dplyr() es:\ndplyr::funcion(datos, variable1, variable2, variable_n)\nEn este práctico solo nos centraremos en manipular datos con dplyr(). Para conocer cómo hacer lo mismo pero con R base visita este enlace.\n\n\n4.1 Seleccionar\nUna vez tenemos claras cúales son las variables que nos interesan, las seleccionamos y almacenamos en una nueva base de datos. Esto debido que evitará confusiones y hará más eficiente nuestros analísis en términos de memoria.\nEn R base, el primer argumento dentro del bracket [] refiere a las filas y el segundo a las columnas. De manera similar, la función select() de dplyr facilita el trabajo a la hora de seleccionar variables. La estructura general del comando siempre es select(datos, variable1, variable2, variable3).\nHay distintas formas de usar select(), ¡veámoslas!\nPor indexación o ubicación en la base de datos:\n\ndplyr::select(elsoc_2022, 1, 2) # la primera y la segunda columna\n\ndplyr::select(elsoc_2022, 1:4) # la primera hasta la cuarta columna\n\ndplyr::select(elsoc_2022, c(1, 4, 5)) # la primera, la cuarta y la quinta columna\n\nTambién podemos usar el nombre de la variable/columna. Si conocemos el nombre de la variable simplemente lo podemos poner y se seleccionará. Con select() no es necesario poner los nombres con comillas \" \":\n\ndplyr::select(elsoc_2022, m0_sexo, m0_edad, m13)\n\n# A tibble: 1,000 × 3\n   m0_sexo m0_edad     m13\n   &lt;chr&gt;     &lt;dbl&gt;   &lt;dbl&gt;\n 1 Hombre       38 4000000\n 2 Mujer        45 2700000\n 3 Hombre       42  600000\n 4 Hombre       29 1250000\n 5 Mujer        53  500000\n 6 Mujer        52      NA\n 7 Mujer        50      NA\n 8 Mujer        57       0\n 9 Mujer        47  600000\n10 Hombre       79      NA\n# ℹ 990 more rows\n\n\nOtra cosa que podemos hacer es renombrar las variables al momento de seleccionarlas, para que tengan un sentido más sustantivo para nosotros.\n\ndplyr::select(elsoc_2022, sexo = m0_sexo, edad = m0_edad, ingreso = m13)\n\n# A tibble: 1,000 × 3\n   sexo    edad ingreso\n   &lt;chr&gt;  &lt;dbl&gt;   &lt;dbl&gt;\n 1 Hombre    38 4000000\n 2 Mujer     45 2700000\n 3 Hombre    42  600000\n 4 Hombre    29 1250000\n 5 Mujer     53  500000\n 6 Mujer     52      NA\n 7 Mujer     50      NA\n 8 Mujer     57       0\n 9 Mujer     47  600000\n10 Hombre    79      NA\n# ℹ 990 more rows\n\n\nPor último, podemos usar select() para reordenar nuestras variables, lo cual es importante por si por ejemplo utilizamos variables de identificación.\n\ndplyr::select(elsoc_2022, m0_edad, m0_sexo, c25, m13)\n\n# A tibble: 1,000 × 4\n   m0_edad m0_sexo   c25     m13\n     &lt;dbl&gt; &lt;chr&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n 1      38 Hombre      1 4000000\n 2      45 Mujer       1 2700000\n 3      42 Hombre      3  600000\n 4      29 Hombre      1 1250000\n 5      53 Mujer       2  500000\n 6      52 Mujer       3      NA\n 7      50 Mujer       2      NA\n 8      57 Mujer       1       0\n 9      47 Mujer       1  600000\n10      79 Hombre      2      NA\n# ℹ 990 more rows\n\n\nAhora, ¡apliquemos conocimientos! seleccionando y renombrando las variables de interés en un nueva base llamada proc_elsoc.\nEn este ejemplo utilizaremos las siguientes variables:\n\nm0_sexo: sexo del entrevistado\nm0_edad: edad del entrevistado\nm13: ingreso mensual entrevistado\nc25: preferencia entre autoritarismo y democracia\nf05_01: justificación violencia hacia delincuentes\n\n\nproc_elsoc &lt;- dplyr::select(elsoc_2022, \n                            edad = m0_edad,\n                            sexo = m0_sexo,\n                            ingreso = m13,\n                            autor_democ = c25,\n                            jv_delincuentes = f05_01)\n\nproc_elsoc\n\n# A tibble: 1,000 × 5\n    edad sexo   ingreso autor_democ jv_delincuentes\n   &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt;       &lt;dbl&gt;           &lt;dbl&gt;\n 1    38 Hombre 4000000           1              NA\n 2    45 Mujer  2700000           1               3\n 3    42 Hombre  600000           3              NA\n 4    29 Hombre 1250000           1               1\n 5    53 Mujer   500000           2               3\n 6    52 Mujer       NA           3               2\n 7    50 Mujer       NA           2               5\n 8    57 Mujer        0           1               4\n 9    47 Mujer   600000           1               3\n10    79 Hombre      NA           2               1\n# ℹ 990 more rows\n\n\n\n\n\n\n\n\nNota\n\n\n\nSi recordamos nuestro ejemplo, podemos almacenar platos distintos en nuestra cocina, a lo cual le llamamos crear un objeto.\nEn este caso, este paso es necesario para comenzar a trabajar con nuestro plato y con los ingredientes que queremos utilizar. Para ello, debemos crear un objeto seleccionando estos ingredientes (variables de la base de datos).\n\n\nEsta nueva base de datos sigue manteniendo los 1.000 casos/filas, pero ahora solo tiene 5 variables/columnas. ¿Qué pasa si solo quiero trabajar con un subconjunto de estos datos, por ejemplo, las mujeres mayores a 25 años? La respuesta es filtrar.\n\n\n4.2 Filtrar\nTal y como regularmente no trabajamos con todas las variables de una base de datos, no siempre desearemos trabajar con todas las observaciones que tenemos en los datos. Habrá ocasiones (varias) en las que querremos trabajar con casos que cumplan ciertas condiciones; que sean de determinada edad, residencia, tiempo o que simplemente hayan respondido de determinada forma una pregunta.\nCon dplyr podemos filtrar nuestros datos con el comando filter(), en el cual debemos especificar los datos y las condiciones que queremos aplicarle a determinadas variables.\n\ndplyr::filter(proc_elsoc, autor_democ == 1)\n\n# A tibble: 552 × 5\n    edad sexo   ingreso autor_democ jv_delincuentes\n   &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt;       &lt;dbl&gt;           &lt;dbl&gt;\n 1    38 Hombre 4000000           1              NA\n 2    45 Mujer  2700000           1               3\n 3    29 Hombre 1250000           1               1\n 4    57 Mujer        0           1               4\n 5    47 Mujer   600000           1               3\n 6    39 Hombre 1350000           1               4\n 7    61 Mujer       NA           1               3\n 8    25 Hombre      NA           1               2\n 9    42 Hombre 1100000           1               4\n10    51 Hombre  800000           1               1\n# ℹ 542 more rows\n\n\nPara indicarle a R que nos filtre aquellos casos que cumplen con la condición de ser iguales a 1 (autor_democ == 1), usamos el operador ==. ¿Y esto de dónde salió? recuerda que los operadores en R los vimos en la segunda sesión\nTambién podemos agregar muchas condiciones para filtrar nuestros datos. Solamente debemos agregarlo, usando los operadores relacionales de R.\n\ndplyr::filter(proc_elsoc, autor_democ == 1 & edad &gt;= 25)\n\n# A tibble: 544 × 5\n    edad sexo   ingreso autor_democ jv_delincuentes\n   &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt;       &lt;dbl&gt;           &lt;dbl&gt;\n 1    38 Hombre 4000000           1              NA\n 2    45 Mujer  2700000           1               3\n 3    29 Hombre 1250000           1               1\n 4    57 Mujer        0           1               4\n 5    47 Mujer   600000           1               3\n 6    39 Hombre 1350000           1               4\n 7    61 Mujer       NA           1               3\n 8    25 Hombre      NA           1               2\n 9    42 Hombre 1100000           1               4\n10    51 Hombre  800000           1               1\n# ℹ 534 more rows\n\n\nPero, ¿y si tengo variables tipo character o factor? Tanto en R base como con dplyr podemos especificar condiciones y filtrar este tipo de datos usando las comillas \" \".\n\ndplyr::filter(proc_elsoc, sexo == \"Mujer\")\n\n# A tibble: 656 × 5\n    edad sexo  ingreso autor_democ jv_delincuentes\n   &lt;dbl&gt; &lt;chr&gt;   &lt;dbl&gt;       &lt;dbl&gt;           &lt;dbl&gt;\n 1    45 Mujer 2700000           1               3\n 2    53 Mujer  500000           2               3\n 3    52 Mujer      NA           3               2\n 4    50 Mujer      NA           2               5\n 5    57 Mujer       0           1               4\n 6    47 Mujer  600000           1               3\n 7    61 Mujer      NA           1               3\n 8    78 Mujer      NA           4               1\n 9    65 Mujer      NA           1               1\n10    69 Mujer      NA           2               1\n# ℹ 646 more rows\n\n\n¡Apliquémos conocimientos! Filtremos nuestros datos quedándonos solo con aquellos casos o personas que tengan o sean mayores a 25 años de edad.\n\nproc_elsoc &lt;- dplyr::filter(proc_elsoc, edad &gt;= 25)\n\nproc_elsoc\n\n# A tibble: 980 × 5\n    edad sexo   ingreso autor_democ jv_delincuentes\n   &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt;       &lt;dbl&gt;           &lt;dbl&gt;\n 1    38 Hombre 4000000           1              NA\n 2    45 Mujer  2700000           1               3\n 3    42 Hombre  600000           3              NA\n 4    29 Hombre 1250000           1               1\n 5    53 Mujer   500000           2               3\n 6    52 Mujer       NA           3               2\n 7    50 Mujer       NA           2               5\n 8    57 Mujer        0           1               4\n 9    47 Mujer   600000           1               3\n10    79 Hombre      NA           2               1\n# ℹ 970 more rows\n\n\n\n\n\n\n\n\nNota\n\n\n\nSi recordamos nuestro ejemplo, ahora estamos sobreescribiendo un objeto, ya que hacemos modificaciones dentro de nuestro mismo plato (objeto). De modo que modificamos una variable (un ingrediente), pero mantenemos lo demás.\nEsta misma idea es la que se presenta en lo que veremos más adelante (cuando recodificamos, tratamos los NA y transformamos variables).\n\n\n\n\n4.3 Recodificar\nUna parte fundamental del procesamiento e integración de datos es la recodificación de variables. Esto implica que, a determinadas variables, le aplicaremos ciertos cambios de acuerdo a ciertas reglas y criterios establecidos con anterioridad, siempre cuidando la coherencia con nuestro objetivo de investigación.\nHay múltiples formas de recodificar en R, pero en este ejemplo trabajaremos con el comando recode() del paquete car.\nEsta vez, recodificaremos las siguientes variables: sexo, ingreso, autor_democ y jv_delincuentes. Para esto, nos apoyaremos en el libro de códigos.\n\n\n\n\n\n\nTip\n\n\n\nEl comando recode() generalmente sigue esta estructura:\ncar::recode(datos$variable, recodes = c('valor_orig1=nuevo_valor1;valor_org2=nuevo_valor2'))\n\n\nRecodifiquemos las variables sexo e ingresos:\n\nproc_elsoc$sexo &lt;- car::recode(proc_elsoc$sexo, recodes = c(\"'Hombre' = 'Masculino'; 'Mujer' = 'Femenino'\"))\n\nproc_elsoc$ingreso &lt;- car::recode(proc_elsoc$ingreso, recodes = c(\"-888 = NA; -999 = NA\"))\n\nproc_elsoc\n\n# A tibble: 980 × 5\n    edad sexo      ingreso autor_democ jv_delincuentes\n   &lt;dbl&gt; &lt;chr&gt;       &lt;dbl&gt;       &lt;dbl&gt;           &lt;dbl&gt;\n 1    38 Masculino 4000000           1              NA\n 2    45 Femenino  2700000           1               3\n 3    42 Masculino  600000           3              NA\n 4    29 Masculino 1250000           1               1\n 5    53 Femenino   500000           2               3\n 6    52 Femenino       NA           3               2\n 7    50 Femenino       NA           2               5\n 8    57 Femenino        0           1               4\n 9    47 Femenino   600000           1               3\n10    79 Masculino      NA           2               1\n# ℹ 970 more rows\n\n\nAhora recodifiquemos las demás variables. Además de recodificar valores propiamente tal, con recode() podemos indicarle, en la misma función, que convierta la variable a factor y/o que le asigne niveles (ej. para variables ordinales).\n\nproc_elsoc$autor_democ &lt;- car::recode(proc_elsoc$autor_democ,\n                            recodes = c(\"1 = 'La democracia es preferible a cualquier otra forma de gobierno'; \n                            2 = 'En algunas circunstancias, un gobierno autoritario puede ser preferible a uno democratico'; \n                            3 = 'A la gente como uno, nos da lo mismo un regimen democratico que uno autoritario'; \n                            4 = 'Ninguna'; \n                            -888 = NA; \n                            -999 = NA\"),\n                            as.factor = TRUE) # convertir a factor\n            \nproc_elsoc$jv_delincuentes &lt;- car::recode(proc_elsoc$jv_delincuentes,\n                                            recodes = c(\"1 = 'Nunca';\n                                                       2 = 'Pocas veces';\n                                                       3 = 'Algunas veces';\n                                                       4 = 'Muchas veces';\n                                                       5 = 'Siempre';\n                                                       -888 = NA; \n                                                       -999 = NA\"),\n                                          as.factor = TRUE, # convertir a factor\n                                          levels = c(\"Nunca\",\n                                                     \"Pocas veces\",\n                                                     \"Algunas veces\",\n                                                     \"Muchas veces\",\n                                                     \"Siempre\"))# ordenamos niveles\n  \nproc_elsoc\n\n# A tibble: 980 × 5\n    edad sexo      ingreso autor_democ                           jv_delincuentes\n   &lt;dbl&gt; &lt;chr&gt;       &lt;dbl&gt; &lt;fct&gt;                                 &lt;fct&gt;          \n 1    38 Masculino 4000000 La democracia es preferible a cualqu… &lt;NA&gt;           \n 2    45 Femenino  2700000 La democracia es preferible a cualqu… Algunas veces  \n 3    42 Masculino  600000 A la gente como uno, nos da lo mismo… &lt;NA&gt;           \n 4    29 Masculino 1250000 La democracia es preferible a cualqu… Nunca          \n 5    53 Femenino   500000 En algunas circunstancias, un gobier… Algunas veces  \n 6    52 Femenino       NA A la gente como uno, nos da lo mismo… Pocas veces    \n 7    50 Femenino       NA En algunas circunstancias, un gobier… Siempre        \n 8    57 Femenino        0 La democracia es preferible a cualqu… Muchas veces   \n 9    47 Femenino   600000 La democracia es preferible a cualqu… Algunas veces  \n10    79 Masculino      NA En algunas circunstancias, un gobier… Nunca          \n# ℹ 970 more rows\n\n\n\n\n\n\n\n\nNota\n\n\n\nComo se puede ver, los valores -888 y -999 fueron codificados como valores pérdidos ya que estos valores significan no sabe y no responde, respectivamente.\n\n\n\n\n4.4 Tratamiento casos pérdidos\nComúnmente, los datos con los que trabajamos suelen tener valores pérdidos o nulos que en R se denominan como NA. Estos valores no nos entregan información útil para nuestros análisis, y pueden generar problemas al momento de, por ejemplo, calcular medidas de tendencia central, u otros procedimientos estadísticos.\nHay diversas maneras de trabajar los valores nulos. Sin embargo, la más sencilla consiste en eliminar los valores nulos que se encuentran presentes en nuestros datos.\nEl primer paso es identificar valores nulos en el conjunto de datos en general, o en alguna variable en específico. Para ello, empleamos la función is.na().\n\nis.na(proc_elsoc)\n\nis.na(proc_elsoc$ingreso)\n\nPero esto es poco útil. Como opción, podemos sumar o contar la cantidad de valores pérdidos.\n\nsum(is.na(proc_elsoc))\n\n[1] 515\n\n\n¿Y si no sabemos qué variables o columnas tienen casos pérdidos? Una forma es usar la función colSums().\n\ncolSums(is.na(proc_elsoc))\n\n           edad            sexo         ingreso     autor_democ jv_delincuentes \n              0               0             435              13              67 \n\n\nUna vez identificamos los valores nulos, podemos proceder a removerlos de la base de datos. El comando na.omit() eliminará todas las filas que presenten casos perdidos.\n\nproc_elsoc &lt;- na.omit(proc_elsoc)\n\nproc_elsoc\n\n# A tibble: 496 × 5\n    edad sexo      ingreso autor_democ                           jv_delincuentes\n   &lt;dbl&gt; &lt;chr&gt;       &lt;dbl&gt; &lt;fct&gt;                                 &lt;fct&gt;          \n 1    45 Femenino  2700000 La democracia es preferible a cualqu… Algunas veces  \n 2    29 Masculino 1250000 La democracia es preferible a cualqu… Nunca          \n 3    53 Femenino   500000 En algunas circunstancias, un gobier… Algunas veces  \n 4    57 Femenino        0 La democracia es preferible a cualqu… Muchas veces   \n 5    47 Femenino   600000 La democracia es preferible a cualqu… Algunas veces  \n 6    39 Masculino 1350000 La democracia es preferible a cualqu… Muchas veces   \n 7    42 Masculino 1100000 La democracia es preferible a cualqu… Muchas veces   \n 8    51 Masculino  800000 La democracia es preferible a cualqu… Nunca          \n 9    38 Masculino 1600000 A la gente como uno, nos da lo mismo… Algunas veces  \n10    45 Femenino   500000 La democracia es preferible a cualqu… Nunca          \n# ℹ 486 more rows",
    "crumbs": [
      "Prácticos",
      "Sesiones",
      "3: Procesamiento, limpieza y manipulación de datos en R"
    ]
  },
  {
    "objectID": "assignment/03-practico.html#transformar-variables",
    "href": "assignment/03-practico.html#transformar-variables",
    "title": "Práctica 3. Procesamiento, limpieza y manipulación de datos en R",
    "section": "5 Transformar variables",
    "text": "5 Transformar variables\nUn último paso en el procesamiento de datos es la creación o derivación de nuevas variables a partir de los datos que ya tenemos. Esto es relevante no solo para procesar datos, sino porque permite generar variables que se alineen mucho mejor con nuestros objetivos de análisis.\nA diferencia de R base, con la función mutate() de dplyr podemos recodificar todas nuestras variables en un solo código si así lo queremos. Además, nos ahorramos especificar en todo momento la base de datos, ya que esa es la lógica de programación con dplyr().\nLa estructura de mutate() es generalmente esta:\ndplyr::mutate(datos, nueva_variable = funcion())\nAdemás, la función mutate() de dplyr no solo nos permite recodificar variables, sino que también crear otras nuevas manteniendo las originales. Para este ejemplo usaremos dos funciones adicionales de dplyr que, al combinarlas con mutate(), podremos transformar variables de manera muy sencilla.\nEn este ejemplo, transformaremos las variables edad e ingresos, y crearemos una nueva variable llamada año de la encuesta y otra llamada ingreso_minimo.\n¡Veámos cómo se hace!\nGeneremos las nueva variable año:\n\nproc_elsoc &lt;- mutate(proc_elsoc, ano = 2022)\n\nproc_elsoc\n\n# A tibble: 496 × 6\n    edad sexo      ingreso autor_democ                     jv_delincuentes   ano\n   &lt;dbl&gt; &lt;chr&gt;       &lt;dbl&gt; &lt;fct&gt;                           &lt;fct&gt;           &lt;dbl&gt;\n 1    45 Femenino  2700000 La democracia es preferible a … Algunas veces    2022\n 2    29 Masculino 1250000 La democracia es preferible a … Nunca            2022\n 3    53 Femenino   500000 En algunas circunstancias, un … Algunas veces    2022\n 4    57 Femenino        0 La democracia es preferible a … Muchas veces     2022\n 5    47 Femenino   600000 La democracia es preferible a … Algunas veces    2022\n 6    39 Masculino 1350000 La democracia es preferible a … Muchas veces     2022\n 7    42 Masculino 1100000 La democracia es preferible a … Muchas veces     2022\n 8    51 Masculino  800000 La democracia es preferible a … Nunca            2022\n 9    38 Masculino 1600000 A la gente como uno, nos da lo… Algunas veces    2022\n10    45 Femenino   500000 La democracia es preferible a … Nunca            2022\n# ℹ 486 more rows\n\n\n\nTransformar variables con case_when() e if_else()\nGeneremos nuevas variables para edad e ingresos dejándolas como tramos con case_when().\n\nproc_elsoc &lt;- mutate(proc_elsoc,\n                     tramo_edad = case_when(edad &lt;= 29 ~ \"Jovenes\",\n                                            edad &gt;= 30 & edad &lt;= 59 ~ \"Adultos\",\n                                            edad &gt;= 60 ~ \"Adutos mayores\"))\n\n\nproc_elsoc &lt;- mutate(proc_elsoc,\n                     tramo_ingreso = case_when(ingreso &lt;= 250000 ~ \"Tramo 1\",\n                                                ingreso &gt; 250000 & ingreso &lt;= 500000 ~ \"Tramo 2\",\n                                                ingreso &gt; 500000 & ingreso &lt;= 750000 ~ \"Tramo 3\",\n                                                ingreso &gt; 750000 & ingreso &lt;= 1000000 ~ \"Tramo 4\",\n                                                ingreso &gt; 1000000 ~ \"Tramo 5\"))\n\nproc_elsoc\n\n# A tibble: 496 × 8\n    edad sexo      ingreso autor_democ          jv_delincuentes   ano tramo_edad\n   &lt;dbl&gt; &lt;chr&gt;       &lt;dbl&gt; &lt;fct&gt;                &lt;fct&gt;           &lt;dbl&gt; &lt;chr&gt;     \n 1    45 Femenino  2700000 La democracia es pr… Algunas veces    2022 Adultos   \n 2    29 Masculino 1250000 La democracia es pr… Nunca            2022 Jovenes   \n 3    53 Femenino   500000 En algunas circunst… Algunas veces    2022 Adultos   \n 4    57 Femenino        0 La democracia es pr… Muchas veces     2022 Adultos   \n 5    47 Femenino   600000 La democracia es pr… Algunas veces    2022 Adultos   \n 6    39 Masculino 1350000 La democracia es pr… Muchas veces     2022 Adultos   \n 7    42 Masculino 1100000 La democracia es pr… Muchas veces     2022 Adultos   \n 8    51 Masculino  800000 La democracia es pr… Nunca            2022 Adultos   \n 9    38 Masculino 1600000 A la gente como uno… Algunas veces    2022 Adultos   \n10    45 Femenino   500000 La democracia es pr… Nunca            2022 Adultos   \n# ℹ 486 more rows\n# ℹ 1 more variable: tramo_ingreso &lt;chr&gt;\n\n\nAhora, generemos una nueva variable llamada ingreso_minimo con la función if_else().\n\nproc_elsoc &lt;- mutate(proc_elsoc,\n                     ingreso_minimo = if_else(ingreso &lt; 410000, \"debajo minimo\", \"sobre minimo\"))\n\nselect(proc_elsoc, ingreso, ingreso_minimo) #veamosla!\n\n# A tibble: 496 × 2\n   ingreso ingreso_minimo\n     &lt;dbl&gt; &lt;chr&gt;         \n 1 2700000 sobre minimo  \n 2 1250000 sobre minimo  \n 3  500000 sobre minimo  \n 4       0 debajo minimo \n 5  600000 sobre minimo  \n 6 1350000 sobre minimo  \n 7 1100000 sobre minimo  \n 8  800000 sobre minimo  \n 9 1600000 sobre minimo  \n10  500000 sobre minimo  \n# ℹ 486 more rows",
    "crumbs": [
      "Prácticos",
      "Sesiones",
      "3: Procesamiento, limpieza y manipulación de datos en R"
    ]
  },
  {
    "objectID": "assignment/03-practico.html#guardar-y-exportar-datos-procesados",
    "href": "assignment/03-practico.html#guardar-y-exportar-datos-procesados",
    "title": "Práctica 3. Procesamiento, limpieza y manipulación de datos en R",
    "section": "6 Guardar y exportar datos procesados",
    "text": "6 Guardar y exportar datos procesados\n¡Llegamos al final! El último paso que nos queda es guardar y exportar nuestra base de datos procesada. Siguiendo el flujo de trabajo propuesto, guardaremos la base procesada en formato .Rdata y la alojaremos en la carpeta output de nuestro proyecto.\nEste último paso es bastante sencillo, solo debemos especificar la base que queremos guadar y su ruta:\n\nsave(proc_elsoc,file=\"output/proc_elsoc.Rdata\")",
    "crumbs": [
      "Prácticos",
      "Sesiones",
      "3: Procesamiento, limpieza y manipulación de datos en R"
    ]
  },
  {
    "objectID": "assignment/03-practico.html#resumen",
    "href": "assignment/03-practico.html#resumen",
    "title": "Práctica 3. Procesamiento, limpieza y manipulación de datos en R",
    "section": "Resumen",
    "text": "Resumen\nHoy aprendimos a procesar datos en R. En detalle, vimos:\n\nCómo establecer un flujo de trabajo de procesamiento y análisis de datos en R.\nInstalar y cargar paquetes y librerías, así como también leer bases de datos en R.\nLimpiar, transformar y exportar bases de datos en R.",
    "crumbs": [
      "Prácticos",
      "Sesiones",
      "3: Procesamiento, limpieza y manipulación de datos en R"
    ]
  },
  {
    "objectID": "assignment/02-practico.html",
    "href": "assignment/02-practico.html",
    "title": "Práctica 2. Conocimientos básicos de programación en R",
    "section": "",
    "text": "El objetivo de esta guía práctica es introducirnos en los procedimientos básicos del uso del lenguaje y ambiente R.\nEn detalle, aprenderemos:\n\nR como una cocina\nHerramientas básicas de programación en R\nOperadores en R\nTipos de datos\n\n\n\n\nEn la sesión de hoy, comenzaremos de forma distinta, no utilizaremos los conceptos técnicos del software de lleno, sino que los iremos conociendo de a poco. Para cumplir ese objetivo, es que la idea es iniciar con un ejemplo, al que llamaremos “R es una cocina”.\nLo primero, entonces, es que pensemos que RStudio, nuestra interfaz que visualizamos en estos momentos, es una cocina. Es importante que usemos la imaginación, ya que evidentemente no se ve como una cocina.\n\n\n\n\nCuando cocinamos siempre debemos realizar un paso previo antes de todo: preparar la cocina o el espacio de trabajo.\n\n\n\npacman::p_load(beepr, dplyr, tidyverse) \nbeep(1)\n\n\n\n\n\n\n\nNota\n\n\n\nSin este paso, no podemos empezar a trabajar en nuestra sesión, por eso es muy impotante. Al igual que cuando precalentamos un horno o esperamos a que caliente el aceite antes de colocar los ingredientes.\n\n\nCon la cocina precalentada, podemos avanzar al siguiente paso.\n\n\n\n\n\n\n\n\n\nImportante\n\n\n\nDeben ser la misma cantidad de elementos dentro del parentésis\n\n\n\ningrediente_1 &lt;- c(2,3,4,5,6,7,4,3,8,1) #10 casos\ningrediente_2 &lt;- c(100, 200, 50, 30, 100, 91, 87, 100, 55, 61)\ningrediente_3 &lt;- c(10, 25,30,35,35,20,15,10,20, 25)\ningrediente_4 &lt;- c(\"pisca\", \n                   \"cucharadita\", \n                   \"cucharada\", \n                   \"pisca\", \n                   \"pisca\", \n                   \"cucharadita\", \n                   \"cucharadita\", \n                   \"cucharada\", \n                   \"cucharada\", \n                   \"cucharada\")\n\nSi vamos viendo, nuestros ingredientes se van acumulando en el cuadrante de abajo (como valores). En ese sentido y en contexto de nuestro ejemplo, nuestra cocina va almacenando los ingredientes que queremos utilizar para hacer un plato.\n\n\n\n\nplato &lt;- data.frame(ingrediente_1, \n                    ingrediente_2,\n                    ingrediente_3, \n                    ingrediente_4)\nbeep(1)\n\nSi volvemos a mirar en el cuadrante de abajo, el plato está listo (tal como lo indica el sonido de la cocina al finalizar la acción) y se encuentra almacenado no como un valor, sino que como un dato. Al que llamaremos, en términos más técnicos, un objeto.\nAsí, tenemos hasta ahora, combinando el contexto de nuestro ejemplo y los tecnicismos del software:\n\n\nUn plato que corresponde a un objeto\n\n\nCuatro ingredientes que componen el plato, que son valores que integran el objeto, dispuestos en columnas.\n\n \n\n\n\n\n\nPensemos que, de tanto que se ha encontrado el plato dentro de la cocina, llegaron las hormigas a buscarlo.\nPara seguir con la idea, debemos agregarlas de forma manual, de la siguiente manera:\n\nplato$ID &lt;- c(\"hormiga_a\",\n        \"hormiga_b\", \n        \"hormiga_c\", \n        \"hormiga_d\", \n        \"hormiga_e\", \n        \"hormiga_f\",\n        \"hormiga_g\", \n        \"hormiga_h\", \n        \"hormiga_i\", \n        \"hormiga_j\")\n\nAsí, las hormigas se almacenaran en el valor ID, ya que será el identificador de cada una dentro de nuestra cocina y, específicamente, dentro de nuestro plato.\nSi retomamos la estrcutura de datos de nuestros ingredientes, estos se componene de 10 valores, que, en términos de nuestro ejemplo, son partes que componenen el ingrdiente (como gramos y cucharadas). Esto lo hicimos a propósito, para que cada valor o parte del ingrediente este asociado a cada hormiga. De ese modo, podemos ver cuánto de cada ingrediente de nuestro plato se llevo cada hormiga y, con esto, hacemos un análisis más detallado de lo que ellas se llevaron del plato.\nEn ese sentido, ya no sólo decimos:\n\n“Llegaron las hormigas al plato y se llevan cosas de este”\n\nSino que, podemos decir cosas más específicas al respecto:\n\n“Dentro del plato, la hormiga_a se llevo una pisca del ingrediente_4 y la hormiga_b se llevo 25 milígramos del ingrediente_3”\n\n \n\n\n\n¡Con estadística descriptiva!\n\nPara ello, podemos usar una tabla de contingencia, con la cual cruzamos dos datos, en este caso hormigas con el ingrediente_4. Quedaría algo así:\n\nsummarytools::ctable(plato$ID, plato$ingrediente_4)\n\nCross-Tabulation, Row Proportions  \nID * ingrediente_4  \nData Frame: plato  \n\n----------- --------------- ------------ ------------- ------------ -------------\n              ingrediente_4    cucharada   cucharadita        pisca         Total\n         ID                                                                      \n  hormiga_a                   0 (  0.0%)    0 (  0.0%)   1 (100.0%)    1 (100.0%)\n  hormiga_b                   0 (  0.0%)    1 (100.0%)   0 (  0.0%)    1 (100.0%)\n  hormiga_c                   1 (100.0%)    0 (  0.0%)   0 (  0.0%)    1 (100.0%)\n  hormiga_d                   0 (  0.0%)    0 (  0.0%)   1 (100.0%)    1 (100.0%)\n  hormiga_e                   0 (  0.0%)    0 (  0.0%)   1 (100.0%)    1 (100.0%)\n  hormiga_f                   0 (  0.0%)    1 (100.0%)   0 (  0.0%)    1 (100.0%)\n  hormiga_g                   0 (  0.0%)    1 (100.0%)   0 (  0.0%)    1 (100.0%)\n  hormiga_h                   1 (100.0%)    0 (  0.0%)   0 (  0.0%)    1 (100.0%)\n  hormiga_i                   1 (100.0%)    0 (  0.0%)   0 (  0.0%)    1 (100.0%)\n  hormiga_j                   1 (100.0%)    0 (  0.0%)   0 (  0.0%)    1 (100.0%)\n      Total                   4 ( 40.0%)    3 ( 30.0%)   3 ( 30.0%)   10 (100.0%)\n----------- --------------- ------------ ------------- ------------ -------------\n\n\nAquí podemos ver que la hormiga_a se llevo una pisca del ingrediente_4 de nuestro plato y, al contrario, la horrmiga_c se llevo una cucharada.\n\n\n\n\n¡Filtramos!\n\n\nhg &lt;- plato %&gt;% filter(ID == \"hormiga_g\")\n\nstr(hg)\n\n'data.frame':   1 obs. of  5 variables:\n $ ingrediente_1: num 4\n $ ingrediente_2: num 87\n $ ingrediente_3: num 15\n $ ingrediente_4: chr \"cucharadita\"\n $ ID           : chr \"hormiga_g\"\n\n\nHasta acá hemos visto la utilidad de nuestra cocina, tanto en el almacenamiento de los ingredientes, la creación de platos y en el análisis de los procesos que pueden estar ocurriendo dentro de la misma.\nA la información que vimos en el apartado anterior, ahora se agrega un tecnicismo más:\n\nLas hormigas poseen un pocentaje del ingrediente, en ese sentido, toman un valor de cada ingrediente que compone el plato, lo que se encuentra en las filas\n\n\nNuestra cocina nos permite calcular cómo se distribuyen estos valores de cada ingrediente entre las hormigas\n\nCon lo anterior, ya podemos describirlo y entenderlo en el lenguaje de R y de ciencia de datos. Ahora, nos iremos a lo técnico, pero siempre retomando nuestro ejemplo de que R es una cocina.\n \n\n\n\n\n\n\nAntes recordemos tres conceptos básicos: tablas, filas y columnas.\nUna tabla esta compuesta por filas y columnas, y aquello entrega celdas o casillas.\n\nLas filas son horizontales\nLas columnas verticales\nEn la tabla estas se cruzan entre sí, dicho cruce son las celdas\n\n\n¿Para qué nos sirve saber esto?\nPara entender el funcionamiento de una base de datos.\nRStudio para hacer los análisis estadísticos, utiliza bases de datos, las cuales podemos entender, con la terminología que manejamos hasta ahora, como “tablas” con datos en su interior.\n\n\n\nAsí, una celda es el dato de un caso específico para una variable específica\n\n\nEntonces, hasta ahora tenemos lo siguiente:\n\n\n\n\n\n\n\n\nEstructura básica\nEn Ciencias Sociales\nEn nuestro ejemplo\n\n\n\n\nFila\nCasos\nHormigas\n\n\nColumnas\nVariables\nIngredientes\n\n\nMatriz\nBases de datos o data frames\nPlato\n\n\n\n \nAhora bien, lo que hicimos en la práctica con el plato, es que este se comporta como el almacenador de “algo” y le asignamos los ingredientes (que, en el fondo, son valores).\n\nEn R, como es una cocina, trabajamos en función de ir creando platos (u, dicho de forma técnica, objetos)\n\n\n\n\nPodemos agregar ingredientes a un mismo plato, en su proceso de preparación, en un lenguaje más técnico, esto es sobreescribir un objeto\n\n\n\nPodemos ir almacendando platos distintos en nuestra cocina, en un lenguaje más técnico, esto es crear un objeto\n\n\n\n\nview(plato)\n\n\n\n\n\n\nEn nuestro estudio, tendremos bases de datos provinientes de encuestas, pueden ser de opinión, censales, etc.\nEn ese sentido, nuesta estructura de datos se verá de la siguiente manera:\n\nLas filas serán personas\nLas columnas preguntas de un cuestionario\nLa base de datos la combinacion de ambas\n\n\nAsí, las celdas son la respuesta específica de una persona a una pregunta específica\n\n\nSi lo vemos dentro de nuestra analogía:\n\nLa encuesta es nuestro plato\nLas preguntas son los ingredientes que componen ese plato\n\nAl entender que las hormigas sacan un pocentaje de los ingredientes, le entregamos un valor específico a cada una de ese ingrediente.\nEn ese sentido:\n\nCierto porcentaje del ingrediente le pertenece a una hormiga\n\nEn los datos de una encuesta:\n\nCierto porcentaje del dato le pertenece a una persona, ya que aquello es su respuesta a la pregunta del cuestionario\n\n\n\n\n\n\n\nUtilizar nuestra cocina estadística para observar esas respuestas que tienen un valor para nosotr-s.\nLas respuestas de las personas nos indican tendencias, percepciones, y condiciones objetivas en las que viven. Esos datos son valiosos para nuestra labor, ya que podemos analizarlos para tener una noción de cómo se distirbuyen dichas caracterísitcas en la sociedad.\nDel mismo modo, podriamos ver cómo se distribuye cierto ingrediente en las homigas, o qué ingrediente prefieren más la hormigas sólo observando sus frecuencias e identificando el ingrediente más popular.\n\n¿Cuál es la utilidad de eso en lo concreto?: Nos permite realizar hipótesis y preguntas de investigación.\n\n\n\n\n\n\n\n\nEn el caso de las hormigas…\nEn Ciencias Sociales…\n\n\n\n\nPodríamos hipotetizar, por ejemplo, que el ingrediente 1 es más dañino, y esa razón podría ser una posible explicación a su baja frecuencia. Otra hipótesis podría ser que ese ingrediente es más difícil de conseguir del plato.\nAlgo similar se ve cuando evaluamos los ingresos a nivel de hogar. Con análisis descriptivos ya podemos ver brechas, desigualdades y aproximaciones a la distribución, según los estadísticos que calculemos.\n\n\n\n\nCon esto en mente, ¡ya podemos andentrarnos a un lenguaje más técnico y los conocimientos básicos de programación para utilizar RStudio!\n\n\n\n\nRevisemos algunos conocimientos básicos para la programación en R. Pero antes, tengamos dos cosas en mente:\n\nPrimero, ¿qué es codificar?, en programación codificar corresponde a un proceso de entrega de instrucciones en un lenguaje específico, siguiendo un orden lógico y coherente.\nSegundo, de aquí en adelante nos manejaremos con una máxima en el curso; existe un acuerdo implícito entre tú y R: R hará todos los cálculos por ti, pero en cambio tú debes dar las instrucciones con total precisión.\n\n\n\nUno de los usos más sencillos y que están a la base de R, es usarlo como una calculadora.\n\n5+5\n\n[1] 10\n\n25/5\n\n[1] 5\n\n2*2\n\n[1] 4\n\n27-2\n\n[1] 25\n\n\nComo podrás ver, el resultado de estas instrucciones aparecen como un [1] en la consola. También podemos hacer operatorias más complejas y con más cálculos.\n\n12*(7+2)+(45-32)+8\n\n[1] 129\n\n22^2 - 2^2\n\n[1] 480\n\n1/200 * 30\n\n[1] 0.15\n\n\nSiguiendo el ejemplo de las hormigas, estas acciones son las que nos permiten utilizar la cocina para calcular distribuciones de los ingredientes por hormiga.\n\n\n\nEn nuestro ejemplo, hablamos de sobreescribir y crear objetos, si bien lo hicimos sin saber muy bien a qué nos referiamos, dentro de lo más técnico lo podemos entender de la siguiente manera:\nLo primero, la frase que utiliaremos de aquí en adelante: R es un lenguaje de programación orientado a objetos.\n¿Qué significa eso?: implica que podemos crear elementos dentro del ambiente de R, a los cuales les asignaremos información que quedará almacenada, información que puede ir desde números, palabras, cálculos hasta grandes bases de datos.\nTodas las instrucciones en R en las que crees objetos, es decir, instrucciones de asignación, tendrán la misma estructura:\nnombre_objeto &lt;- valor\nEl asignador &lt;- se utiliza para crear objetos y forma parte de uno de los operadores usados en R.\nLos elementos que podemos asignar a objetos son múltiples, como números, palabras acompañadas siempre de corchetes \" \" y vectores que corresponden a un conjunto o secuencia de elementos del mismo tipo definidos por la funcion de concatenar = c().\nVeamos un ejemplo creando objetos:\n\nx &lt;- 4 # asignar\n\nx # ejecutar\n\n[1] 4\n\ny &lt;- \"Hola mundo\" # los carácteres alfabéticos siempre van acompañados de corchetes\n\ny \n\n[1] \"Hola mundo\"\n\n\n¿Y concatenando? Hacemos un vector.\nEsto es lo que hicimos para crear los ingredientes del plato, el plato y las hormigas del plato. En definitiva creamos vectores y aquello lo hicimos a partir de la creación de obejtos: Es decir, asignamos valores concatenados a un objeto contenedor de esta información (en este caso, que llamamos ingrediente_1, ingrediente_2, ingrediente_3, ingrediente_4 platoy ID)\n\ningrediente_1 &lt;- c(2,3,4,5,6,7,4,3,8,1) #10 casos\ningrediente_2 &lt;- c(100, 200, 50, 30, 100, 91, 87, 100, 55, 61)\ningrediente_3 &lt;- c(10, 25,30,35,35,20,15,10,20, 25)\ningrediente_4 &lt;- c(\"pisca\", \n                   \"cucharadita\", \n                   \"cucharada\", \n                   \"pisca\", \n                   \"pisca\", \n                   \"cucharadita\", \n                   \"cucharadita\", \n                   \"cucharada\", \n                   \"cucharada\", \n                   \"cucharada\")\n\nplato$ID &lt;- c(\"hormiga_a\",\n        \"hormiga_b\", \n        \"hormiga_c\", \n        \"hormiga_d\", \n        \"hormiga_e\", \n        \"hormiga_f\",\n        \"hormiga_g\", \n        \"hormiga_h\", \n        \"hormiga_i\", \n        \"hormiga_j\")\n\nAhora, ¿cómo se vería esto en vectores que utilizaríamos para un trabajo?:\n\nedad &lt;- c(18,22,36,19,35) # concatenar (variable de razon)\n\nedad\n\n[1] 18 22 36 19 35\n\ngenero &lt;- c(3,1,1,2,3) # masculino = 1; femenino = 2; transgenero = 3 (variable nominal)\n\ngenero \n\n[1] 3 1 1 2 3\n\ngse &lt;- c(\"ABC1\", \"C2\", \"E\", \"AbC1\", \"E\")  # tambíen se pueden usar carácteres (variable ordinal)\n\ngse\n\n[1] \"ABC1\" \"C2\"   \"E\"    \"AbC1\" \"E\"   \n\n\n¡Hagamos una pequeño reto!: ¿Cuál es el valor de a y b? Si a &lt;- 5; b &lt;- a; a &lt;- 4\n\na &lt;- 5\nb &lt;- a\na &lt;- 4\n\nprint(a) # imprimir en la consola\n\n[1] 4\n\nprint(b)\n\n[1] 5\n\na + 10\n\n[1] 14\n\n\nY… ¿En el ejemplo de las hormigas?:\n\n# Para observar los valores del ingrediente 1\n\nprint(ingrediente_1) # imprimir en la consola\n\n [1] 2 3 4 5 6 7 4 3 8 1\n\n\nSin embargo, considerando que anteriomente alojamos el ingrediente_1 en el objeto plato, podemos hacer lo siguiente también para observar los valores del ingrediente_1:\n\nprint(plato$ingrendiente_1) # imprimir en la consola\n\nEl signo $ es otro operador importante, que nos permite indicar en qué objeto está almacenada cierta variable que queremos observar.\n¿Por qué debemos utilizarlo? Por nuestra premisa inicial: Dado que R esta orientado a la creación de objetos, por ende cualquier valor esta almacenado en un objeto. En este caso ingrediente_1 lo integramos dentro del objeto plato.\nEsto último esta vinculado a un proceso fundamental en R: la creación de data.frames, ya que si vemos la naturaleza del objeto plato con la función class(plato), esto nos indicará que se trata de un data.frame.\nUn Data.frame es una estructura de datos de dos dimensiones (columnas y filas), donde las columnas pueden ser de diferente naturaleza, pero deben tener el mismo largo. A partir de ella agrupamos variables en una matriz, o sea, construimos una base de datos. Es como “pegar” las columnas (variables) una al lado de otra.\nPara verlo con otro ejemplo, creemos un data.frame con los vectores que ya creamos antes:\n\nbase1 &lt;- data.frame(genero, gse, edad) # Resulta como objeto de \"datos\" en\n                                       # entorno.\n\nbase1\n\n  genero  gse edad\n1      3 ABC1   18\n2      1   C2   22\n3      1    E   36\n4      2 AbC1   19\n5      3    E   35\n\n\nComo puedes ver, para crear el data.frame, tanto en este ejemplo como cuando creamos el plato, usamos la función que lleva el mismo nombre, colocando dentro del paréntesis los vectores que creamos anteriormente: data.frame(mis_vectores).\nAhora, creemos un data.frame desce cero. En este ejemplo, crearemos los vectores dentro de la función data.frame().\n\n# Ejemplo de como crear un data.frame desde 0: \n\nbase2 &lt;- data.frame(Sexo=c(\"H\",\"M\",\"H\",\"M\",\"H\",\"M\"),\n                    Estatura=c(1.83,1.76,1.82,1.60,1.90,1.66),\n                    Peso=c(67,58,66,48,75,55))\n\nhead(base2)  # Me permite visualizar las primeras filas\n\n  Sexo Estatura Peso\n1    H     1.83   67\n2    M     1.76   58\n3    H     1.82   66\n4    M     1.60   48\n5    H     1.90   75\n6    M     1.66   55\n\n\n\n\n\n\n\nAntes de trabajar con datos, debemos conocer el concepto de operadores. Estos símbolos no son de uso exclusivo en R, pero no todos tienen el mismo significado que en otros softwares.\nLos operadores son símbolos que permiten, en los distintos procedimientos de procesamiento, simplificar procesos. Por ejemplo, serán útilizados cuando filtremos nuestros datos para personas de ciertas categorías, cuando calculemos variables nuevas (de manera aritmética o condicional) o, simplemente, cuando queramos hacer procesos “concatenados”.\n\n¡Veamos algunos ejemplos!\n\n20 == 5 # igualdad\n\n[1] FALSE\n\n30 &gt;= 14 # mayor o igual que\n\n[1] TRUE\n\n22 &lt;= 2 # menor o igual que\n\n[1] FALSE\n\n25 != 10 # no es igual a\n\n[1] TRUE\n\np = 10; y = 5; p &lt;= y # operatoria en objetos\n\n[1] FALSE\n\n\n\n\n\n\n\nEn R, al igual que en la mayoría de lenguajes de programación, contamos con datos de diversos tipos, en razón de los cuales podemos realizar determinados procedimientos de tratamiento o análisis.\nLos tipos de datos están íntimamente relacionados con el nivel de medición de las variables a las que corresponden. Como viste en clases, la teoría de los niveles de medición contempla cuatro tipos:\n\n\n\n\nPara responder esta pregunta, ¡metamos nuestras manos en los datos!. En esta oportunidad trabajaremos sobre un subset de datos del Modulo de Desigualdad Social de la encuesta International Social Survey Programme del 2019. Esta base la descargaremos directamente desde internet por esta vez (en futuras sesiones aprenderemos cómo cargar bases de datos).\n\n#cargamos la base de datos desde internet\n\nload(url(\"https://github.com/Andreas-Lafferte/descriptiva/blob/main/data/db-proc.RData?raw=true\"))\n\nhead(rand_df) # ver primeros casos de la base\n\n# A tibble: 6 × 5\n  pais       edad sexo   ideologia          percepcion_conflictos\n  &lt;chr&gt;     &lt;dbl&gt; &lt;fct&gt;  &lt;fct&gt;                              &lt;dbl&gt;\n1 Suiza        23 Hombre Izquierda                              2\n2 Chile        27 Mujer  Sin identificación                     2\n3 Rusia        43 Mujer  Sin identificación                     1\n4 Finlandia    71 Mujer  Sin identificación                     1\n5 Japon        54 Mujer  Izquierda                              2\n6 Lituania     67 Mujer  Sin identificación                     1\n\n\n\n\nLos datos character están directamente asociados a las variables cualitativas (o categóricas). Generalmente suelen ser variables de texto abierto, como es el caso de la variable pais, que detalla el país de procedencia de la persona encuestada.\nPara conocer cuál es el tipo de variable en R, utilizamos el comando class(), y para detallar dentro de la base de datos cuál es la variable de interés, utilizamos el símbolo $ posterior a la base de datos:\n\nclass(rand_df$pais) # siempre es la misma estructura = base$variable\n\n[1] \"character\"\n\n\nSin embargo, estas variables no tienden a ser las mejores a la hora de presentar nuestros resultados. Como solución, tenemos las variables de tipo Factor.\n\n\n\nLas variables de tipo factor son ideales para trabajar con variables de tipo nominal u ordinal. Esto es así debido a que permiten establecer un orden entre las categorías de la variable, lo cual es fundamental si trabajamos, por ejemplo, con variables nominales como el sexo de los encuestados, o si trabajamos con variables ordinales como su ideología política.\n\nclass(rand_df$sexo)\n\n[1] \"factor\"\n\nclass(rand_df$ideologia)\n\n[1] \"factor\"\n\n\n\n\n\nLas variables de tipo numeric son variables de tipo númerica, las cuales pueden ser intervales o de razón. Así, por ejemplo, cuando trabajamos con variables de razón trabajamos con variables como el número de hijos o la edad (aunque sería extraño encuestar a alguien con 0 años).\n\nclass(rand_df$edad)\n\n[1] \"numeric\"\n\n\n\n\n\n\n\nEn R se trabaja a partir de paquetes (packages). ¿Qué son? De forma resumida, los paquetes son un conjunto de funciones o herramientas que pueden ser usadas en R. Los directorios de R donde se almacenan los paquetes se denominan librerías. La lógica es instalar paquetes y luego cargar (o llamar) las librerías cada vez que es necesario usarlas.\nUsualmente para cargar paquetes lo hacemos de la siguiente manera:\n\ninstall.packages(\"paquete\")\nlibrary(paquete)\n\nPero en esta ocasión utilizaremos un paquete llamado pacman, que facilita y agiliza la lectura (instalación y carga) de los paquetes a utilizar en R. De esta forma lo instalamos 1 única vez así:\n\ninstall.packages(\"pacman\")\nlibrary(pacman)\n\nLuego instalaremos y cargaremos los paquetes de R de la siguiente manera, volviendo más eficiente el procedimiento de carga de paquetes.\nEn este práctico utilizaremos seis paquetes\n\npacman: este facilita y agiliza la lectura de los paquetes a utilizar en R\ntidyverse: colección de paquetes, de la cual utilizaremos dplyr y haven\ndplyr: nos permite seleccionar variables de un set de datos\nhaven: cargar y exportar bases de datos en formatos .sav y .dta\ncar: para recodificar/agrupar valores de variables\n\n\npacman::p_load(tidyverse, # colección de paquetes para manipulación de datos\n               dplyr, # para manipular datos\n               haven, # para importar datos\n               car # para recodificar datos\n               )\n\noptions(scipen = 999) # para desactivar notacion cientifica\nrm(list = ls()) # para limpiar el entorno de trabajo\n\nComo se puede ver, antes de la función p_load hay un ::, esto se refiere a que se “fuerza” que esa función provenga de ese paquete (en este caso del paquete pacman).",
    "crumbs": [
      "Prácticos",
      "Sesiones",
      "2: Conocimientos básicos de programación en R"
    ]
  },
  {
    "objectID": "assignment/02-practico.html#objetivo-de-la-práctica",
    "href": "assignment/02-practico.html#objetivo-de-la-práctica",
    "title": "Práctica 2. Conocimientos básicos de programación en R",
    "section": "",
    "text": "El objetivo de esta guía práctica es introducirnos en los procedimientos básicos del uso del lenguaje y ambiente R.\nEn detalle, aprenderemos:\n\nR como una cocina\nHerramientas básicas de programación en R\nOperadores en R\nTipos de datos",
    "crumbs": [
      "Prácticos",
      "Sesiones",
      "2: Conocimientos básicos de programación en R"
    ]
  },
  {
    "objectID": "assignment/02-practico.html#r-es-una-cocina",
    "href": "assignment/02-practico.html#r-es-una-cocina",
    "title": "Práctica 2. Conocimientos básicos de programación en R",
    "section": "",
    "text": "En la sesión de hoy, comenzaremos de forma distinta, no utilizaremos los conceptos técnicos del software de lleno, sino que los iremos conociendo de a poco. Para cumplir ese objetivo, es que la idea es iniciar con un ejemplo, al que llamaremos “R es una cocina”.\nLo primero, entonces, es que pensemos que RStudio, nuestra interfaz que visualizamos en estos momentos, es una cocina. Es importante que usemos la imaginación, ya que evidentemente no se ve como una cocina.\n\n\n\n\nCuando cocinamos siempre debemos realizar un paso previo antes de todo: preparar la cocina o el espacio de trabajo.\n\n\n\npacman::p_load(beepr, dplyr, tidyverse) \nbeep(1)\n\n\n\n\n\n\n\nNota\n\n\n\nSin este paso, no podemos empezar a trabajar en nuestra sesión, por eso es muy impotante. Al igual que cuando precalentamos un horno o esperamos a que caliente el aceite antes de colocar los ingredientes.\n\n\nCon la cocina precalentada, podemos avanzar al siguiente paso.\n\n\n\n\n\n\n\n\n\nImportante\n\n\n\nDeben ser la misma cantidad de elementos dentro del parentésis\n\n\n\ningrediente_1 &lt;- c(2,3,4,5,6,7,4,3,8,1) #10 casos\ningrediente_2 &lt;- c(100, 200, 50, 30, 100, 91, 87, 100, 55, 61)\ningrediente_3 &lt;- c(10, 25,30,35,35,20,15,10,20, 25)\ningrediente_4 &lt;- c(\"pisca\", \n                   \"cucharadita\", \n                   \"cucharada\", \n                   \"pisca\", \n                   \"pisca\", \n                   \"cucharadita\", \n                   \"cucharadita\", \n                   \"cucharada\", \n                   \"cucharada\", \n                   \"cucharada\")\n\nSi vamos viendo, nuestros ingredientes se van acumulando en el cuadrante de abajo (como valores). En ese sentido y en contexto de nuestro ejemplo, nuestra cocina va almacenando los ingredientes que queremos utilizar para hacer un plato.\n\n\n\n\nplato &lt;- data.frame(ingrediente_1, \n                    ingrediente_2,\n                    ingrediente_3, \n                    ingrediente_4)\nbeep(1)\n\nSi volvemos a mirar en el cuadrante de abajo, el plato está listo (tal como lo indica el sonido de la cocina al finalizar la acción) y se encuentra almacenado no como un valor, sino que como un dato. Al que llamaremos, en términos más técnicos, un objeto.\nAsí, tenemos hasta ahora, combinando el contexto de nuestro ejemplo y los tecnicismos del software:\n\n\nUn plato que corresponde a un objeto\n\n\nCuatro ingredientes que componen el plato, que son valores que integran el objeto, dispuestos en columnas.\n\n \n\n\n\n\n\nPensemos que, de tanto que se ha encontrado el plato dentro de la cocina, llegaron las hormigas a buscarlo.\nPara seguir con la idea, debemos agregarlas de forma manual, de la siguiente manera:\n\nplato$ID &lt;- c(\"hormiga_a\",\n        \"hormiga_b\", \n        \"hormiga_c\", \n        \"hormiga_d\", \n        \"hormiga_e\", \n        \"hormiga_f\",\n        \"hormiga_g\", \n        \"hormiga_h\", \n        \"hormiga_i\", \n        \"hormiga_j\")\n\nAsí, las hormigas se almacenaran en el valor ID, ya que será el identificador de cada una dentro de nuestra cocina y, específicamente, dentro de nuestro plato.\nSi retomamos la estrcutura de datos de nuestros ingredientes, estos se componene de 10 valores, que, en términos de nuestro ejemplo, son partes que componenen el ingrdiente (como gramos y cucharadas). Esto lo hicimos a propósito, para que cada valor o parte del ingrediente este asociado a cada hormiga. De ese modo, podemos ver cuánto de cada ingrediente de nuestro plato se llevo cada hormiga y, con esto, hacemos un análisis más detallado de lo que ellas se llevaron del plato.\nEn ese sentido, ya no sólo decimos:\n\n“Llegaron las hormigas al plato y se llevan cosas de este”\n\nSino que, podemos decir cosas más específicas al respecto:\n\n“Dentro del plato, la hormiga_a se llevo una pisca del ingrediente_4 y la hormiga_b se llevo 25 milígramos del ingrediente_3”\n\n \n\n\n\n¡Con estadística descriptiva!\n\nPara ello, podemos usar una tabla de contingencia, con la cual cruzamos dos datos, en este caso hormigas con el ingrediente_4. Quedaría algo así:\n\nsummarytools::ctable(plato$ID, plato$ingrediente_4)\n\nCross-Tabulation, Row Proportions  \nID * ingrediente_4  \nData Frame: plato  \n\n----------- --------------- ------------ ------------- ------------ -------------\n              ingrediente_4    cucharada   cucharadita        pisca         Total\n         ID                                                                      \n  hormiga_a                   0 (  0.0%)    0 (  0.0%)   1 (100.0%)    1 (100.0%)\n  hormiga_b                   0 (  0.0%)    1 (100.0%)   0 (  0.0%)    1 (100.0%)\n  hormiga_c                   1 (100.0%)    0 (  0.0%)   0 (  0.0%)    1 (100.0%)\n  hormiga_d                   0 (  0.0%)    0 (  0.0%)   1 (100.0%)    1 (100.0%)\n  hormiga_e                   0 (  0.0%)    0 (  0.0%)   1 (100.0%)    1 (100.0%)\n  hormiga_f                   0 (  0.0%)    1 (100.0%)   0 (  0.0%)    1 (100.0%)\n  hormiga_g                   0 (  0.0%)    1 (100.0%)   0 (  0.0%)    1 (100.0%)\n  hormiga_h                   1 (100.0%)    0 (  0.0%)   0 (  0.0%)    1 (100.0%)\n  hormiga_i                   1 (100.0%)    0 (  0.0%)   0 (  0.0%)    1 (100.0%)\n  hormiga_j                   1 (100.0%)    0 (  0.0%)   0 (  0.0%)    1 (100.0%)\n      Total                   4 ( 40.0%)    3 ( 30.0%)   3 ( 30.0%)   10 (100.0%)\n----------- --------------- ------------ ------------- ------------ -------------\n\n\nAquí podemos ver que la hormiga_a se llevo una pisca del ingrediente_4 de nuestro plato y, al contrario, la horrmiga_c se llevo una cucharada.\n\n\n\n\n¡Filtramos!\n\n\nhg &lt;- plato %&gt;% filter(ID == \"hormiga_g\")\n\nstr(hg)\n\n'data.frame':   1 obs. of  5 variables:\n $ ingrediente_1: num 4\n $ ingrediente_2: num 87\n $ ingrediente_3: num 15\n $ ingrediente_4: chr \"cucharadita\"\n $ ID           : chr \"hormiga_g\"\n\n\nHasta acá hemos visto la utilidad de nuestra cocina, tanto en el almacenamiento de los ingredientes, la creación de platos y en el análisis de los procesos que pueden estar ocurriendo dentro de la misma.\nA la información que vimos en el apartado anterior, ahora se agrega un tecnicismo más:\n\nLas hormigas poseen un pocentaje del ingrediente, en ese sentido, toman un valor de cada ingrediente que compone el plato, lo que se encuentra en las filas\n\n\nNuestra cocina nos permite calcular cómo se distribuyen estos valores de cada ingrediente entre las hormigas\n\nCon lo anterior, ya podemos describirlo y entenderlo en el lenguaje de R y de ciencia de datos. Ahora, nos iremos a lo técnico, pero siempre retomando nuestro ejemplo de que R es una cocina.\n \n\n\n\n\n\n\nAntes recordemos tres conceptos básicos: tablas, filas y columnas.\nUna tabla esta compuesta por filas y columnas, y aquello entrega celdas o casillas.\n\nLas filas son horizontales\nLas columnas verticales\nEn la tabla estas se cruzan entre sí, dicho cruce son las celdas\n\n\n¿Para qué nos sirve saber esto?\nPara entender el funcionamiento de una base de datos.\nRStudio para hacer los análisis estadísticos, utiliza bases de datos, las cuales podemos entender, con la terminología que manejamos hasta ahora, como “tablas” con datos en su interior.\n\n\n\nAsí, una celda es el dato de un caso específico para una variable específica\n\n\nEntonces, hasta ahora tenemos lo siguiente:\n\n\n\n\n\n\n\n\nEstructura básica\nEn Ciencias Sociales\nEn nuestro ejemplo\n\n\n\n\nFila\nCasos\nHormigas\n\n\nColumnas\nVariables\nIngredientes\n\n\nMatriz\nBases de datos o data frames\nPlato\n\n\n\n \nAhora bien, lo que hicimos en la práctica con el plato, es que este se comporta como el almacenador de “algo” y le asignamos los ingredientes (que, en el fondo, son valores).\n\nEn R, como es una cocina, trabajamos en función de ir creando platos (u, dicho de forma técnica, objetos)\n\n\n\n\nPodemos agregar ingredientes a un mismo plato, en su proceso de preparación, en un lenguaje más técnico, esto es sobreescribir un objeto\n\n\n\nPodemos ir almacendando platos distintos en nuestra cocina, en un lenguaje más técnico, esto es crear un objeto\n\n\n\n\nview(plato)\n\n\n\n\n\n\nEn nuestro estudio, tendremos bases de datos provinientes de encuestas, pueden ser de opinión, censales, etc.\nEn ese sentido, nuesta estructura de datos se verá de la siguiente manera:\n\nLas filas serán personas\nLas columnas preguntas de un cuestionario\nLa base de datos la combinacion de ambas\n\n\nAsí, las celdas son la respuesta específica de una persona a una pregunta específica\n\n\nSi lo vemos dentro de nuestra analogía:\n\nLa encuesta es nuestro plato\nLas preguntas son los ingredientes que componen ese plato\n\nAl entender que las hormigas sacan un pocentaje de los ingredientes, le entregamos un valor específico a cada una de ese ingrediente.\nEn ese sentido:\n\nCierto porcentaje del ingrediente le pertenece a una hormiga\n\nEn los datos de una encuesta:\n\nCierto porcentaje del dato le pertenece a una persona, ya que aquello es su respuesta a la pregunta del cuestionario\n\n\n\n\n\n\n\nUtilizar nuestra cocina estadística para observar esas respuestas que tienen un valor para nosotr-s.\nLas respuestas de las personas nos indican tendencias, percepciones, y condiciones objetivas en las que viven. Esos datos son valiosos para nuestra labor, ya que podemos analizarlos para tener una noción de cómo se distirbuyen dichas caracterísitcas en la sociedad.\nDel mismo modo, podriamos ver cómo se distribuye cierto ingrediente en las homigas, o qué ingrediente prefieren más la hormigas sólo observando sus frecuencias e identificando el ingrediente más popular.\n\n¿Cuál es la utilidad de eso en lo concreto?: Nos permite realizar hipótesis y preguntas de investigación.\n\n\n\n\n\n\n\n\nEn el caso de las hormigas…\nEn Ciencias Sociales…\n\n\n\n\nPodríamos hipotetizar, por ejemplo, que el ingrediente 1 es más dañino, y esa razón podría ser una posible explicación a su baja frecuencia. Otra hipótesis podría ser que ese ingrediente es más difícil de conseguir del plato.\nAlgo similar se ve cuando evaluamos los ingresos a nivel de hogar. Con análisis descriptivos ya podemos ver brechas, desigualdades y aproximaciones a la distribución, según los estadísticos que calculemos.\n\n\n\n\nCon esto en mente, ¡ya podemos andentrarnos a un lenguaje más técnico y los conocimientos básicos de programación para utilizar RStudio!",
    "crumbs": [
      "Prácticos",
      "Sesiones",
      "2: Conocimientos básicos de programación en R"
    ]
  },
  {
    "objectID": "assignment/02-practico.html#conocimientos-básicos-de-programación",
    "href": "assignment/02-practico.html#conocimientos-básicos-de-programación",
    "title": "Práctica 2. Conocimientos básicos de programación en R",
    "section": "",
    "text": "Revisemos algunos conocimientos básicos para la programación en R. Pero antes, tengamos dos cosas en mente:\n\nPrimero, ¿qué es codificar?, en programación codificar corresponde a un proceso de entrega de instrucciones en un lenguaje específico, siguiendo un orden lógico y coherente.\nSegundo, de aquí en adelante nos manejaremos con una máxima en el curso; existe un acuerdo implícito entre tú y R: R hará todos los cálculos por ti, pero en cambio tú debes dar las instrucciones con total precisión.\n\n\n\nUno de los usos más sencillos y que están a la base de R, es usarlo como una calculadora.\n\n5+5\n\n[1] 10\n\n25/5\n\n[1] 5\n\n2*2\n\n[1] 4\n\n27-2\n\n[1] 25\n\n\nComo podrás ver, el resultado de estas instrucciones aparecen como un [1] en la consola. También podemos hacer operatorias más complejas y con más cálculos.\n\n12*(7+2)+(45-32)+8\n\n[1] 129\n\n22^2 - 2^2\n\n[1] 480\n\n1/200 * 30\n\n[1] 0.15\n\n\nSiguiendo el ejemplo de las hormigas, estas acciones son las que nos permiten utilizar la cocina para calcular distribuciones de los ingredientes por hormiga.\n\n\n\nEn nuestro ejemplo, hablamos de sobreescribir y crear objetos, si bien lo hicimos sin saber muy bien a qué nos referiamos, dentro de lo más técnico lo podemos entender de la siguiente manera:\nLo primero, la frase que utiliaremos de aquí en adelante: R es un lenguaje de programación orientado a objetos.\n¿Qué significa eso?: implica que podemos crear elementos dentro del ambiente de R, a los cuales les asignaremos información que quedará almacenada, información que puede ir desde números, palabras, cálculos hasta grandes bases de datos.\nTodas las instrucciones en R en las que crees objetos, es decir, instrucciones de asignación, tendrán la misma estructura:\nnombre_objeto &lt;- valor\nEl asignador &lt;- se utiliza para crear objetos y forma parte de uno de los operadores usados en R.\nLos elementos que podemos asignar a objetos son múltiples, como números, palabras acompañadas siempre de corchetes \" \" y vectores que corresponden a un conjunto o secuencia de elementos del mismo tipo definidos por la funcion de concatenar = c().\nVeamos un ejemplo creando objetos:\n\nx &lt;- 4 # asignar\n\nx # ejecutar\n\n[1] 4\n\ny &lt;- \"Hola mundo\" # los carácteres alfabéticos siempre van acompañados de corchetes\n\ny \n\n[1] \"Hola mundo\"\n\n\n¿Y concatenando? Hacemos un vector.\nEsto es lo que hicimos para crear los ingredientes del plato, el plato y las hormigas del plato. En definitiva creamos vectores y aquello lo hicimos a partir de la creación de obejtos: Es decir, asignamos valores concatenados a un objeto contenedor de esta información (en este caso, que llamamos ingrediente_1, ingrediente_2, ingrediente_3, ingrediente_4 platoy ID)\n\ningrediente_1 &lt;- c(2,3,4,5,6,7,4,3,8,1) #10 casos\ningrediente_2 &lt;- c(100, 200, 50, 30, 100, 91, 87, 100, 55, 61)\ningrediente_3 &lt;- c(10, 25,30,35,35,20,15,10,20, 25)\ningrediente_4 &lt;- c(\"pisca\", \n                   \"cucharadita\", \n                   \"cucharada\", \n                   \"pisca\", \n                   \"pisca\", \n                   \"cucharadita\", \n                   \"cucharadita\", \n                   \"cucharada\", \n                   \"cucharada\", \n                   \"cucharada\")\n\nplato$ID &lt;- c(\"hormiga_a\",\n        \"hormiga_b\", \n        \"hormiga_c\", \n        \"hormiga_d\", \n        \"hormiga_e\", \n        \"hormiga_f\",\n        \"hormiga_g\", \n        \"hormiga_h\", \n        \"hormiga_i\", \n        \"hormiga_j\")\n\nAhora, ¿cómo se vería esto en vectores que utilizaríamos para un trabajo?:\n\nedad &lt;- c(18,22,36,19,35) # concatenar (variable de razon)\n\nedad\n\n[1] 18 22 36 19 35\n\ngenero &lt;- c(3,1,1,2,3) # masculino = 1; femenino = 2; transgenero = 3 (variable nominal)\n\ngenero \n\n[1] 3 1 1 2 3\n\ngse &lt;- c(\"ABC1\", \"C2\", \"E\", \"AbC1\", \"E\")  # tambíen se pueden usar carácteres (variable ordinal)\n\ngse\n\n[1] \"ABC1\" \"C2\"   \"E\"    \"AbC1\" \"E\"   \n\n\n¡Hagamos una pequeño reto!: ¿Cuál es el valor de a y b? Si a &lt;- 5; b &lt;- a; a &lt;- 4\n\na &lt;- 5\nb &lt;- a\na &lt;- 4\n\nprint(a) # imprimir en la consola\n\n[1] 4\n\nprint(b)\n\n[1] 5\n\na + 10\n\n[1] 14\n\n\nY… ¿En el ejemplo de las hormigas?:\n\n# Para observar los valores del ingrediente 1\n\nprint(ingrediente_1) # imprimir en la consola\n\n [1] 2 3 4 5 6 7 4 3 8 1\n\n\nSin embargo, considerando que anteriomente alojamos el ingrediente_1 en el objeto plato, podemos hacer lo siguiente también para observar los valores del ingrediente_1:\n\nprint(plato$ingrendiente_1) # imprimir en la consola\n\nEl signo $ es otro operador importante, que nos permite indicar en qué objeto está almacenada cierta variable que queremos observar.\n¿Por qué debemos utilizarlo? Por nuestra premisa inicial: Dado que R esta orientado a la creación de objetos, por ende cualquier valor esta almacenado en un objeto. En este caso ingrediente_1 lo integramos dentro del objeto plato.\nEsto último esta vinculado a un proceso fundamental en R: la creación de data.frames, ya que si vemos la naturaleza del objeto plato con la función class(plato), esto nos indicará que se trata de un data.frame.\nUn Data.frame es una estructura de datos de dos dimensiones (columnas y filas), donde las columnas pueden ser de diferente naturaleza, pero deben tener el mismo largo. A partir de ella agrupamos variables en una matriz, o sea, construimos una base de datos. Es como “pegar” las columnas (variables) una al lado de otra.\nPara verlo con otro ejemplo, creemos un data.frame con los vectores que ya creamos antes:\n\nbase1 &lt;- data.frame(genero, gse, edad) # Resulta como objeto de \"datos\" en\n                                       # entorno.\n\nbase1\n\n  genero  gse edad\n1      3 ABC1   18\n2      1   C2   22\n3      1    E   36\n4      2 AbC1   19\n5      3    E   35\n\n\nComo puedes ver, para crear el data.frame, tanto en este ejemplo como cuando creamos el plato, usamos la función que lleva el mismo nombre, colocando dentro del paréntesis los vectores que creamos anteriormente: data.frame(mis_vectores).\nAhora, creemos un data.frame desce cero. En este ejemplo, crearemos los vectores dentro de la función data.frame().\n\n# Ejemplo de como crear un data.frame desde 0: \n\nbase2 &lt;- data.frame(Sexo=c(\"H\",\"M\",\"H\",\"M\",\"H\",\"M\"),\n                    Estatura=c(1.83,1.76,1.82,1.60,1.90,1.66),\n                    Peso=c(67,58,66,48,75,55))\n\nhead(base2)  # Me permite visualizar las primeras filas\n\n  Sexo Estatura Peso\n1    H     1.83   67\n2    M     1.76   58\n3    H     1.82   66\n4    M     1.60   48\n5    H     1.90   75\n6    M     1.66   55",
    "crumbs": [
      "Prácticos",
      "Sesiones",
      "2: Conocimientos básicos de programación en R"
    ]
  },
  {
    "objectID": "assignment/02-practico.html#operadores-en-r",
    "href": "assignment/02-practico.html#operadores-en-r",
    "title": "Práctica 2. Conocimientos básicos de programación en R",
    "section": "",
    "text": "Antes de trabajar con datos, debemos conocer el concepto de operadores. Estos símbolos no son de uso exclusivo en R, pero no todos tienen el mismo significado que en otros softwares.\nLos operadores son símbolos que permiten, en los distintos procedimientos de procesamiento, simplificar procesos. Por ejemplo, serán útilizados cuando filtremos nuestros datos para personas de ciertas categorías, cuando calculemos variables nuevas (de manera aritmética o condicional) o, simplemente, cuando queramos hacer procesos “concatenados”.\n\n¡Veamos algunos ejemplos!\n\n20 == 5 # igualdad\n\n[1] FALSE\n\n30 &gt;= 14 # mayor o igual que\n\n[1] TRUE\n\n22 &lt;= 2 # menor o igual que\n\n[1] FALSE\n\n25 != 10 # no es igual a\n\n[1] TRUE\n\np = 10; y = 5; p &lt;= y # operatoria en objetos\n\n[1] FALSE",
    "crumbs": [
      "Prácticos",
      "Sesiones",
      "2: Conocimientos básicos de programación en R"
    ]
  },
  {
    "objectID": "assignment/02-practico.html#tipos-de-datos",
    "href": "assignment/02-practico.html#tipos-de-datos",
    "title": "Práctica 2. Conocimientos básicos de programación en R",
    "section": "",
    "text": "En R, al igual que en la mayoría de lenguajes de programación, contamos con datos de diversos tipos, en razón de los cuales podemos realizar determinados procedimientos de tratamiento o análisis.\nLos tipos de datos están íntimamente relacionados con el nivel de medición de las variables a las que corresponden. Como viste en clases, la teoría de los niveles de medición contempla cuatro tipos:\n\n\n\n\nPara responder esta pregunta, ¡metamos nuestras manos en los datos!. En esta oportunidad trabajaremos sobre un subset de datos del Modulo de Desigualdad Social de la encuesta International Social Survey Programme del 2019. Esta base la descargaremos directamente desde internet por esta vez (en futuras sesiones aprenderemos cómo cargar bases de datos).\n\n#cargamos la base de datos desde internet\n\nload(url(\"https://github.com/Andreas-Lafferte/descriptiva/blob/main/data/db-proc.RData?raw=true\"))\n\nhead(rand_df) # ver primeros casos de la base\n\n# A tibble: 6 × 5\n  pais       edad sexo   ideologia          percepcion_conflictos\n  &lt;chr&gt;     &lt;dbl&gt; &lt;fct&gt;  &lt;fct&gt;                              &lt;dbl&gt;\n1 Suiza        23 Hombre Izquierda                              2\n2 Chile        27 Mujer  Sin identificación                     2\n3 Rusia        43 Mujer  Sin identificación                     1\n4 Finlandia    71 Mujer  Sin identificación                     1\n5 Japon        54 Mujer  Izquierda                              2\n6 Lituania     67 Mujer  Sin identificación                     1\n\n\n\n\nLos datos character están directamente asociados a las variables cualitativas (o categóricas). Generalmente suelen ser variables de texto abierto, como es el caso de la variable pais, que detalla el país de procedencia de la persona encuestada.\nPara conocer cuál es el tipo de variable en R, utilizamos el comando class(), y para detallar dentro de la base de datos cuál es la variable de interés, utilizamos el símbolo $ posterior a la base de datos:\n\nclass(rand_df$pais) # siempre es la misma estructura = base$variable\n\n[1] \"character\"\n\n\nSin embargo, estas variables no tienden a ser las mejores a la hora de presentar nuestros resultados. Como solución, tenemos las variables de tipo Factor.\n\n\n\nLas variables de tipo factor son ideales para trabajar con variables de tipo nominal u ordinal. Esto es así debido a que permiten establecer un orden entre las categorías de la variable, lo cual es fundamental si trabajamos, por ejemplo, con variables nominales como el sexo de los encuestados, o si trabajamos con variables ordinales como su ideología política.\n\nclass(rand_df$sexo)\n\n[1] \"factor\"\n\nclass(rand_df$ideologia)\n\n[1] \"factor\"\n\n\n\n\n\nLas variables de tipo numeric son variables de tipo númerica, las cuales pueden ser intervales o de razón. Así, por ejemplo, cuando trabajamos con variables de razón trabajamos con variables como el número de hijos o la edad (aunque sería extraño encuestar a alguien con 0 años).\n\nclass(rand_df$edad)\n\n[1] \"numeric\"",
    "crumbs": [
      "Prácticos",
      "Sesiones",
      "2: Conocimientos básicos de programación en R"
    ]
  },
  {
    "objectID": "assignment/02-practico.html#cargar-librerías",
    "href": "assignment/02-practico.html#cargar-librerías",
    "title": "Práctica 2. Conocimientos básicos de programación en R",
    "section": "",
    "text": "En R se trabaja a partir de paquetes (packages). ¿Qué son? De forma resumida, los paquetes son un conjunto de funciones o herramientas que pueden ser usadas en R. Los directorios de R donde se almacenan los paquetes se denominan librerías. La lógica es instalar paquetes y luego cargar (o llamar) las librerías cada vez que es necesario usarlas.\nUsualmente para cargar paquetes lo hacemos de la siguiente manera:\n\ninstall.packages(\"paquete\")\nlibrary(paquete)\n\nPero en esta ocasión utilizaremos un paquete llamado pacman, que facilita y agiliza la lectura (instalación y carga) de los paquetes a utilizar en R. De esta forma lo instalamos 1 única vez así:\n\ninstall.packages(\"pacman\")\nlibrary(pacman)\n\nLuego instalaremos y cargaremos los paquetes de R de la siguiente manera, volviendo más eficiente el procedimiento de carga de paquetes.\nEn este práctico utilizaremos seis paquetes\n\npacman: este facilita y agiliza la lectura de los paquetes a utilizar en R\ntidyverse: colección de paquetes, de la cual utilizaremos dplyr y haven\ndplyr: nos permite seleccionar variables de un set de datos\nhaven: cargar y exportar bases de datos en formatos .sav y .dta\ncar: para recodificar/agrupar valores de variables\n\n\npacman::p_load(tidyverse, # colección de paquetes para manipulación de datos\n               dplyr, # para manipular datos\n               haven, # para importar datos\n               car # para recodificar datos\n               )\n\noptions(scipen = 999) # para desactivar notacion cientifica\nrm(list = ls()) # para limpiar el entorno de trabajo\n\nComo se puede ver, antes de la función p_load hay un ::, esto se refiere a que se “fuerza” que esa función provenga de ese paquete (en este caso del paquete pacman).",
    "crumbs": [
      "Prácticos",
      "Sesiones",
      "2: Conocimientos básicos de programación en R"
    ]
  },
  {
    "objectID": "assignment/01-practico.html",
    "href": "assignment/01-practico.html",
    "title": "Práctico 01. Introducción al lenguaje R",
    "section": "",
    "text": "El objetivo de esta guía práctica es introducirnos a las herramientas que permiten establecer un flujo de trabajo en R.\nEn detalle, aprenderemos:\n\nCómo establecer un flujo de trabajo mediante scripts y Rprojects siguiendo el protocolo IPO\nCómo crear un proyecto de R (R.proyect)\nCómo crear un script (hoja) en R\n\n\n\n\nR es un lenguaje y ambiente de programación, dentro del cual se pueden implementar técnicas estadísticas y de ciencia de datos. Por su parte, RStudio es un IDE (integrated development enviroment) para R, o en pocas palabras, es una interfaz más amigable que nos permite interactuar con R.\n¿Y por qué aprender R? Existen muchas razones, pero algunas de las principales son:\n\nEmpleabilidad\nCrisis de reproducibilidad y Ciencia Abierta\nFacilita manipulación, almacenaje, cálculos y visualización de datos\nFacilita la colaboración y trabajo en equipo\nSimple, pero potente\nPuede integrarse con otros ambientes y herramientas\n\n\n\n\n\n\n\n\n\n\nAl momento de abrir RStudio por primera vez puede que nos asustemos, pues es un entorno nuevo lleno de posibilidades en donde todavía no conocemos mucho.\n¡Pero que no cunda el pánico! ya que estas posibilidades son nuevas oportunidades de aprendizaje en un software libre, gratuito y cada vez más utilizado en las ciencias sociales. ¿Nos vamos a equivocar? Claro que sí, y esperemos que así sea pues más aprenderemos.\n\n\n\n\n\n\n\n\n\nAl ver RStudio por primera vez se nos presentará una interfaz de al menos cuatro paneles.\n\n\n\n\n\n\n\n\n\n¡VEAMOS COMO COMENZAR A USAR R!\n\n\n\nTal vez una de las dificultades más comunes o cotidianas del uso de R es el orden de trabajo, en donde tenemos cientos de archivos, scripts, gráficos, bases de datos u otros repartidos desordenadamente en nuestro computador. También se da mucho el caso en que, cuando queremos trabajar con alguien, tenemos que cambiar las rutas de los archivos, por ejemplo en dónde están las bases de datos, ya que nuestros ordenadores y usuarios se llaman y son escencialmente distintos.\n¿Cómo podemos sortear eso? Siguiendo un flujo de trabajo reproducible, autocontenido y ordenado. En este curso trabajaremos R con un flujo de trabajo reproducible, basado en el sistema IPO. El protocolor IPO es una plantilla/protocolo de estructura digital de carpetas que tiene por objetivo el organizar, procesar y documentar los datos de un proyecto de investigación con miras a la apertura de los datos en un repositorio público y de acceso libre. En concreto, el sistema IPO se propone abordar brevemente todo lo referente a los Datos, Métodos y Resultados.\n\n\n\n\n\n\n\n\n\nLleva este nombre por el sistema de carpetas que se implementan: Input, Procesamiento y Output. En la carpeta Input guardaremos todos aquellso recursos iniciales que usaremos, como las bases de datos, el libro de códigos, entre otros. En la carpeta de Procesamiento, como dice el nombre, guardaremos todos los archivos que procesen y analicen datos. En la carpeta Output guardaremos todo aquello que hayamos producido en los archivos de procesamiento, como las bases de datos procesadas listas para compartir o publicas, los documentos de reporte, informes o analísis, gráficos o tablas.\n\n\n\n\n\n\n\n\n\nLa implementación de la reproducibilidad en este tipo de protocolos se basa en generar un conjunto de archivos auto-contenidos organizado en una estructura de proyecto que cualquier persona pueda compartir y ejecutar. En otras palabras, debe tener todo lo que necesita para ejecutar y volver a ejecutar el análisis. Para conocer más, visita el Laboratorio de Ciencia Abierta.\n\n\n\n\n\n\n\n\n\n\n\n\n¿Y cómo hacemos lo anterior? Mediante los Rproject. Los proyectos en R, o R Projects, serán el centro a partir del cual estaremos trabajando el resto de archivos incluidos en nuestro trabajo con los datos (Input, Procesamiento y Output). En pocas palabras, el Rproject será el elemento raíz de nuestro proyecto y que articula o abraza todos los demás componentes.\n\n\n\n\n\n\n\n\n\n¿Cómo lo hacemos? Es bastante sencillo. Nos dirigiremos a la sección superior derecha de RStudio, donde se encuentra una R dentro de un cubo:\n\n\n\n\n\n\n\n\n\nHacemos click en ella, y luego se nos desplegará una ventana con distintas opciones. Seleccionamos New Project.\n\n\n\n\n\n\n\n\n\nLuego, seleccionamos New Directory &gt; New Project\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUna vez realizado lo anterior, nos pedirá asignar un Directory name, que es como se llamará nuestro proyecto. Se recomienda que tenga nombres sustantivos. En este ejemplo, le llamaremos tarea01.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLuego debemos indicarle dónde queremos que esté alojado en nuestro computador este proyecto. Para ello pinchamos en el Browse, y se nos desplegará nuestro sistema de carpetas de nuestro computador. Supongamos que queremos guardarlo en una carpeta que llamaremos Estadistica Descriptiva 2023.\n\n\n\n\n\n\n\n\n\nSeleccionamos la carpeta y le damos a Open o Abrir. Una vez realizado lo anterior, volveremos a RStudio y tendremos nuestro projecto abierto. Además, podemos ver que nuestro .Rproj se creó en la carpeta respectiva en la esquina inferior derecha de la pantalla.\n\n\n\n\n\n\n\n\n\nAhora, tenemos que darle el formato de flujo de trabajo reproducible. Para ello, crearemos las carpetas de Input, Procesamiento y Ouput en la misma carpeta Estadistica Descriptiva 2023 donde tenemos alojado el .Rproject.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n¿Y podemos ver esto mismo pero en RStudio? ¡Claro que sí!, cada carpeta que creemos se irá sumando al visualizador de Files, así como también si subimos archivos (como bases de datos) en las respectivas subcarpetas, irán apareciendo allí.\n\n\n\n\n\n\n\n\n\n¡HEMOS CREADO NUESTRO PROYECTO Y SISTEMA DE TRABAJO REPRODUCIBLE!\n\n\n\n\n\n\n\n\n\n\n\n\nPara comenzar a trabajar en R, lo primero es crear un Script. ¿Qué es un script? En términos simples, un script es la hoja en donde escribiremos y guardaremos nuestro código, y en donde a la vez podremos ir ordenando nuestros pasos e incluso ir comentándolos. Cuando hablamos de Sintaxis estamos refiriéndonos, en escencia, a un Script.\nImaginen que un Script es como una hoja de receta de cocina, allí anotamos todos los ingredientes, fases y procedimientos que debemos seguir e ir ejecutando. Esta receta la podemos compartir con otros, volver a verla cuando queramos hacer lo mismo o algo similar. Esa es la gracia de un Script.\nSi bien podemos escribir y ejecutar código directamente en la consola, estos se eliminarán una vez que cerremos la sesión en RStudio.\n¿Cómo crear un Script? Hacerlo es bastante sencillo. En la sección superior izquierda de RStudio, debe hacerse click en la hoja con un signo + verde y, luego, seleccionar la opción R Script en el menú desplegado:\n\n\n\n\n\n\n\n\n\nOtra manera de abrir un nuevo script es hacer click en la opción File de la barra superior. Posteriormente seleccionar New File &gt; R Script en los menús desplegados:\n\n\n\n\n\n\n\n\n\nPor último, podemos mantener presionadas las teclas Ctrl + Shift + N en Windows, o ⌘ + Shift + N en Mac.\n¡Hemos abierto un nuevo script¡, que se debe ver de la siguiente manera:\n\n\n\n\n\n\n\n\n\nPodemos escribir en él los códigos, que se ejecutarán en la consola una vez mantengamos presionadas las teclas Control + Enter al inicio de la línea\n\n\n\n\n\n\n\n\n\n¿Y cómo guardo mi código? Podemos hacer click en el disquete situado en la barra que se encuentra sobre el código, o bien, apretar Ctrl + S.\n\n\n\n\n\n\n\n\n\nLa primera vez que guardemos un Script, nos pedirá que le asignemos un nombre y una ruta donde guardarlo. Este nombre debe ser sustantivo (como procesamiento o análisis), y debemos alojarlo en las subcarpetas que creamos en el paso anterior. Generalmente, guardaremos los scripts en la carpeta de Procesamiento. En este ejemplo, lo llamaremos script01:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUna vez almacenado en una carpeta, cada vez que clickeemos en los casetes o mantengamos presionadas las teclas Control + S, el archivo se actualizará a la última versión que hayamos guardado\n\n\n\nHoy aprendimos a procesar datos en R. En detalle, vimos:\n\nCómo establecer un flujo de trabajo mediante scripts y Rprojects siguiendo el protocolo IPO\nCómo crear un proyecto de R (R.proyect)\nCómo crear un script (hoja) en R\n\n\n\n\n\n Presentación Sesión 1.pdf",
    "crumbs": [
      "Prácticos",
      "Sesiones",
      "1: Introducción al lenguaje R"
    ]
  },
  {
    "objectID": "assignment/01-practico.html#objetivo-de-la-práctica",
    "href": "assignment/01-practico.html#objetivo-de-la-práctica",
    "title": "Práctico 01. Introducción al lenguaje R",
    "section": "",
    "text": "El objetivo de esta guía práctica es introducirnos a las herramientas que permiten establecer un flujo de trabajo en R.\nEn detalle, aprenderemos:\n\nCómo establecer un flujo de trabajo mediante scripts y Rprojects siguiendo el protocolo IPO\nCómo crear un proyecto de R (R.proyect)\nCómo crear un script (hoja) en R",
    "crumbs": [
      "Prácticos",
      "Sesiones",
      "1: Introducción al lenguaje R"
    ]
  },
  {
    "objectID": "assignment/01-practico.html#r-y-rstudio",
    "href": "assignment/01-practico.html#r-y-rstudio",
    "title": "Práctico 01. Introducción al lenguaje R",
    "section": "",
    "text": "R es un lenguaje y ambiente de programación, dentro del cual se pueden implementar técnicas estadísticas y de ciencia de datos. Por su parte, RStudio es un IDE (integrated development enviroment) para R, o en pocas palabras, es una interfaz más amigable que nos permite interactuar con R.\n¿Y por qué aprender R? Existen muchas razones, pero algunas de las principales son:\n\nEmpleabilidad\nCrisis de reproducibilidad y Ciencia Abierta\nFacilita manipulación, almacenaje, cálculos y visualización de datos\nFacilita la colaboración y trabajo en equipo\nSimple, pero potente\nPuede integrarse con otros ambientes y herramientas\n\n\n\n\n\n\n\n\n\n\nAl momento de abrir RStudio por primera vez puede que nos asustemos, pues es un entorno nuevo lleno de posibilidades en donde todavía no conocemos mucho.\n¡Pero que no cunda el pánico! ya que estas posibilidades son nuevas oportunidades de aprendizaje en un software libre, gratuito y cada vez más utilizado en las ciencias sociales. ¿Nos vamos a equivocar? Claro que sí, y esperemos que así sea pues más aprenderemos.\n\n\n\n\n\n\n\n\n\nAl ver RStudio por primera vez se nos presentará una interfaz de al menos cuatro paneles.\n\n\n\n\n\n\n\n\n\n¡VEAMOS COMO COMENZAR A USAR R!",
    "crumbs": [
      "Prácticos",
      "Sesiones",
      "1: Introducción al lenguaje R"
    ]
  },
  {
    "objectID": "assignment/01-practico.html#flujo-de-trabajo-en-r",
    "href": "assignment/01-practico.html#flujo-de-trabajo-en-r",
    "title": "Práctico 01. Introducción al lenguaje R",
    "section": "",
    "text": "Tal vez una de las dificultades más comunes o cotidianas del uso de R es el orden de trabajo, en donde tenemos cientos de archivos, scripts, gráficos, bases de datos u otros repartidos desordenadamente en nuestro computador. También se da mucho el caso en que, cuando queremos trabajar con alguien, tenemos que cambiar las rutas de los archivos, por ejemplo en dónde están las bases de datos, ya que nuestros ordenadores y usuarios se llaman y son escencialmente distintos.\n¿Cómo podemos sortear eso? Siguiendo un flujo de trabajo reproducible, autocontenido y ordenado. En este curso trabajaremos R con un flujo de trabajo reproducible, basado en el sistema IPO. El protocolor IPO es una plantilla/protocolo de estructura digital de carpetas que tiene por objetivo el organizar, procesar y documentar los datos de un proyecto de investigación con miras a la apertura de los datos en un repositorio público y de acceso libre. En concreto, el sistema IPO se propone abordar brevemente todo lo referente a los Datos, Métodos y Resultados.\n\n\n\n\n\n\n\n\n\nLleva este nombre por el sistema de carpetas que se implementan: Input, Procesamiento y Output. En la carpeta Input guardaremos todos aquellso recursos iniciales que usaremos, como las bases de datos, el libro de códigos, entre otros. En la carpeta de Procesamiento, como dice el nombre, guardaremos todos los archivos que procesen y analicen datos. En la carpeta Output guardaremos todo aquello que hayamos producido en los archivos de procesamiento, como las bases de datos procesadas listas para compartir o publicas, los documentos de reporte, informes o analísis, gráficos o tablas.\n\n\n\n\n\n\n\n\n\nLa implementación de la reproducibilidad en este tipo de protocolos se basa en generar un conjunto de archivos auto-contenidos organizado en una estructura de proyecto que cualquier persona pueda compartir y ejecutar. En otras palabras, debe tener todo lo que necesita para ejecutar y volver a ejecutar el análisis. Para conocer más, visita el Laboratorio de Ciencia Abierta.",
    "crumbs": [
      "Prácticos",
      "Sesiones",
      "1: Introducción al lenguaje R"
    ]
  },
  {
    "objectID": "assignment/01-practico.html#proyecto-de-r-.rproject",
    "href": "assignment/01-practico.html#proyecto-de-r-.rproject",
    "title": "Práctico 01. Introducción al lenguaje R",
    "section": "",
    "text": "¿Y cómo hacemos lo anterior? Mediante los Rproject. Los proyectos en R, o R Projects, serán el centro a partir del cual estaremos trabajando el resto de archivos incluidos en nuestro trabajo con los datos (Input, Procesamiento y Output). En pocas palabras, el Rproject será el elemento raíz de nuestro proyecto y que articula o abraza todos los demás componentes.\n\n\n\n\n\n\n\n\n\n¿Cómo lo hacemos? Es bastante sencillo. Nos dirigiremos a la sección superior derecha de RStudio, donde se encuentra una R dentro de un cubo:\n\n\n\n\n\n\n\n\n\nHacemos click en ella, y luego se nos desplegará una ventana con distintas opciones. Seleccionamos New Project.\n\n\n\n\n\n\n\n\n\nLuego, seleccionamos New Directory &gt; New Project\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUna vez realizado lo anterior, nos pedirá asignar un Directory name, que es como se llamará nuestro proyecto. Se recomienda que tenga nombres sustantivos. En este ejemplo, le llamaremos tarea01.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLuego debemos indicarle dónde queremos que esté alojado en nuestro computador este proyecto. Para ello pinchamos en el Browse, y se nos desplegará nuestro sistema de carpetas de nuestro computador. Supongamos que queremos guardarlo en una carpeta que llamaremos Estadistica Descriptiva 2023.\n\n\n\n\n\n\n\n\n\nSeleccionamos la carpeta y le damos a Open o Abrir. Una vez realizado lo anterior, volveremos a RStudio y tendremos nuestro projecto abierto. Además, podemos ver que nuestro .Rproj se creó en la carpeta respectiva en la esquina inferior derecha de la pantalla.\n\n\n\n\n\n\n\n\n\nAhora, tenemos que darle el formato de flujo de trabajo reproducible. Para ello, crearemos las carpetas de Input, Procesamiento y Ouput en la misma carpeta Estadistica Descriptiva 2023 donde tenemos alojado el .Rproject.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n¿Y podemos ver esto mismo pero en RStudio? ¡Claro que sí!, cada carpeta que creemos se irá sumando al visualizador de Files, así como también si subimos archivos (como bases de datos) en las respectivas subcarpetas, irán apareciendo allí.\n\n\n\n\n\n\n\n\n\n¡HEMOS CREADO NUESTRO PROYECTO Y SISTEMA DE TRABAJO REPRODUCIBLE!",
    "crumbs": [
      "Prácticos",
      "Sesiones",
      "1: Introducción al lenguaje R"
    ]
  },
  {
    "objectID": "assignment/01-practico.html#crear-un-nuevo-script-.r",
    "href": "assignment/01-practico.html#crear-un-nuevo-script-.r",
    "title": "Práctico 01. Introducción al lenguaje R",
    "section": "",
    "text": "Para comenzar a trabajar en R, lo primero es crear un Script. ¿Qué es un script? En términos simples, un script es la hoja en donde escribiremos y guardaremos nuestro código, y en donde a la vez podremos ir ordenando nuestros pasos e incluso ir comentándolos. Cuando hablamos de Sintaxis estamos refiriéndonos, en escencia, a un Script.\nImaginen que un Script es como una hoja de receta de cocina, allí anotamos todos los ingredientes, fases y procedimientos que debemos seguir e ir ejecutando. Esta receta la podemos compartir con otros, volver a verla cuando queramos hacer lo mismo o algo similar. Esa es la gracia de un Script.\nSi bien podemos escribir y ejecutar código directamente en la consola, estos se eliminarán una vez que cerremos la sesión en RStudio.\n¿Cómo crear un Script? Hacerlo es bastante sencillo. En la sección superior izquierda de RStudio, debe hacerse click en la hoja con un signo + verde y, luego, seleccionar la opción R Script en el menú desplegado:\n\n\n\n\n\n\n\n\n\nOtra manera de abrir un nuevo script es hacer click en la opción File de la barra superior. Posteriormente seleccionar New File &gt; R Script en los menús desplegados:\n\n\n\n\n\n\n\n\n\nPor último, podemos mantener presionadas las teclas Ctrl + Shift + N en Windows, o ⌘ + Shift + N en Mac.\n¡Hemos abierto un nuevo script¡, que se debe ver de la siguiente manera:\n\n\n\n\n\n\n\n\n\nPodemos escribir en él los códigos, que se ejecutarán en la consola una vez mantengamos presionadas las teclas Control + Enter al inicio de la línea\n\n\n\n\n\n\n\n\n\n¿Y cómo guardo mi código? Podemos hacer click en el disquete situado en la barra que se encuentra sobre el código, o bien, apretar Ctrl + S.\n\n\n\n\n\n\n\n\n\nLa primera vez que guardemos un Script, nos pedirá que le asignemos un nombre y una ruta donde guardarlo. Este nombre debe ser sustantivo (como procesamiento o análisis), y debemos alojarlo en las subcarpetas que creamos en el paso anterior. Generalmente, guardaremos los scripts en la carpeta de Procesamiento. En este ejemplo, lo llamaremos script01:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUna vez almacenado en una carpeta, cada vez que clickeemos en los casetes o mantengamos presionadas las teclas Control + S, el archivo se actualizará a la última versión que hayamos guardado",
    "crumbs": [
      "Prácticos",
      "Sesiones",
      "1: Introducción al lenguaje R"
    ]
  },
  {
    "objectID": "assignment/01-practico.html#resumen",
    "href": "assignment/01-practico.html#resumen",
    "title": "Práctico 01. Introducción al lenguaje R",
    "section": "",
    "text": "Hoy aprendimos a procesar datos en R. En detalle, vimos:\n\nCómo establecer un flujo de trabajo mediante scripts y Rprojects siguiendo el protocolo IPO\nCómo crear un proyecto de R (R.proyect)\nCómo crear un script (hoja) en R",
    "crumbs": [
      "Prácticos",
      "Sesiones",
      "1: Introducción al lenguaje R"
    ]
  },
  {
    "objectID": "assignment/01-practico.html#presentación-de-la-clase",
    "href": "assignment/01-practico.html#presentación-de-la-clase",
    "title": "Práctico 01. Introducción al lenguaje R",
    "section": "",
    "text": "Presentación Sesión 1.pdf",
    "crumbs": [
      "Prácticos",
      "Sesiones",
      "1: Introducción al lenguaje R"
    ]
  },
  {
    "objectID": "assignment/02-practico-1.html",
    "href": "assignment/02-practico-1.html",
    "title": "Práctica 2. Conocimientos básicos de programación en R",
    "section": "",
    "text": "El objetivo de esta guía práctica es introducirnos en los procedimientos básicos del uso del lenguaje y ambiente R.\nEn detalle, aprenderemos:\n\nHerramientas básicas de programación en R\nOperadores en R\nTipos de datos\n\n\n\n\nRevisemos algunos conocimientos básicos para la programación en R. Pero antes, tengamos dos cosas en mente:\n\nPrimero, ¿qué es codificar?, en programación codificar corresponde a un proceso de entrega de instrucciones en un lenguaje específico, siguiendo un orden lógico y coherente.\nSegundo, de aquí en adelante nos manejaremos con una máxima en el curso; existe un acuerdo implícito entre tú y R: R hará todos los cálculos por ti, pero en cambio tú debes dar las instrucciones con total precisión.\n\n\n\nUno de los usos más sencillos y que están a la base de R, es usarlo como una calculadora.\n\n5+5\n\n[1] 10\n\n25/5\n\n[1] 5\n\n2*2\n\n[1] 4\n\n27-2\n\n[1] 25\n\n\nComo podrás ver, el resultado de estas instrucciones aparecen como un [1] en la consola. También podemos hacer operatorias más complejas y con más cálculos.\n\n12*(7+2)+(45-32)+8\n\n[1] 129\n\n22^2 - 2^2\n\n[1] 480\n\n1/200 * 30\n\n[1] 0.15\n\n\n\n\n\nR es un lenguaje de programación orientado a objetos. ¿Qué significa eso?, implica que podemos crear elementos dentro del ambiente de R, a los cuales les asignaremos información que quedará almacenada, información que puede ir desde números, palabras, cálculos hasta grandes bases de datos.\nTodas las instrucciones en R en las que crees objetos, es decir, instrucciones de asignación, tendrán la misma estructura:\nnombre_objeto &lt;- valor\nEl asignador &lt;- se utiliza para crear objetos y forma parte de uno de los operadores usados en R.\nLos elementos que podemos asignar a objetos son múltiples, como números, palabras acompañadas siempre de corchetes \" \" y vectores que corresponden a un conjunto o secuencia de elementos del mismo tipo definidos por la funcion de concatenar = c().\nVeamos un ejemplo creando objetos:\n\nx &lt;- 4 # asignar\n\nx # ejecutar\n\n[1] 4\n\ny &lt;- \"Hola mundo\" # los carácteres alfabéticos siempre van acompañados de corchetes\n\ny \n\n[1] \"Hola mundo\"\n\n\n¿Y concatenando? Hacemos un vector.\n\nedad &lt;- c(18,22,36,19,35) # concatenar (variable de razon)\n\nedad\n\n[1] 18 22 36 19 35\n\ngenero &lt;- c(3,1,1,2,3) # masculino = 1; femenino = 2; transgenero = 3 (variable nominal)\n\ngenero \n\n[1] 3 1 1 2 3\n\ngse &lt;- c(\"ABC1\", \"C2\", \"E\", \"AbC1\", \"E\")  # tambíen se pueden usar carácteres (variable ordinal)\n\ngse\n\n[1] \"ABC1\" \"C2\"   \"E\"    \"AbC1\" \"E\"   \n\n\n¡Hagamos una pequeño reto!: ¿Cuál es el valor de a y b? Si a &lt;- 5; b &lt;- a; a &lt;- 4\n\na &lt;- 5\nb &lt;- a\na &lt;- 4\n\nprint(a) # imprimir en la consola\n\n[1] 4\n\nprint(b)\n\n[1] 5\n\na + 10\n\n[1] 14\n\n\nAhora, sea z = a^2 ¿qué resultado obtenemos de a * b + z?\n\nz &lt;- a^2 # asignar\n\na * b + z\n\n[1] 36\n\n\nAdemás de lo anterior, en R es fundamental la creación de data.frames. Un Data.frame es una estructura de datos de dos dimensiones (columnas y filas), donde las columnas pueden ser de diferente naturaleza, pero deben tener el mismo largo. A partir de ella agrupamos variables en una matriz, o sea, construimos una base de datos. Es como “pegar” las columnas (variables) una al lado de otra.\nCreemos un data.frame con los vectores que ya creamos antes.\n\nbase1 &lt;- data.frame(genero, gse, edad) # Resulta como objeto de \"datos\" en\n                                       # entorno.\n\nbase1\n\n  genero  gse edad\n1      3 ABC1   18\n2      1   C2   22\n3      1    E   36\n4      2 AbC1   19\n5      3    E   35\n\n\nComo puedes ver, para crear el data.frame usamos la función que lleva el mismo nombre, colocando dentro del paréntesis los vectores que creamos anteriormente: data.frame(mis_vectores).\nAhora, creemos un data.frame desce cero. En este ejemplo, crearemos los vectores dentro de la función data.frame().\n\n# Ejemplo de como crear un data.frame desde 0: \n\nbase2 &lt;- data.frame(Sexo=c(\"H\",\"M\",\"H\",\"M\",\"H\",\"M\"),\n                    Estatura=c(1.83,1.76,1.82,1.60,1.90,1.66),\n                    Peso=c(67,58,66,48,75,55))\n\nhead(base2)  # Me permite visualizar las primeras filas\n\n  Sexo Estatura Peso\n1    H     1.83   67\n2    M     1.76   58\n3    H     1.82   66\n4    M     1.60   48\n5    H     1.90   75\n6    M     1.66   55\n\n\n\n\n\n\nAntes de trabajar con datos, debemos conocer el concepto de operadores. Estos símbolos no son de uso exclusivo en R, pero no todos tienen el mismo significado que en otros softwares.\nLos operadores son símbolos que permiten, en los distintos procedimientos de procesamiento, simplificar procesos. Por ejemplo, serán útilizados cuando filtremos nuestros datos para personas de ciertas categorías, cuando calculemos variables nuevas (de manera aritmética o condicional) o, simplemente, cuando queramos hacer procesos “concatenados”.\n\n¡Veamos algunos ejemplos!\n\n20 == 5 # igualdad\n\n[1] FALSE\n\n30 &gt;= 14 # mayor o igual que\n\n[1] TRUE\n\n22 &lt;= 2 # menor o igual que\n\n[1] FALSE\n\n25 != 10 # no es igual a\n\n[1] TRUE\n\np = 10; y = 5; p &lt;= y # operatoria en objetos\n\n[1] FALSE\n\n\n\n\n\n\n\nEn R, al igual que en la mayoría de lenguajes de programación, contamos con datos de diversos tipos, en razón de los cuales podemos realizar determinados procedimientos de tratamiento o análisis.\nLos tipos de datos están íntimamente relacionados con el nivel de medición de las variables a las que corresponden. Como viste en clases, la teoría de los niveles de medición contempla cuatro tipos:\n\n\n\n\nPara responder esta pregunta, ¡metamos nuestras manos en los datos!. En esta oportunidad trabajaremos sobre un subset de datos del Modulo de Desigualdad Social de la encuesta International Social Survey Programme del 2019. Esta base la descargaremos directamente desde internet por esta vez (en futuras sesiones aprenderemos cómo cargar bases de datos).\n\n#cargamos la base de datos desde internet\n\nload(url(\"https://github.com/Andreas-Lafferte/descriptiva/blob/main/data/db-proc.RData?raw=true\"))\n\nhead(rand_df) # ver primeros casos de la base\n\n       pais edad   sexo          ideologia percepcion_conflictos\n1     Suiza   23 Hombre          Izquierda                     2\n2     Chile   27  Mujer Sin identificación                     2\n3     Rusia   43  Mujer Sin identificación                     1\n4 Finlandia   71  Mujer Sin identificación                     1\n5     Japon   54  Mujer          Izquierda                     2\n6  Lituania   67  Mujer Sin identificación                     1\n\n\n\n\nLos datos character están directamente asociados a las variables cualitativas (o categóricas). Generalmente suelen ser variables de texto abierto, como es el caso de la variable pais, que detalla el país de procedencia de la persona encuestada.\nPara conocer cuál es el tipo de variable en R, utilizamos el comando class(), y para detallar dentro de la base de datos cuál es la variable de interés, utilizamos el símbolo $ posterior a la base de datos:\n\nclass(rand_df$pais) # siempre es la misma estructura = base$variable\n\n[1] \"character\"\n\n\nSin embargo, estas variables no tienden a ser las mejores a la hora de presentar nuestros resultados. Como solución, tenemos las variables de tipo Factor.\n\n\n\nLas variables de tipo factor son ideales para trabajar con variables de tipo nominal u ordinal. Esto es así debido a que permiten establecer un orden entre las categorías de la variable, lo cual es fundamental si trabajamos, por ejemplo, con variables nominales como el sexo de los encuestados, o si trabajamos con variables ordinales como su ideología política.\n\nclass(rand_df$sexo)\n\n[1] \"factor\"\n\nclass(rand_df$ideologia)\n\n[1] \"factor\"\n\n\n\n\n\nLas variables de tipo numeric son variables de tipo númerica, las cuales pueden ser intervales o de razón. Así, por ejemplo, cuando trabajamos con variables de razón trabajamos con variables como el número de hijos o la edad (aunque sería extraño encuestar a alguien con 0 años).\n\nclass(rand_df$edad)\n\n[1] \"numeric\"\n\n\n\n\n\n\n\nEn R se trabaja a partir de paquetes (packages). ¿Qué son? De forma resumida, los paquetes son un conjunto de funciones o herramientas que pueden ser usadas en R. Los directorios de R donde se almacenan los paquetes se denominan librerías. La lógica es instalar paquetes y luego cargar (o llamar) las librerías cada vez que es necesario usarlas.\nUsualmente para cargar paquetes lo hacemos de la siguiente manera:\n\ninstall.packages(\"paquete\")\nlibrary(paquete)\n\nPero en esta ocasión utilizaremos un paquete llamado pacman, que facilita y agiliza la lectura (instalación y carga) de los paquetes a utilizar en R. De esta forma lo instalamos 1 única vez así:\n\ninstall.packages(\"pacman\")\nlibrary(pacman)\n\nLuego instalaremos y cargaremos los paquetes de R de la siguiente manera, volviendo más eficiente el procedimiento de carga de paquetes.\nEn este práctico utilizaremos seis paquetes\n\npacman: este facilita y agiliza la lectura de los paquetes a utilizar en R\ntidyverse: colección de paquetes, de la cual utilizaremos dplyr y haven\ndplyr: nos permite seleccionar variables de un set de datos\nhaven: cargar y exportar bases de datos en formatos .sav y .dta\ncar: para recodificar/agrupar valores de variables\n\n\npacman::p_load(tidyverse, # colección de paquetes para manipulación de datos\n               dplyr, # para manipular datos\n               haven, # para importar datos\n               car # para recodificar datos\n               )\n\noptions(scipen = 999) # para desactivar notacion cientifica\nrm(list = ls()) # para limpiar el entorno de trabajo\n\nComo se puede ver, antes de la función p_load hay un ::, esto se refiere a que se “fuerza” que esa función provenga de ese paquete (en este caso del paquete pacman)."
  },
  {
    "objectID": "assignment/02-practico-1.html#objetivo-de-la-práctica",
    "href": "assignment/02-practico-1.html#objetivo-de-la-práctica",
    "title": "Práctica 2. Conocimientos básicos de programación en R",
    "section": "",
    "text": "El objetivo de esta guía práctica es introducirnos en los procedimientos básicos del uso del lenguaje y ambiente R.\nEn detalle, aprenderemos:\n\nHerramientas básicas de programación en R\nOperadores en R\nTipos de datos"
  },
  {
    "objectID": "assignment/02-practico-1.html#conocimientos-básicos-de-programación",
    "href": "assignment/02-practico-1.html#conocimientos-básicos-de-programación",
    "title": "Práctica 2. Conocimientos básicos de programación en R",
    "section": "",
    "text": "Revisemos algunos conocimientos básicos para la programación en R. Pero antes, tengamos dos cosas en mente:\n\nPrimero, ¿qué es codificar?, en programación codificar corresponde a un proceso de entrega de instrucciones en un lenguaje específico, siguiendo un orden lógico y coherente.\nSegundo, de aquí en adelante nos manejaremos con una máxima en el curso; existe un acuerdo implícito entre tú y R: R hará todos los cálculos por ti, pero en cambio tú debes dar las instrucciones con total precisión.\n\n\n\nUno de los usos más sencillos y que están a la base de R, es usarlo como una calculadora.\n\n5+5\n\n[1] 10\n\n25/5\n\n[1] 5\n\n2*2\n\n[1] 4\n\n27-2\n\n[1] 25\n\n\nComo podrás ver, el resultado de estas instrucciones aparecen como un [1] en la consola. También podemos hacer operatorias más complejas y con más cálculos.\n\n12*(7+2)+(45-32)+8\n\n[1] 129\n\n22^2 - 2^2\n\n[1] 480\n\n1/200 * 30\n\n[1] 0.15\n\n\n\n\n\nR es un lenguaje de programación orientado a objetos. ¿Qué significa eso?, implica que podemos crear elementos dentro del ambiente de R, a los cuales les asignaremos información que quedará almacenada, información que puede ir desde números, palabras, cálculos hasta grandes bases de datos.\nTodas las instrucciones en R en las que crees objetos, es decir, instrucciones de asignación, tendrán la misma estructura:\nnombre_objeto &lt;- valor\nEl asignador &lt;- se utiliza para crear objetos y forma parte de uno de los operadores usados en R.\nLos elementos que podemos asignar a objetos son múltiples, como números, palabras acompañadas siempre de corchetes \" \" y vectores que corresponden a un conjunto o secuencia de elementos del mismo tipo definidos por la funcion de concatenar = c().\nVeamos un ejemplo creando objetos:\n\nx &lt;- 4 # asignar\n\nx # ejecutar\n\n[1] 4\n\ny &lt;- \"Hola mundo\" # los carácteres alfabéticos siempre van acompañados de corchetes\n\ny \n\n[1] \"Hola mundo\"\n\n\n¿Y concatenando? Hacemos un vector.\n\nedad &lt;- c(18,22,36,19,35) # concatenar (variable de razon)\n\nedad\n\n[1] 18 22 36 19 35\n\ngenero &lt;- c(3,1,1,2,3) # masculino = 1; femenino = 2; transgenero = 3 (variable nominal)\n\ngenero \n\n[1] 3 1 1 2 3\n\ngse &lt;- c(\"ABC1\", \"C2\", \"E\", \"AbC1\", \"E\")  # tambíen se pueden usar carácteres (variable ordinal)\n\ngse\n\n[1] \"ABC1\" \"C2\"   \"E\"    \"AbC1\" \"E\"   \n\n\n¡Hagamos una pequeño reto!: ¿Cuál es el valor de a y b? Si a &lt;- 5; b &lt;- a; a &lt;- 4\n\na &lt;- 5\nb &lt;- a\na &lt;- 4\n\nprint(a) # imprimir en la consola\n\n[1] 4\n\nprint(b)\n\n[1] 5\n\na + 10\n\n[1] 14\n\n\nAhora, sea z = a^2 ¿qué resultado obtenemos de a * b + z?\n\nz &lt;- a^2 # asignar\n\na * b + z\n\n[1] 36\n\n\nAdemás de lo anterior, en R es fundamental la creación de data.frames. Un Data.frame es una estructura de datos de dos dimensiones (columnas y filas), donde las columnas pueden ser de diferente naturaleza, pero deben tener el mismo largo. A partir de ella agrupamos variables en una matriz, o sea, construimos una base de datos. Es como “pegar” las columnas (variables) una al lado de otra.\nCreemos un data.frame con los vectores que ya creamos antes.\n\nbase1 &lt;- data.frame(genero, gse, edad) # Resulta como objeto de \"datos\" en\n                                       # entorno.\n\nbase1\n\n  genero  gse edad\n1      3 ABC1   18\n2      1   C2   22\n3      1    E   36\n4      2 AbC1   19\n5      3    E   35\n\n\nComo puedes ver, para crear el data.frame usamos la función que lleva el mismo nombre, colocando dentro del paréntesis los vectores que creamos anteriormente: data.frame(mis_vectores).\nAhora, creemos un data.frame desce cero. En este ejemplo, crearemos los vectores dentro de la función data.frame().\n\n# Ejemplo de como crear un data.frame desde 0: \n\nbase2 &lt;- data.frame(Sexo=c(\"H\",\"M\",\"H\",\"M\",\"H\",\"M\"),\n                    Estatura=c(1.83,1.76,1.82,1.60,1.90,1.66),\n                    Peso=c(67,58,66,48,75,55))\n\nhead(base2)  # Me permite visualizar las primeras filas\n\n  Sexo Estatura Peso\n1    H     1.83   67\n2    M     1.76   58\n3    H     1.82   66\n4    M     1.60   48\n5    H     1.90   75\n6    M     1.66   55"
  },
  {
    "objectID": "assignment/02-practico-1.html#operadores-en-r",
    "href": "assignment/02-practico-1.html#operadores-en-r",
    "title": "Práctica 2. Conocimientos básicos de programación en R",
    "section": "",
    "text": "Antes de trabajar con datos, debemos conocer el concepto de operadores. Estos símbolos no son de uso exclusivo en R, pero no todos tienen el mismo significado que en otros softwares.\nLos operadores son símbolos que permiten, en los distintos procedimientos de procesamiento, simplificar procesos. Por ejemplo, serán útilizados cuando filtremos nuestros datos para personas de ciertas categorías, cuando calculemos variables nuevas (de manera aritmética o condicional) o, simplemente, cuando queramos hacer procesos “concatenados”.\n\n¡Veamos algunos ejemplos!\n\n20 == 5 # igualdad\n\n[1] FALSE\n\n30 &gt;= 14 # mayor o igual que\n\n[1] TRUE\n\n22 &lt;= 2 # menor o igual que\n\n[1] FALSE\n\n25 != 10 # no es igual a\n\n[1] TRUE\n\np = 10; y = 5; p &lt;= y # operatoria en objetos\n\n[1] FALSE"
  },
  {
    "objectID": "assignment/02-practico-1.html#tipos-de-datos",
    "href": "assignment/02-practico-1.html#tipos-de-datos",
    "title": "Práctica 2. Conocimientos básicos de programación en R",
    "section": "",
    "text": "En R, al igual que en la mayoría de lenguajes de programación, contamos con datos de diversos tipos, en razón de los cuales podemos realizar determinados procedimientos de tratamiento o análisis.\nLos tipos de datos están íntimamente relacionados con el nivel de medición de las variables a las que corresponden. Como viste en clases, la teoría de los niveles de medición contempla cuatro tipos:\n\n\n\n\nPara responder esta pregunta, ¡metamos nuestras manos en los datos!. En esta oportunidad trabajaremos sobre un subset de datos del Modulo de Desigualdad Social de la encuesta International Social Survey Programme del 2019. Esta base la descargaremos directamente desde internet por esta vez (en futuras sesiones aprenderemos cómo cargar bases de datos).\n\n#cargamos la base de datos desde internet\n\nload(url(\"https://github.com/Andreas-Lafferte/descriptiva/blob/main/data/db-proc.RData?raw=true\"))\n\nhead(rand_df) # ver primeros casos de la base\n\n       pais edad   sexo          ideologia percepcion_conflictos\n1     Suiza   23 Hombre          Izquierda                     2\n2     Chile   27  Mujer Sin identificación                     2\n3     Rusia   43  Mujer Sin identificación                     1\n4 Finlandia   71  Mujer Sin identificación                     1\n5     Japon   54  Mujer          Izquierda                     2\n6  Lituania   67  Mujer Sin identificación                     1\n\n\n\n\nLos datos character están directamente asociados a las variables cualitativas (o categóricas). Generalmente suelen ser variables de texto abierto, como es el caso de la variable pais, que detalla el país de procedencia de la persona encuestada.\nPara conocer cuál es el tipo de variable en R, utilizamos el comando class(), y para detallar dentro de la base de datos cuál es la variable de interés, utilizamos el símbolo $ posterior a la base de datos:\n\nclass(rand_df$pais) # siempre es la misma estructura = base$variable\n\n[1] \"character\"\n\n\nSin embargo, estas variables no tienden a ser las mejores a la hora de presentar nuestros resultados. Como solución, tenemos las variables de tipo Factor.\n\n\n\nLas variables de tipo factor son ideales para trabajar con variables de tipo nominal u ordinal. Esto es así debido a que permiten establecer un orden entre las categorías de la variable, lo cual es fundamental si trabajamos, por ejemplo, con variables nominales como el sexo de los encuestados, o si trabajamos con variables ordinales como su ideología política.\n\nclass(rand_df$sexo)\n\n[1] \"factor\"\n\nclass(rand_df$ideologia)\n\n[1] \"factor\"\n\n\n\n\n\nLas variables de tipo numeric son variables de tipo númerica, las cuales pueden ser intervales o de razón. Así, por ejemplo, cuando trabajamos con variables de razón trabajamos con variables como el número de hijos o la edad (aunque sería extraño encuestar a alguien con 0 años).\n\nclass(rand_df$edad)\n\n[1] \"numeric\""
  },
  {
    "objectID": "assignment/02-practico-1.html#cargar-librerías",
    "href": "assignment/02-practico-1.html#cargar-librerías",
    "title": "Práctica 2. Conocimientos básicos de programación en R",
    "section": "",
    "text": "En R se trabaja a partir de paquetes (packages). ¿Qué son? De forma resumida, los paquetes son un conjunto de funciones o herramientas que pueden ser usadas en R. Los directorios de R donde se almacenan los paquetes se denominan librerías. La lógica es instalar paquetes y luego cargar (o llamar) las librerías cada vez que es necesario usarlas.\nUsualmente para cargar paquetes lo hacemos de la siguiente manera:\n\ninstall.packages(\"paquete\")\nlibrary(paquete)\n\nPero en esta ocasión utilizaremos un paquete llamado pacman, que facilita y agiliza la lectura (instalación y carga) de los paquetes a utilizar en R. De esta forma lo instalamos 1 única vez así:\n\ninstall.packages(\"pacman\")\nlibrary(pacman)\n\nLuego instalaremos y cargaremos los paquetes de R de la siguiente manera, volviendo más eficiente el procedimiento de carga de paquetes.\nEn este práctico utilizaremos seis paquetes\n\npacman: este facilita y agiliza la lectura de los paquetes a utilizar en R\ntidyverse: colección de paquetes, de la cual utilizaremos dplyr y haven\ndplyr: nos permite seleccionar variables de un set de datos\nhaven: cargar y exportar bases de datos en formatos .sav y .dta\ncar: para recodificar/agrupar valores de variables\n\n\npacman::p_load(tidyverse, # colección de paquetes para manipulación de datos\n               dplyr, # para manipular datos\n               haven, # para importar datos\n               car # para recodificar datos\n               )\n\noptions(scipen = 999) # para desactivar notacion cientifica\nrm(list = ls()) # para limpiar el entorno de trabajo\n\nComo se puede ver, antes de la función p_load hay un ::, esto se refiere a que se “fuerza” que esa función provenga de ese paquete (en este caso del paquete pacman)."
  },
  {
    "objectID": "assignment/03-practico-1.html",
    "href": "assignment/03-practico-1.html",
    "title": "Práctica 3. Procesamiento, limpieza y manipulación de datos en R",
    "section": "",
    "text": "El objetivo de esta guía práctica es revisar algunos procedimientos básicos de la preparación de datos con R, los cuales son necesarios para luego poder aplicar los contenidos más específicos de este curso.\nEn detalle, aprenderemos:\n\nEstablecer un flujo de trabajo ordenado en un script (.R).\nInstalar y cargar paquetes y librerías, así como también leer bases de datos en R.\nLimpiar, transformar y exportar bases de datos en R.\n\n¡Al final de esta práctica la idea es que cada un_ elabore y entienda su propio documento de preparación de datos!\n\n\n\nEn esta práctica trabajaremos con un subset de los datos del Estudio Longitudinal Social de Chile (ELSOC) realizado por COES. Esta base la pueden encontrar en el canal de U-Cursos sección Material Docente, o bien, en el siguiente enlace  ELSOC 2022 podrán descargar el archivo que contiene la base ELSOC 2022.\nRecuerden que siempre es importante trabajar con el manual/libro de códigos de las bases de datos. El manual de la ELSOC 2022 lo pueden encontrar aquí."
  },
  {
    "objectID": "assignment/03-practico-1.html#objetivo-de-la-práctica",
    "href": "assignment/03-practico-1.html#objetivo-de-la-práctica",
    "title": "Práctica 3. Procesamiento, limpieza y manipulación de datos en R",
    "section": "",
    "text": "El objetivo de esta guía práctica es revisar algunos procedimientos básicos de la preparación de datos con R, los cuales son necesarios para luego poder aplicar los contenidos más específicos de este curso.\nEn detalle, aprenderemos:\n\nEstablecer un flujo de trabajo ordenado en un script (.R).\nInstalar y cargar paquetes y librerías, así como también leer bases de datos en R.\nLimpiar, transformar y exportar bases de datos en R.\n\n¡Al final de esta práctica la idea es que cada un_ elabore y entienda su propio documento de preparación de datos!"
  },
  {
    "objectID": "assignment/03-practico-1.html#recursos-de-la-práctica",
    "href": "assignment/03-practico-1.html#recursos-de-la-práctica",
    "title": "Práctica 3. Procesamiento, limpieza y manipulación de datos en R",
    "section": "",
    "text": "En esta práctica trabajaremos con un subset de los datos del Estudio Longitudinal Social de Chile (ELSOC) realizado por COES. Esta base la pueden encontrar en el canal de U-Cursos sección Material Docente, o bien, en el siguiente enlace  ELSOC 2022 podrán descargar el archivo que contiene la base ELSOC 2022.\nRecuerden que siempre es importante trabajar con el manual/libro de códigos de las bases de datos. El manual de la ELSOC 2022 lo pueden encontrar aquí."
  },
  {
    "objectID": "assignment/03-practico-1.html#cargar-librerías",
    "href": "assignment/03-practico-1.html#cargar-librerías",
    "title": "Práctica 3. Procesamiento, limpieza y manipulación de datos en R",
    "section": "1 Cargar librerías",
    "text": "1 Cargar librerías\nEn R se trabaja a partir de paquetes (packages). ¿Qué son? De forma resumida, los paquetes son un conjunto de funciones o herramientas que pueden ser usadas en R. Los directorios de R donde se almacenan los paquetes se denominan librerías. La lógica es instalar paquetes y luego cargar (o llamar) las librerías cada vez que es necesario usarlas.\nUsualmente para cargar paquetes lo hacemos de la siguiente manera:\n\ninstall.packages(\"paquete\")\nlibrary(paquete)\n\nPero en esta ocasión utilizaremos un paquete llamado pacman, que facilita y agiliza la lectura (instalación y carga) de los paquetes a utilizar en R. De esta forma lo instalamos 1 única vez así:\n\ninstall.packages(\"pacman\")\nlibrary(pacman)\n\nLuego instalaremos y cargaremos los paquetes de R de la siguiente manera, volviendo más eficiente el procedimiento de carga de paquetes.\nEn este práctico utilizaremos seis paquetes\n\npacman: este facilita y agiliza la lectura de los paquetes a utilizar en R\ntidyverse: colección de paquetes, de la cual utilizaremos dplyr y haven\ndplyr: nos permite seleccionar variables de un set de datos\nhaven: cargar y exportar bases de datos en formatos .sav y .dta\ncar: para recodificar/agrupar valores de variables\n\n\npacman::p_load(tidyverse, # colección de paquetes para manipulación de datos\n               dplyr, # para manipular datos\n               haven, # para importar datos\n               car) # para recodificar datos\n               \noptions(scipen = 999) # para desactivar notacion cientifica\nrm(list = ls()) # para limpiar el entorno de trabajo\n\nComo se puede ver, antes de la función p_load hay un ::, esto se refiere a que se “fuerza” que esa función provenga de ese paquete (en este caso del paquete pacman)."
  },
  {
    "objectID": "assignment/03-practico-1.html#importar-datos",
    "href": "assignment/03-practico-1.html#importar-datos",
    "title": "Práctica 3. Procesamiento, limpieza y manipulación de datos en R",
    "section": "2 Importar datos",
    "text": "2 Importar datos\nEn R es es posible importar y exportar datos que se encuentren en cualquier formato: ya sea .csv, .dta, .sav, .xlsx y, por supuesto, .rds y .RData. Sin embargo, para poder hacerlo lo primero es instalar y cargar las librerías que contienen las funciones necesarias para la importación de distintos tipos de archivos.\nPero, ¿dónde están mis datos? Como hemos mencionado, nuestros datos los dejaremos en la carpeta input/data de nuestro proyecto. La base con la que trabajaremos en este práctico pueden encontrarla en el material docente en U-Cursos, o bien, en el siguiente enlace.\nLuego de descargar la base de datos, asegurate de dejar el archivo .sav en la carpeta input/data de tu proyecto. Nota: Los datos tendrán distinto nombre según su formato (.sav, .csv, .dta, etc.).\nUna vez descargados los datos y cargado el paquete haven, procedemos a importar nuestra base de datos. Para ello, en nuestro script, dejamos indicado que a partir de la lectura de los datos con read_sav(), crearemos un objeto llamado elsoc_2022. Fijate en el Enviroment, ya que si lo anterior se logra, el objeto aparecerá allí.\nLa estructura general para importar datos es la siguiente:\nread_*(\"ruta_hacia_archivo/nombre_archivo.*\")\n\nelsoc_2022 &lt;- read_sav(\"input/data/ELSOC_W06_v1.0_SPSS.sav\")\n\n\n\n\n\n\n\nNota\n\n\n\nPara importar los datos en R debemos tener en consideración tres cosas:\n\nCómo se llaman los datos (en nuestro caso ELSOC_W05_v1.0_SPSS)\nEl formato de nuestros datos (en nuestro caso .sav)\nEl lugar de donde están alojados nuestros datos\n\n\n\n\n2.1.1 Importar datos en otros formatos\nNo siempre nuestros datos vendrán en un único formato. Para ello, R cuenta con otras formas de leer distintos tipos de formatos. Puedes ver las principales en el siguiente enlace."
  },
  {
    "objectID": "assignment/03-practico-1.html#explorar-datos",
    "href": "assignment/03-practico-1.html#explorar-datos",
    "title": "Práctica 3. Procesamiento, limpieza y manipulación de datos en R",
    "section": "3 Explorar datos",
    "text": "3 Explorar datos\nLo más probable es que no trabajemos con todos los datos que importamos, por lo que debemos seleccionar aquellas variables con las que trabajaremos para nuestro problema de investigación (cualquiera sea).\nPero, para ello primero debemos explorar nuestros datos, si no ¿cómo puedo saber qué seleccionar y qué no? En R, las funciones más comunes para explorar datos son:\n\nView(elsoc_2022) # Ver datos\nnames(elsoc_2022) # Nombre de columnas\ndim(elsoc_2022) # Dimensiones\nstr(elsoc_2022) # Estructura de los datos (las clases y categorias de repuesta)\n\nTenemos una base de datos con 1000 casos o filas y con 13 variables o columnas."
  },
  {
    "objectID": "assignment/03-practico-1.html#limpiar-datos",
    "href": "assignment/03-practico-1.html#limpiar-datos",
    "title": "Práctica 3. Procesamiento, limpieza y manipulación de datos en R",
    "section": "4 Limpiar datos",
    "text": "4 Limpiar datos\nPara todos los subprocesos que involucra la “limpieza” de datos, tenemos al menos dos maneras. Por un lado, podemos usar las funciones de R base, es decir, que no requieren paquetes extras. Por el otro, podemos usar las funciones del paquete dplyr(), que es una gramática o dialecto de manipulación de datos que proporciona un conjunto de coherente funciones o “verbos” básicos para programar.\n\n\n\n\n\n\n\n\n\nPero, ¿por qué gramática y verbos? Porque a diferencia de otras formas de programar, dplyr() está orientado a escribir código como la escritura normal, es decir, de izquierda a derecha. Generalmente, la estructura de dplyr() es:\ndplyr::funcion(datos, variable1, variable2, variable_n)\nEn este práctico solo nos centraremos en manipular datos con dplyr(). Para conocer cómo hacer lo mismo pero con R base visita este enlace.\n\n\n4.1 Seleccionar\nUna vez tenemos claras cúales son las variables que nos interesan, las seleccionamos y almacenamos en una nueva base de datos. Esto debido que evitará confusiones y hará más eficiente nuestros analísis en términos de memoria.\nEn R base, el primer argumento dentro del bracket [] refiere a las filas y el segundo a las columnas. De manera similar, la función select() de dplyr facilita el trabajo a la hora de seleccionar variables. La estructura general del comando siempre es select(datos, variable1, variable2, variable3).\nHay distintas formas de usar select(), ¡veámoslas!\nPor indexación o ubicación en la base de datos:\n\ndplyr::select(elsoc_2022, 1, 2) # la primera y la segunda columna\n\ndplyr::select(elsoc_2022, 1:4) # la primera hasta la cuarta columna\n\ndplyr::select(elsoc_2022, c(1, 4, 5)) # la primera, la cuarta y la quinta columna\n\nTambién podemos usar el nombre de la variable/columna. Si conocemos el nombre de la variable simplemente lo podemos poner y se seleccionará. Con select() no es necesario poner los nombres con comillas \" \":\n\ndplyr::select(elsoc_2022, m0_sexo, m0_edad, m13)\n\n# A tibble: 1,000 × 3\n   m0_sexo m0_edad     m13\n   &lt;chr&gt;     &lt;dbl&gt;   &lt;dbl&gt;\n 1 Hombre       38 4000000\n 2 Mujer        45 2700000\n 3 Hombre       42  600000\n 4 Hombre       29 1250000\n 5 Mujer        53  500000\n 6 Mujer        52      NA\n 7 Mujer        50      NA\n 8 Mujer        57       0\n 9 Mujer        47  600000\n10 Hombre       79      NA\n# ℹ 990 more rows\n\n\nOtra cosa que podemos hacer es renombrar las variables al momento de seleccionarlas, para que tengan un sentido más sustantivo para nosotros.\n\ndplyr::select(elsoc_2022, sexo = m0_sexo, edad = m0_edad, ingreso = m13)\n\n# A tibble: 1,000 × 3\n   sexo    edad ingreso\n   &lt;chr&gt;  &lt;dbl&gt;   &lt;dbl&gt;\n 1 Hombre    38 4000000\n 2 Mujer     45 2700000\n 3 Hombre    42  600000\n 4 Hombre    29 1250000\n 5 Mujer     53  500000\n 6 Mujer     52      NA\n 7 Mujer     50      NA\n 8 Mujer     57       0\n 9 Mujer     47  600000\n10 Hombre    79      NA\n# ℹ 990 more rows\n\n\nPor último, podemos usar select() para reordenar nuestras variables, lo cual es importante por si por ejemplo utilizamos variables de identificación.\n\ndplyr::select(elsoc_2022, m0_edad, m0_sexo, c25, m13)\n\n# A tibble: 1,000 × 4\n   m0_edad m0_sexo   c25     m13\n     &lt;dbl&gt; &lt;chr&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n 1      38 Hombre      1 4000000\n 2      45 Mujer       1 2700000\n 3      42 Hombre      3  600000\n 4      29 Hombre      1 1250000\n 5      53 Mujer       2  500000\n 6      52 Mujer       3      NA\n 7      50 Mujer       2      NA\n 8      57 Mujer       1       0\n 9      47 Mujer       1  600000\n10      79 Hombre      2      NA\n# ℹ 990 more rows\n\n\nAhora, ¡apliquemos conocimientos! seleccionando y renombrando las variables de interés en un nueva base llamada proc_elsoc.\nEn este ejemplo utilizaremos las siguientes variables:\n\nm0_sexo: sexo del entrevistado\nm0_edad: edad del entrevistado\nm13: ingreso mensual entrevistado\nc25: preferencia entre autoritarismo y democracia\nf05_01: justificación violencia hacia delincuentes\n\n\nproc_elsoc &lt;- dplyr::select(elsoc_2022, \n                            edad = m0_edad,\n                            sexo = m0_sexo,\n                            ingreso = m13,\n                            autor_democ = c25,\n                            jv_delincuentes = f05_01)\n\nproc_elsoc\n\n# A tibble: 1,000 × 5\n    edad sexo   ingreso autor_democ jv_delincuentes\n   &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt;       &lt;dbl&gt;           &lt;dbl&gt;\n 1    38 Hombre 4000000           1              NA\n 2    45 Mujer  2700000           1               3\n 3    42 Hombre  600000           3              NA\n 4    29 Hombre 1250000           1               1\n 5    53 Mujer   500000           2               3\n 6    52 Mujer       NA           3               2\n 7    50 Mujer       NA           2               5\n 8    57 Mujer        0           1               4\n 9    47 Mujer   600000           1               3\n10    79 Hombre      NA           2               1\n# ℹ 990 more rows\n\n\nEsta nueva base de datos sigue manteniendo los 1.000 casos/filas, pero ahora solo tiene 5 variables/columnas. ¿Qué pasa si solo quiero trabajar con un subconjunto de estos datos, por ejemplo, las mujeres mayores a 25 años? La respuesta es filtrar.\n\n\n4.2 Filtrar\nTal y como regularmente no trabajamos con todas las variables de una base de datos, no siempre desearemos trabajar con todas las observaciones que tenemos en los datos. Habrá ocasiones (varias) en las que querremos trabajar con casos que cumplan ciertas condiciones; que sean de determinada edad, residencia, tiempo o que simplemente hayan respondido de determinada forma una pregunta.\nCon dplyr podemos filtrar nuestros datos con el comando filter(), en el cual debemos especificar los datos y las condiciones que queremos aplicarle a determinadas variables.\n\ndplyr::filter(proc_elsoc, autor_democ == 1)\n\n# A tibble: 552 × 5\n    edad sexo   ingreso autor_democ jv_delincuentes\n   &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt;       &lt;dbl&gt;           &lt;dbl&gt;\n 1    38 Hombre 4000000           1              NA\n 2    45 Mujer  2700000           1               3\n 3    29 Hombre 1250000           1               1\n 4    57 Mujer        0           1               4\n 5    47 Mujer   600000           1               3\n 6    39 Hombre 1350000           1               4\n 7    61 Mujer       NA           1               3\n 8    25 Hombre      NA           1               2\n 9    42 Hombre 1100000           1               4\n10    51 Hombre  800000           1               1\n# ℹ 542 more rows\n\n\nPara indicarle a R que nos filtre aquellos casos que cumplen con la condición de ser iguales a 1 (autor_democ == 1), usamos el operador ==. ¿Y esto de dónde salió? recuerda que los operadores en R los vimos en la segunda sesión\nTambién podemos agregar muchas condiciones para filtrar nuestros datos. Solamente debemos agregarlo, usando los operadores relacionales de R.\n\ndplyr::filter(proc_elsoc, autor_democ == 1 & edad &gt;= 25)\n\n# A tibble: 544 × 5\n    edad sexo   ingreso autor_democ jv_delincuentes\n   &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt;       &lt;dbl&gt;           &lt;dbl&gt;\n 1    38 Hombre 4000000           1              NA\n 2    45 Mujer  2700000           1               3\n 3    29 Hombre 1250000           1               1\n 4    57 Mujer        0           1               4\n 5    47 Mujer   600000           1               3\n 6    39 Hombre 1350000           1               4\n 7    61 Mujer       NA           1               3\n 8    25 Hombre      NA           1               2\n 9    42 Hombre 1100000           1               4\n10    51 Hombre  800000           1               1\n# ℹ 534 more rows\n\n\nPero, ¿y si tengo variables tipo character o factor? Tanto en R base como con dplyr podemos especificar condiciones y filtrar este tipo de datos usando las comillas \" \".\n\ndplyr::filter(proc_elsoc, sexo == \"Mujer\")\n\n# A tibble: 656 × 5\n    edad sexo  ingreso autor_democ jv_delincuentes\n   &lt;dbl&gt; &lt;chr&gt;   &lt;dbl&gt;       &lt;dbl&gt;           &lt;dbl&gt;\n 1    45 Mujer 2700000           1               3\n 2    53 Mujer  500000           2               3\n 3    52 Mujer      NA           3               2\n 4    50 Mujer      NA           2               5\n 5    57 Mujer       0           1               4\n 6    47 Mujer  600000           1               3\n 7    61 Mujer      NA           1               3\n 8    78 Mujer      NA           4               1\n 9    65 Mujer      NA           1               1\n10    69 Mujer      NA           2               1\n# ℹ 646 more rows\n\n\n¡Apliquémos conocimientos! Filtremos nuestros datos quedándonos solo con aquellos casos o personas que tengan o sean mayores a 25 años de edad.\n\nproc_elsoc &lt;- dplyr::filter(proc_elsoc, edad &gt;= 25)\n\nproc_elsoc\n\n# A tibble: 980 × 5\n    edad sexo   ingreso autor_democ jv_delincuentes\n   &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt;       &lt;dbl&gt;           &lt;dbl&gt;\n 1    38 Hombre 4000000           1              NA\n 2    45 Mujer  2700000           1               3\n 3    42 Hombre  600000           3              NA\n 4    29 Hombre 1250000           1               1\n 5    53 Mujer   500000           2               3\n 6    52 Mujer       NA           3               2\n 7    50 Mujer       NA           2               5\n 8    57 Mujer        0           1               4\n 9    47 Mujer   600000           1               3\n10    79 Hombre      NA           2               1\n# ℹ 970 more rows\n\n\n\n\n4.3 Recodificar\nUna parte fundamental del procesamiento e integración de datos es la recodificación de variables. Esto implica que, a determinadas variables, le aplicaremos ciertos cambios de acuerdo a ciertas reglas y criterios establecidos con anterioridad, siempre cuidando la coherencia con nuestro objetivo de investigación.\nHay múltiples formas de recodificar en R, pero en este ejemplo trabajaremos con el comando recode() del paquete car.\nEsta vez, recodificaremos las siguientes variables: sexo, ingreso, autor_democ y jv_delincuentes. Para esto, nos apoyaremos en el libro de códigos.\n\n\n\n\n\n\nTip\n\n\n\nEl comando recode() generalmente sigue esta estructura:\ncar::recode(datos$variable, recodes = c('valor_orig1=nuevo_valor1;valor_org2=nuevo_valor2'))\n\n\nRecodifiquemos las variables sexo e ingresos:\n\nproc_elsoc$sexo &lt;- car::recode(proc_elsoc$sexo, recodes = c(\"'Hombre' = 'Masculino'; 'Mujer' = 'Femenino'\"))\n\nproc_elsoc$ingreso &lt;- car::recode(proc_elsoc$ingreso, recodes = c(\"-888 = NA; -999 = NA\"))\n\nproc_elsoc\n\n# A tibble: 980 × 5\n    edad sexo      ingreso autor_democ jv_delincuentes\n   &lt;dbl&gt; &lt;chr&gt;       &lt;dbl&gt;       &lt;dbl&gt;           &lt;dbl&gt;\n 1    38 Masculino 4000000           1              NA\n 2    45 Femenino  2700000           1               3\n 3    42 Masculino  600000           3              NA\n 4    29 Masculino 1250000           1               1\n 5    53 Femenino   500000           2               3\n 6    52 Femenino       NA           3               2\n 7    50 Femenino       NA           2               5\n 8    57 Femenino        0           1               4\n 9    47 Femenino   600000           1               3\n10    79 Masculino      NA           2               1\n# ℹ 970 more rows\n\n\nAhora recodifiquemos las demás variables. Además de recodificar valores propiamente tal, con recode() podemos indicarle, en la misma función, que convierta la variable a factor y/o que le asigne niveles (ej. para variables ordinales).\n\nproc_elsoc$autor_democ &lt;- car::recode(proc_elsoc$autor_democ,\n                            recodes = c(\"1 = 'La democracia es preferible a cualquier otra forma de gobierno'; \n                            2 = 'En algunas circunstancias, un gobierno autoritario puede ser preferible a uno democratico'; \n                            3 = 'A la gente como uno, nos da lo mismo un regimen democratico que uno autoritario'; \n                            4 = 'Ninguna'; \n                            -888 = NA; \n                            -999 = NA\"),\n                            as.factor = TRUE) # convertir a factor\n            \nproc_elsoc$jv_delincuentes &lt;- car::recode(proc_elsoc$jv_delincuentes,\n                                            recodes = c(\"1 = 'Nunca';\n                                                       2 = 'Pocas veces';\n                                                       3 = 'Algunas veces';\n                                                       4 = 'Muchas veces';\n                                                       5 = 'Siempre';\n                                                       -888 = NA; \n                                                       -999 = NA\"),\n                                          as.factor = TRUE, # convertir a factor\n                                          levels = c(\"Nunca\",\n                                                     \"Pocas veces\",\n                                                     \"Algunas veces\",\n                                                     \"Muchas veces\",\n                                                     \"Siempre\"))# ordenamos niveles\n  \nproc_elsoc\n\n# A tibble: 980 × 5\n    edad sexo      ingreso autor_democ                           jv_delincuentes\n   &lt;dbl&gt; &lt;chr&gt;       &lt;dbl&gt; &lt;fct&gt;                                 &lt;fct&gt;          \n 1    38 Masculino 4000000 La democracia es preferible a cualqu… &lt;NA&gt;           \n 2    45 Femenino  2700000 La democracia es preferible a cualqu… Algunas veces  \n 3    42 Masculino  600000 A la gente como uno, nos da lo mismo… &lt;NA&gt;           \n 4    29 Masculino 1250000 La democracia es preferible a cualqu… Nunca          \n 5    53 Femenino   500000 En algunas circunstancias, un gobier… Algunas veces  \n 6    52 Femenino       NA A la gente como uno, nos da lo mismo… Pocas veces    \n 7    50 Femenino       NA En algunas circunstancias, un gobier… Siempre        \n 8    57 Femenino        0 La democracia es preferible a cualqu… Muchas veces   \n 9    47 Femenino   600000 La democracia es preferible a cualqu… Algunas veces  \n10    79 Masculino      NA En algunas circunstancias, un gobier… Nunca          \n# ℹ 970 more rows\n\n\n\n\n\n\n\n\nNota\n\n\n\nComo se puede ver, los valores -888 y -999 fueron codificados como valores pérdidos ya que estos valores significan no sabe y no responde, respectivamente.\n\n\n\n\n4.4 Tratamiento casos pérdidos\nComúnmente, los datos con los que trabajamos suelen tener valores pérdidos o nulos que en R se denominan como NA. Estos valores no nos entregan información útil para nuestros análisis, y pueden generar problemas al momento de, por ejemplo, calcular medidas de tendencia central, u otros procedimientos estadísticos.\nHay diversas maneras de trabajar los valores nulos. Sin embargo, la más sencilla consiste en eliminar los valores nulos que se encuentran presentes en nuestros datos.\nEl primer paso es identificar valores nulos en el conjunto de datos en general, o en alguna variable en específico. Para ello, empleamos la función is.na().\n\nis.na(proc_elsoc)\n\nis.na(proc_elsoc$ingreso)\n\nPero esto es poco útil. Como opción, podemos sumar o contar la cantidad de valores pérdidos.\n\nsum(is.na(proc_elsoc))\n\n[1] 515\n\n\n¿Y si no sabemos qué variables o columnas tienen casos pérdidos? Una forma es usar la función colSums().\n\ncolSums(is.na(proc_elsoc))\n\n           edad            sexo         ingreso     autor_democ jv_delincuentes \n              0               0             435              13              67 \n\n\nUna vez identificamos los valores nulos, podemos proceder a removerlos de la base de datos. El comando na.omit() eliminará todas las filas que presenten casos perdidos.\n\nproc_elsoc &lt;- na.omit(proc_elsoc)\n\nproc_elsoc\n\n# A tibble: 496 × 5\n    edad sexo      ingreso autor_democ                           jv_delincuentes\n   &lt;dbl&gt; &lt;chr&gt;       &lt;dbl&gt; &lt;fct&gt;                                 &lt;fct&gt;          \n 1    45 Femenino  2700000 La democracia es preferible a cualqu… Algunas veces  \n 2    29 Masculino 1250000 La democracia es preferible a cualqu… Nunca          \n 3    53 Femenino   500000 En algunas circunstancias, un gobier… Algunas veces  \n 4    57 Femenino        0 La democracia es preferible a cualqu… Muchas veces   \n 5    47 Femenino   600000 La democracia es preferible a cualqu… Algunas veces  \n 6    39 Masculino 1350000 La democracia es preferible a cualqu… Muchas veces   \n 7    42 Masculino 1100000 La democracia es preferible a cualqu… Muchas veces   \n 8    51 Masculino  800000 La democracia es preferible a cualqu… Nunca          \n 9    38 Masculino 1600000 A la gente como uno, nos da lo mismo… Algunas veces  \n10    45 Femenino   500000 La democracia es preferible a cualqu… Nunca          \n# ℹ 486 more rows"
  },
  {
    "objectID": "assignment/03-practico-1.html#transformar-variables",
    "href": "assignment/03-practico-1.html#transformar-variables",
    "title": "Práctica 3. Procesamiento, limpieza y manipulación de datos en R",
    "section": "5 Transformar variables",
    "text": "5 Transformar variables\nUn último paso en el procesamiento de datos es la creación o derivación de nuevas variables a partir de los datos que ya tenemos. Esto es relevante no solo para procesar datos, sino porque permite generar variables que se alineen mucho mejor con nuestros objetivos de análisis.\nA diferencia de R base, con la función mutate() de dplyr podemos recodificar todas nuestras variables en un solo código si así lo queremos. Además, nos ahorramos especificar en todo momento la base de datos, ya que esa es la lógica de programación con dplyr().\nLa estructura de mutate() es generalmente esta:\ndplyr::mutate(datos, nueva_variable = funcion())\nAdemás, la función mutate() de dplyr no solo nos permite recodificar variables, sino que también crear otras nuevas manteniendo las originales. Para este ejemplo usaremos dos funciones adicionales de dplyr que, al combinarlas con mutate(), podremos transformar variables de manera muy sencilla.\nEn este ejemplo, transformaremos las variables edad e ingresos, y crearemos una nueva variable llamada año de la encuesta y otra llamada ingreso_minimo.\n¡Veámos cómo se hace!\nGeneremos las nueva variable año:\n\nproc_elsoc &lt;- mutate(proc_elsoc, ano = 2022)\n\nproc_elsoc\n\n# A tibble: 496 × 6\n    edad sexo      ingreso autor_democ                     jv_delincuentes   ano\n   &lt;dbl&gt; &lt;chr&gt;       &lt;dbl&gt; &lt;fct&gt;                           &lt;fct&gt;           &lt;dbl&gt;\n 1    45 Femenino  2700000 La democracia es preferible a … Algunas veces    2022\n 2    29 Masculino 1250000 La democracia es preferible a … Nunca            2022\n 3    53 Femenino   500000 En algunas circunstancias, un … Algunas veces    2022\n 4    57 Femenino        0 La democracia es preferible a … Muchas veces     2022\n 5    47 Femenino   600000 La democracia es preferible a … Algunas veces    2022\n 6    39 Masculino 1350000 La democracia es preferible a … Muchas veces     2022\n 7    42 Masculino 1100000 La democracia es preferible a … Muchas veces     2022\n 8    51 Masculino  800000 La democracia es preferible a … Nunca            2022\n 9    38 Masculino 1600000 A la gente como uno, nos da lo… Algunas veces    2022\n10    45 Femenino   500000 La democracia es preferible a … Nunca            2022\n# ℹ 486 more rows\n\n\n\nTransformar variables con case_when() e if_else()\nGeneremos nuevas variables para edad e ingresos dejándolas como tramos con case_when().\n\nproc_elsoc &lt;- mutate(proc_elsoc,\n                     tramo_edad = case_when(edad &lt;= 29 ~ \"Jovenes\",\n                                            edad &gt;= 30 & edad &lt;= 59 ~ \"Adultos\",\n                                            edad &gt;= 60 ~ \"Adutos mayores\"))\n\n\nproc_elsoc &lt;- mutate(proc_elsoc,\n                     tramo_ingreso = case_when(ingreso &lt;= 250000 ~ \"Tramo 1\",\n                                                ingreso &gt; 250000 & ingreso &lt;= 500000 ~ \"Tramo 2\",\n                                                ingreso &gt; 500000 & ingreso &lt;= 750000 ~ \"Tramo 3\",\n                                                ingreso &gt; 750000 & ingreso &lt;= 1000000 ~ \"Tramo 4\",\n                                                ingreso &gt; 1000000 ~ \"Tramo 5\"))\n\nproc_elsoc\n\n# A tibble: 496 × 8\n    edad sexo      ingreso autor_democ          jv_delincuentes   ano tramo_edad\n   &lt;dbl&gt; &lt;chr&gt;       &lt;dbl&gt; &lt;fct&gt;                &lt;fct&gt;           &lt;dbl&gt; &lt;chr&gt;     \n 1    45 Femenino  2700000 La democracia es pr… Algunas veces    2022 Adultos   \n 2    29 Masculino 1250000 La democracia es pr… Nunca            2022 Jovenes   \n 3    53 Femenino   500000 En algunas circunst… Algunas veces    2022 Adultos   \n 4    57 Femenino        0 La democracia es pr… Muchas veces     2022 Adultos   \n 5    47 Femenino   600000 La democracia es pr… Algunas veces    2022 Adultos   \n 6    39 Masculino 1350000 La democracia es pr… Muchas veces     2022 Adultos   \n 7    42 Masculino 1100000 La democracia es pr… Muchas veces     2022 Adultos   \n 8    51 Masculino  800000 La democracia es pr… Nunca            2022 Adultos   \n 9    38 Masculino 1600000 A la gente como uno… Algunas veces    2022 Adultos   \n10    45 Femenino   500000 La democracia es pr… Nunca            2022 Adultos   \n# ℹ 486 more rows\n# ℹ 1 more variable: tramo_ingreso &lt;chr&gt;\n\n\nAhora, generemos una nueva variable llamada ingreso_minimo con la función if_else().\n\nproc_elsoc &lt;- mutate(proc_elsoc,\n                     ingreso_minimo = if_else(ingreso &lt; 410000, \"debajo minimo\", \"sobre minimo\"))\n\nselect(proc_elsoc, ingreso, ingreso_minimo) #veamosla!\n\n# A tibble: 496 × 2\n   ingreso ingreso_minimo\n     &lt;dbl&gt; &lt;chr&gt;         \n 1 2700000 sobre minimo  \n 2 1250000 sobre minimo  \n 3  500000 sobre minimo  \n 4       0 debajo minimo \n 5  600000 sobre minimo  \n 6 1350000 sobre minimo  \n 7 1100000 sobre minimo  \n 8  800000 sobre minimo  \n 9 1600000 sobre minimo  \n10  500000 sobre minimo  \n# ℹ 486 more rows"
  },
  {
    "objectID": "assignment/03-practico-1.html#guardar-y-exportar-datos-procesados",
    "href": "assignment/03-practico-1.html#guardar-y-exportar-datos-procesados",
    "title": "Práctica 3. Procesamiento, limpieza y manipulación de datos en R",
    "section": "6 Guardar y exportar datos procesados",
    "text": "6 Guardar y exportar datos procesados\n¡Legamos al final! El último paso que nos queda es guardar y exportar nuestra base de datos procesada. Siguiendo el flujo de trabajo propuesto, guardaremos la base procesada en formato .Rdata y la alojaremos en la carpeta output de nuestro proyecto.\nEste último paso es bastante sencillo, solo debemos especificar la base que queremos guadar y su ruta:\n\nsave(proc_elsoc,file=\"output/proc_elsoc.Rdata\")"
  },
  {
    "objectID": "assignment/03-practico-1.html#resumen",
    "href": "assignment/03-practico-1.html#resumen",
    "title": "Práctica 3. Procesamiento, limpieza y manipulación de datos en R",
    "section": "Resumen",
    "text": "Resumen\nHoy aprendimos a procesar datos en R. En detalle, vimos:\n\nCómo establecer un flujo de trabajo de procesamiento y análisis de datos en R.\nInstalar y cargar paquetes y librerías, así como también leer bases de datos en R.\nLimpiar, transformar y exportar bases de datos en R."
  },
  {
    "objectID": "assignment/04-practico.html",
    "href": "assignment/04-practico.html",
    "title": "Práctica 4. Análisis descriptivo de datos en R",
    "section": "",
    "text": "El objetivo de esta guía práctica es conocer las principales formas de realizar analísis estadísticos descriptivo en R, aplicando los concocimientos aprendidos durante el curso.\nEn detalle, aprenderemos:\n\nEstablecer un flujo de trabajo ordenado en un script (.R).\nAplicar análisis estadísticos descriptivos a variables según su nivel de medición\n\n\n\n\nEn esta práctica trabajeremos con los datos procesados que obtuvimos en la práctica anterior a partir de los datos del Estudio Longitudinal Social de Chile (ELSOC) realizado por COES.\nRecuerden que siempre es importante trabajar con el manual/libro de códigos de las bases de datos. El manual de la ELSOC 2022 lo pueden encontrar aquí.\n\n\n\nPor temas de orden y reproducibilidad, en este curso vamos a separar en dos momentos el trabajo con datos, y dos archivos de código correspondientes:\n\nPreparación: corresponde a lo que se conoce generalmente como “limpieza”, es decir, realizar las modificaciones necesarias a los datos para poder efectuar los análisis. Estas modificaciones previas al análisis son necesarias ya que los datos originales con los que se va a trabajar en general no vienen perfectamente adaptados a los análisis que se quieren hacer. Por lo tanto, en cuanto a datos también hacemos la distinción entre datos originales y datos preparados (o procesados).\nAnálisis: se relaciona con análisis estadísticos, en este caso descriptivos, asociados a las preguntas e hipótesis de investigación.\n\nLos procesos de preparación y análisis vinculados tanto a datos y resultados se presentan en el siguiente esquema:\n\nTanto la preparación como el análisis (que son parte del concepto más general de procesamiento) quedan registrados cada uno en un archivo de código respectivo.\nEn esta guía nos centraremos en el análisis de datos con R. El documento de código de análisis tiene, por lo menos, 4 partes más una sección de identificación inicial:\n\nIdentificación y descripción general: Título, autor(es), fecha, información breve sobre el contenido del documento\nLibrerías: instalar/cargar librerías a utilizar\nDatos: carga de datos\nExplorar: explorar datos\nAnálisis: analizar datos y realizar estimaciones"
  },
  {
    "objectID": "assignment/04-practico.html#objetivo-de-la-práctica",
    "href": "assignment/04-practico.html#objetivo-de-la-práctica",
    "title": "Práctica 4. Análisis descriptivo de datos en R",
    "section": "",
    "text": "El objetivo de esta guía práctica es conocer las principales formas de realizar analísis estadísticos descriptivo en R, aplicando los concocimientos aprendidos durante el curso.\nEn detalle, aprenderemos:\n\nEstablecer un flujo de trabajo ordenado en un script (.R).\nAplicar análisis estadísticos descriptivos a variables según su nivel de medición"
  },
  {
    "objectID": "assignment/04-practico.html#recursos-de-la-práctica",
    "href": "assignment/04-practico.html#recursos-de-la-práctica",
    "title": "Práctica 4. Análisis descriptivo de datos en R",
    "section": "",
    "text": "En esta práctica trabajeremos con los datos procesados que obtuvimos en la práctica anterior a partir de los datos del Estudio Longitudinal Social de Chile (ELSOC) realizado por COES.\nRecuerden que siempre es importante trabajar con el manual/libro de códigos de las bases de datos. El manual de la ELSOC 2022 lo pueden encontrar aquí."
  },
  {
    "objectID": "assignment/04-practico.html#flujo-de-trabajo-reproducible",
    "href": "assignment/04-practico.html#flujo-de-trabajo-reproducible",
    "title": "Práctica 4. Análisis descriptivo de datos en R",
    "section": "",
    "text": "Por temas de orden y reproducibilidad, en este curso vamos a separar en dos momentos el trabajo con datos, y dos archivos de código correspondientes:\n\nPreparación: corresponde a lo que se conoce generalmente como “limpieza”, es decir, realizar las modificaciones necesarias a los datos para poder efectuar los análisis. Estas modificaciones previas al análisis son necesarias ya que los datos originales con los que se va a trabajar en general no vienen perfectamente adaptados a los análisis que se quieren hacer. Por lo tanto, en cuanto a datos también hacemos la distinción entre datos originales y datos preparados (o procesados).\nAnálisis: se relaciona con análisis estadísticos, en este caso descriptivos, asociados a las preguntas e hipótesis de investigación.\n\nLos procesos de preparación y análisis vinculados tanto a datos y resultados se presentan en el siguiente esquema:\n\nTanto la preparación como el análisis (que son parte del concepto más general de procesamiento) quedan registrados cada uno en un archivo de código respectivo.\nEn esta guía nos centraremos en el análisis de datos con R. El documento de código de análisis tiene, por lo menos, 4 partes más una sección de identificación inicial:\n\nIdentificación y descripción general: Título, autor(es), fecha, información breve sobre el contenido del documento\nLibrerías: instalar/cargar librerías a utilizar\nDatos: carga de datos\nExplorar: explorar datos\nAnálisis: analizar datos y realizar estimaciones"
  },
  {
    "objectID": "assignment/04-practico.html#cargar-librerías",
    "href": "assignment/04-practico.html#cargar-librerías",
    "title": "Práctica 4. Análisis descriptivo de datos en R",
    "section": "1 Cargar librerías",
    "text": "1 Cargar librerías\nEste paso ya lo realizamos y cargamos todas las librerías necesarias. Pero si, al trabajar los distintos script lo hacemos en sesiones diferentes, debemos volver a cargar las librerías.\n\ninstall.packages(\"pacman\") #para instalar\nlibrary(pacman) # para llamar/cargar\n\nEn este práctico utilizaremos los siguientes paquetes:\n\npacman: este facilita y agiliza la lectura de los paquetes a utilizar en R\ntidyverse: colección de paquetes, de la cual utilizaremos dplyr y haven\ndplyr: nos permite seleccionar variables de un set de datos\npsych: para analizar descriptivamente datos\nsjmisc: para analizar descriptivamente datos\nsjPlot: para tablas cruzadas o de contingencia\n\n\npacman::p_load(tidyverse, # colección de paquetes para manipulación de datos\n               dplyr, # para manipular datos\n               psych, # para analizar datos\n               sjmisc, # para analizar datos\n               sjPlot) # para tablas de contingencia\n\noptions(scipen = 999) # para desactivar notacion cientifica\nrm(list = ls()) # para limpiar el entorno de trabajo"
  },
  {
    "objectID": "assignment/04-practico.html#importar-datos",
    "href": "assignment/04-practico.html#importar-datos",
    "title": "Práctica 4. Análisis descriptivo de datos en R",
    "section": "2 Importar datos",
    "text": "2 Importar datos\nUsamos los datos creados en el procesamiento que se encuentran guardados en la carpeta output.\n\nload(\"output/proc_elsoc.Rdata\")\n\n\nload(url(\"https://github.com/cursos-metodos-facso/descriptiva/raw/main/assignment/output/proc_elsoc.Rdata\"))"
  },
  {
    "objectID": "assignment/04-practico.html#explorar-datos",
    "href": "assignment/04-practico.html#explorar-datos",
    "title": "Práctica 4. Análisis descriptivo de datos en R",
    "section": "3 Explorar datos",
    "text": "3 Explorar datos\n\nView(proc_elsoc) # Ver datos\nnames(proc_elsoc) # Nombre de columnas\ndim(proc_elsoc) # Dimensiones\nstr(proc_elsoc) # Estructura de los datos (las clases y categorias de repuesta)\n\nEn este caso, nuestra base de datos procesada tiene 496 casos y 9 variables."
  },
  {
    "objectID": "assignment/04-practico.html#análisis",
    "href": "assignment/04-practico.html#análisis",
    "title": "Práctica 4. Análisis descriptivo de datos en R",
    "section": "4 Análisis",
    "text": "4 Análisis\n\n4.1 Estadísticos descriptivos para variables categóricas\nCuando tenemos variables catégoricas, sean nominales u ordinales, podemos utilizar tablas de frecuencias. Recordemos que las frecuencias es una manera ordenar datos según el valor alcanzado en la distribución de una variable.\n\n4.1.1 Frecuencias\n\na) Absolutas y relativas\nPara las variables nominales podemos usar tablas de frecuencias absolutas y relativas, y con ellas conocer la moda, es dedir, el valor con mayor cantidad de observaciones. Para ello, una manera sencilla de hacerlo es mediante la función table de R.\n\ntable(proc_elsoc$sexo)\n\n\n Femenino Masculino \n      277       219 \n\ntable(proc_elsoc$ingreso_minimo)\n\n\ndebajo minimo  sobre minimo \n          211           285 \n\ntable(proc_elsoc$autor_democ)\n\n\n          A la gente como uno, nos da lo mismo un regimen democratico que uno autoritario \n                                                                                      112 \nEn algunas circunstancias, un gobierno autoritario puede ser preferible a uno democratico \n                                                                                       62 \n                           La democracia es preferible a cualquier otra forma de gobierno \n                                                                                      287 \n                                                                                  Ninguna \n                                                                                       35 \n\n\nLo anterior nos entrega la frecuencia absoluta de las variables. Con ello, podemos observar que, en cuanto la preferencias entre autoritarismo y democracia, la mayoría de nuestros casos se concentran en “La democracia es preferible a cualquier otra forma de gobierno”. Para conocer la frecuencia relativa o porcentual de estas podemos utilizar el comando prop.table.\n\n(freq_table1 &lt;-table(proc_elsoc$autor_democ))\n\n\n          A la gente como uno, nos da lo mismo un regimen democratico que uno autoritario \n                                                                                      112 \nEn algunas circunstancias, un gobierno autoritario puede ser preferible a uno democratico \n                                                                                       62 \n                           La democracia es preferible a cualquier otra forma de gobierno \n                                                                                      287 \n                                                                                  Ninguna \n                                                                                       35 \n\nprop.table(freq_table1)*100 \n\n\n          A la gente como uno, nos da lo mismo un regimen democratico que uno autoritario \n                                                                                22.580645 \nEn algunas circunstancias, un gobierno autoritario puede ser preferible a uno democratico \n                                                                                12.500000 \n                           La democracia es preferible a cualquier otra forma de gobierno \n                                                                                57.862903 \n                                                                                  Ninguna \n                                                                                 7.056452 \n\n\nAsí, podemos sostener que un 57,9% de los casos concideran que la democracia es preferible a cualquier otra forma de gobierno.\n\n\nb) Acumuladas\nMientras que si trabajamos con variables ordinales, podemos usar también la frecuencia acumulada:\n\n(freq_table2 &lt;- table(proc_elsoc$tramo_ingreso))\n\n\nTramo 1 Tramo 2 Tramo 3 Tramo 4 Tramo 5 \n     77     198      80      60      81 \n\n(freq_table3 &lt;- prop.table(freq_table2)*100)\n\n\n Tramo 1  Tramo 2  Tramo 3  Tramo 4  Tramo 5 \n15.52419 39.91935 16.12903 12.09677 16.33065 \n\ncumsum(freq_table3)\n\n  Tramo 1   Tramo 2   Tramo 3   Tramo 4   Tramo 5 \n 15.52419  55.44355  71.57258  83.66935 100.00000 \n\n\nA partir de este estadístico, podemos ver que un 55% de los casos se ubican debajo del tramo 2 de ingresos, lo cual en términos sustantivos señala que un 55% de las observaciones obtienen menos de $500.000 de ingresos mensuales.\nTambién podemos unir todas estas frecuencias en una sola tabla:\n\ntbl3 &lt;- table(proc_elsoc$tramo_ingreso)\ncbind(Freq=tbl3, relat = prop.table(tbl3)*100, Cum = cumsum(tbl3))\n\n        Freq    relat Cum\nTramo 1   77 15.52419  77\nTramo 2  198 39.91935 275\nTramo 3   80 16.12903 355\nTramo 4   60 12.09677 415\nTramo 5   81 16.33065 496\n\n\nOtra manera de calcular frecuencias (absolutas, relativas y acumuladas) en R, es mediante la función frq() del paquete sjmisc, el cual entrega todo lo anterior con un solo comando.\n\nsjmisc::frq(proc_elsoc$tramo_ingreso)\n\nx &lt;character&gt; \n# total N=496 valid N=496 mean=2.74 sd=1.31\n\nValue   |   N | Raw % | Valid % | Cum. %\n----------------------------------------\nTramo 1 |  77 | 15.52 |   15.52 |  15.52\nTramo 2 | 198 | 39.92 |   39.92 |  55.44\nTramo 3 |  80 | 16.13 |   16.13 |  71.57\nTramo 4 |  60 | 12.10 |   12.10 |  83.67\nTramo 5 |  81 | 16.33 |   16.33 | 100.00\n&lt;NA&gt;    |   0 |  0.00 |    &lt;NA&gt; |   &lt;NA&gt;\n\n\n\n\n\n4.1.2 Tablas de contingencia\nTambién podemos cruzar dos variables mediante las llamadas tablas de contingencia o tablas cruzadas. Además de conocer la frecuencia absoluta en cada casilla, podemos también conocer la proporción o frecuencia relativa para cada casilla y el total de la filas y columnas.\n\nsjt.xtab(proc_elsoc$sexo, proc_elsoc$tramo_edad)\n\n\n \n sexo\n tramo_edad\n Total\n \n \n\n Adultos\n Adutos mayores\n Jovenes\n \n \n \nFemenino\n210\n44\n23\n277 \n\n \n \nMasculino\n152\n49\n18\n219 \n\n \n \nTotal\n362\n93\n41\n496 \n\nχ2=3.436 · df=2 · Cramer's V=0.083 · p=0.179 \n\n \n\n\nsjt.xtab(proc_elsoc$sexo, proc_elsoc$tramo_edad,\n         show.cell.prc = TRUE, #fila y columna\n         show.summary = FALSE) \n\n\n\n\n\n\n\n\n\n\n\n\nsexo\ntramo_edad\nTotal\n\n\nAdultos\nAdutos mayores\nJovenes\n\n\nFemenino\n210\n42.3 %\n44\n8.9 %\n23\n4.6 %\n277\n55.8 %\n\n\nMasculino\n152\n30.6 %\n49\n9.9 %\n18\n3.6 %\n219\n44.1 %\n\n\nTotal\n362\n73 %\n93\n18.8 %\n41\n8.3 %\n496\n100 %\n\n\n\n\n\nsjt.xtab(proc_elsoc$sexo, proc_elsoc$tramo_edad,\n         show.row.prc = TRUE, #solo fila\n         show.summary = FALSE) \n\n\n\n\n\n\n\n\n\n\n\n\nsexo\ntramo_edad\nTotal\n\n\nAdultos\nAdutos mayores\nJovenes\n\n\nFemenino\n210\n75.8 %\n44\n15.9 %\n23\n8.3 %\n277\n100 %\n\n\nMasculino\n152\n69.4 %\n49\n22.4 %\n18\n8.2 %\n219\n100 %\n\n\nTotal\n362\n73 %\n93\n18.8 %\n41\n8.3 %\n496\n100 %\n\n\n\n\n\nsjt.xtab(proc_elsoc$sexo, proc_elsoc$tramo_edad,\n         show.col.prc=TRUE, #solo columna\n         show.summary=FALSE) \n\n\n\n\n\n\n\n\n\n\n\n\nsexo\ntramo_edad\nTotal\n\n\nAdultos\nAdutos mayores\nJovenes\n\n\nFemenino\n210\n58 %\n44\n47.3 %\n23\n56.1 %\n277\n55.8 %\n\n\nMasculino\n152\n42 %\n49\n52.7 %\n18\n43.9 %\n219\n44.2 %\n\n\nTotal\n362\n100 %\n93\n100 %\n41\n100 %\n496\n100 %\n\n\n\n\n\n\n\n\n\n4.2 Estadísticos descriptivos para variables númericas\nA diferencia de las variables categóricas, a las variables numéricas (intervalaras o de razón) les podemos calcular una mayor cantidad de estadísticos descriptivos, como medidas de tendencia central, dispersión o posición.\nComo ya vimos en clases:\n\ndentro de las medidas de tendencia central que podemos calcular para describir a una variable numérica encontramos: media, mediana;\ndentro de las medidas de dispersión podemos señalar: desviación estándar, variancia, rango;\ndentro de las medidas de posición podemos mencionar: mediana, q1, q3, mínimo, máximo.\n\n\n\n\n\n\n\nTip\n\n\n\nRecordemos que:\n\nlas medidads de tendencia central expresan el valor alrededor del cual se sitúa la mayor cantidad de los datos. Estamos mirando hacia el centro de los datos.\nlas medidas de dispersión buscan cuantificar lo próximo o alejado que están los valores de una variable de un punto central. Estamos mirando la dispersión de los datos respecto a su centro.\nlas medidas de posición señalan en qué “lugar” de una distribución se encuentra un dato o un conjunto de datos en relación al resto.\n\n\n\nEn R existen distintas formas de cálcular este tipo de estadísticos descriptivos.\n\na) Con summary\nPodemos obtener rapidamente un resumen de los datos con la funcion summary de R\n\nsummary(proc_elsoc$ingreso)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n      0  350000  500000  679514  800000 5000000 \n\n\nCon esto podemos ver que el promedio o media aritmética del ingreso individual de los entrevistados de nuestra base es de $679.514, mientras que la mediana es de 500.000 pesos.\nAsimismo, observamos que el 25% de la parte inferior de nuestros datos obtiene igual o menos de $350.000, en tanto que el 25% superior de la distribución de los datos gana igual o más de 800.000 pesos.\nSin embargo, aunque es informativo, no nos entrega toda la información que quisieramos.\n\n\nb) Con psych\n\npsych::describe(proc_elsoc$ingreso,\n                quant = c(.25,.75),\n                IQR = T)\n\n   vars   n     mean       sd median  trimmed    mad min     max   range skew\nX1    1 496 679514.1 611376.9 500000 572434.7 296520   0 5000000 5000000 3.01\n   kurtosis       se    IQR  Q0.25  Q0.75\nX1    13.42 27451.63 450000 350000 800000\n\n\nUsando la funcion describe del paquete psych podemos obtener mayor cantidad de estadísticos, además de especificarle otros adicionales.\nAsí, por ejemplo, ahora además de la media aritmética y la media, también tenemos la media recortada.\nPero lo más relevante es que nos aporta estadísticos de la dispersión de los datos, como la desviación estandár que nos indica que el grado de dispersión de mis datos respecto al promedio de ingresos es de $611.376. Con esto, podemos obtener también la varianza de los datos, que corresponde a la DS al cuadrado.\nAdemás de eso, nos aporta el rango (el valor máximo menos el mínimo), y el recorrido interquartilico (Q3 - Q1) que nos indica el grado de dispersión del 50% de los datos.\nCon esta información, podemos calcular los demás estadísticos que necesitamos “a mano”, es decir, computandolos directamente en R como una cálculadora.\n\n\nc) Con summarise de dplyr\nOtra manera de obtener todos los estadísticos que necesitamos es utilizando dplyr. Aquí, le especificamos lo que requerimos, pero debemos saber bien cómo calcular tales medidas:\n\nproc_elsoc %&gt;% \n  summarise(media = mean(ingreso),\n            mediana = median(ingreso),\n            q1 = quantile(ingreso, probs = .25),\n            q2 = quantile(ingreso, probs = .75),\n            rango = max(ingreso) - min(ingreso),\n            desviacion_estandar = sd(ingreso),\n            varianza = var(ingreso))\n\n# A tibble: 1 × 7\n    media mediana     q1     q2   rango desviacion_estandar      varianza\n    &lt;dbl&gt;   &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;               &lt;dbl&gt;         &lt;dbl&gt;\n1 679514.  500000 350000 800000 5000000             611377. 373781716972.\n\n\nAhora, conocemos no solo los estádisticos anteriores, sino que también obtuvimos la varianza y la desviación estándar."
  },
  {
    "objectID": "assignment/04-practico.html#resumen",
    "href": "assignment/04-practico.html#resumen",
    "title": "Práctica 4. Análisis descriptivo de datos en R",
    "section": "Resumen",
    "text": "Resumen\nHoy aprendimos a procesar datos en R. En detalle, vimos:\n\nCómo establecer un flujo de trabajo de procesamiento y análisis de datos en R.\nRealizar análisis descriptivos en R según el nivel de medición de las variables"
  },
  {
    "objectID": "assignment/06-practico.html",
    "href": "assignment/06-practico.html",
    "title": "Práctica 6. Visualización de datos con R",
    "section": "",
    "text": "El objetivo de esta guía práctica es aplicar los conocimientos aprendidos en clases sobre la forma de una distribución en R, comprendiendo sus usos, relevancia y formas de analizarla. También veremos visualización de datos con R, considerando las mejores prácticas para comunicar datos y análisis en ciencias sociales.\n\nLa noción de una distribución y sus tipos (continuas y discretas)\nEstimar e interpretar la asimetría y curtosis de una distribución\nContrastar distribuciones empíricas con teóricas\nQué es la visualización de datos y cómo comunicarlos a una audiencia de manera eficiente, completa e insesgada.\nVisualizar datos univariados con {ggplot2}.\n\n\n\n\nEn esta práctica trabajaremos con la base de datos de la Encuesta de Opinión Pública (CEP) de Diciembre del 2019 realizada por el Centro de Estudios Públicos. Esta base la pueden encontrar en el canal de U-Cursos sección Material Docente, o bien, en el siguiente enlace  CEP 2019 podrán descargar el archivo que contiene la base CEP Diciembre 2019."
  },
  {
    "objectID": "assignment/06-practico.html#objetivo-de-la-práctica",
    "href": "assignment/06-practico.html#objetivo-de-la-práctica",
    "title": "Práctica 6. Visualización de datos con R",
    "section": "",
    "text": "El objetivo de esta guía práctica es aplicar los conocimientos aprendidos en clases sobre la forma de una distribución en R, comprendiendo sus usos, relevancia y formas de analizarla. También veremos visualización de datos con R, considerando las mejores prácticas para comunicar datos y análisis en ciencias sociales.\n\nLa noción de una distribución y sus tipos (continuas y discretas)\nEstimar e interpretar la asimetría y curtosis de una distribución\nContrastar distribuciones empíricas con teóricas\nQué es la visualización de datos y cómo comunicarlos a una audiencia de manera eficiente, completa e insesgada.\nVisualizar datos univariados con {ggplot2}."
  },
  {
    "objectID": "assignment/06-practico.html#recursos-de-la-práctica",
    "href": "assignment/06-practico.html#recursos-de-la-práctica",
    "title": "Práctica 6. Visualización de datos con R",
    "section": "",
    "text": "En esta práctica trabajaremos con la base de datos de la Encuesta de Opinión Pública (CEP) de Diciembre del 2019 realizada por el Centro de Estudios Públicos. Esta base la pueden encontrar en el canal de U-Cursos sección Material Docente, o bien, en el siguiente enlace  CEP 2019 podrán descargar el archivo que contiene la base CEP Diciembre 2019."
  },
  {
    "objectID": "assignment/06-practico.html#cargar-librerías",
    "href": "assignment/06-practico.html#cargar-librerías",
    "title": "Práctica 6. Visualización de datos con R",
    "section": "1. Cargar librerías",
    "text": "1. Cargar librerías\nPara esta sesión, usaremos librerías que ya conocemos en prácticos pasados:\n\npacman::p_load(tidyverse, # colección de paquetes para manipulación de datos\n               haven, # para importar datos\n               car,# para recodificar datos\n               psych, # para analizar datos\n               sjmisc) # para analizar datos\n\noptions(scipen = 999) # para desactivar notacion cientifica\nrm(list = ls()) # para limpiar el entorno de trabajo"
  },
  {
    "objectID": "assignment/06-practico.html#importar-datos",
    "href": "assignment/06-practico.html#importar-datos",
    "title": "Práctica 6. Visualización de datos con R",
    "section": "2. Importar datos",
    "text": "2. Importar datos\nCargamos la base de datos CEP Diciembre 2019 mediante el paquete haven\n\ncep &lt;- haven::read_sav(\"Input/data/CEP_dic2019.sav\")"
  },
  {
    "objectID": "assignment/06-practico.html#limpiar-datos",
    "href": "assignment/06-practico.html#limpiar-datos",
    "title": "Práctica 6. Visualización de datos con R",
    "section": "3. Limpiar datos",
    "text": "3. Limpiar datos\nSeleccionamos las variables de interés y las renombramos:\n\nproc_cep &lt;- cep %&gt;% \n  select(edad = DS_P2_EXACTA,\n         sexo = DS_P1,\n         empleo = DS_P5, \n         satisfaccion = SV_1)\n\nRecodificamos las variables satisfaccion, sexo y empleo. Ademas, transformamos la variable edad a tramos:\n\nproc_cep$sexo &lt;- as.factor(proc_cep$sexo) # primero pasamos a factor la variable al venir con etiquetas\nproc_cep$empleo &lt;- as.factor(proc_cep$empleo)\n\nproc_cep &lt;- proc_cep %&gt;% \n  mutate(satisfaccion=car::recode(satisfaccion, recodes = c(\"88 = NA; 99 = NA\")),\n         sexo = car::recode(sexo, recodes = c(\"1 = 'Hombre'; 2 = 'Mujer'\")),\n         empleo = car::recode(empleo, recodes = c(\"1 = 'Ocupado'; 2 = 'Desocupado'; 3 = 'Nunca ha trabajado'; 99 = NA\")),\n         tramo_edad = case_when(edad &lt;= 29 ~ \"Jovenes\",\n                                edad &gt;= 30 & edad &lt;= 59 ~ \"Adultos\",\n                                edad &gt;= 60 ~ \"Adutos mayores\")) \n\nRemovemos los valores perdidos o missing.\n\nproc_cep &lt;- na.omit(proc_cep)\n\nPor último, guardamos la base procesada.\n\nsaveRDS(proc_cep, file = \"Output/proc_cep.RData\")"
  },
  {
    "objectID": "assignment/08-practico.html",
    "href": "assignment/08-practico.html",
    "title": "Inferencia estadística univariada",
    "section": "",
    "text": "El objetivo de esta guía práctica es aplicar los conocimientos aprendidos en clases sobre inferencia estadística univariada, comprendiendo sus fundamentos, relevancia y aplicación a un caso concreto en R.\nEn detalle, aprenderemos:\n\nEstablecer el diseño muestral de una base de datos en R.\nRealizar estimaciones puntuales e intervalares para medias y proporciones.\nContrastar hipótesis univariadas.\n\n\n\n\nEn esta práctica trabajaremos con la base de datos de la Encuesta Suplementaria de Ingresos (ESI) del 2021 realizada por el Instituto Nacional de Estadísticas (INE). Esta base la pueden encontrar en el canal de U-Cursos sección Material Docente, o bien, en el siguiente enlace  ESI 2021 podrán descargar el archivo que contiene la base ESI 2021."
  },
  {
    "objectID": "assignment/08-practico.html#objetivo-de-la-práctica",
    "href": "assignment/08-practico.html#objetivo-de-la-práctica",
    "title": "Inferencia estadística univariada",
    "section": "",
    "text": "El objetivo de esta guía práctica es aplicar los conocimientos aprendidos en clases sobre inferencia estadística univariada, comprendiendo sus fundamentos, relevancia y aplicación a un caso concreto en R.\nEn detalle, aprenderemos:\n\nEstablecer el diseño muestral de una base de datos en R.\nRealizar estimaciones puntuales e intervalares para medias y proporciones.\nContrastar hipótesis univariadas."
  },
  {
    "objectID": "assignment/08-practico.html#recursos-de-la-práctica",
    "href": "assignment/08-practico.html#recursos-de-la-práctica",
    "title": "Inferencia estadística univariada",
    "section": "",
    "text": "En esta práctica trabajaremos con la base de datos de la Encuesta Suplementaria de Ingresos (ESI) del 2021 realizada por el Instituto Nacional de Estadísticas (INE). Esta base la pueden encontrar en el canal de U-Cursos sección Material Docente, o bien, en el siguiente enlace  ESI 2021 podrán descargar el archivo que contiene la base ESI 2021."
  },
  {
    "objectID": "assignment/08-practico.html#cargar-librerías",
    "href": "assignment/08-practico.html#cargar-librerías",
    "title": "Inferencia estadística univariada",
    "section": "1. Cargar librerías",
    "text": "1. Cargar librerías\nPara esta sesión, usaremos librerías que ya conocemos en prácticos pasados y una nueva, llamada srvyr:\n\npacman::p_load(tidyverse, # colección de paquetes para manipulación de datos\n               car, # para recodificar\n               psych, # para analizar datos\n               sjmisc,  # para analizar datos\n               srvyr) # para estimación de IC y ponderadores\n\noptions(scipen = 999) # para desactivar notacion cientifica\nrm(list = ls()) # para limpiar el entorno de trabajo"
  },
  {
    "objectID": "assignment/08-practico.html#importar-datos",
    "href": "assignment/08-practico.html#importar-datos",
    "title": "Inferencia estadística univariada",
    "section": "2. Importar datos",
    "text": "2. Importar datos\nCargamos la base de datos ESI 2021 con readRDS\n\nesi &lt;- readRDS(\"Input/data/esi-2021-ocupados.RData\")"
  },
  {
    "objectID": "assignment/08-practico.html#recodificar",
    "href": "assignment/08-practico.html#recodificar",
    "title": "Inferencia estadística univariada",
    "section": "3. Recodificar",
    "text": "3. Recodificar\nSolo recodificamos y convertiremos a factor la variable sexo.\n\nesi$sexo &lt;- car::recode(esi$sexo, recodes = c(\" 1 = 'Hombre'; 2 = 'Mujer'\"), as.factor = T)"
  },
  {
    "objectID": "assignment/08-practico.html#resumen",
    "href": "assignment/08-practico.html#resumen",
    "title": "Inferencia estadística univariada",
    "section": "Resumen",
    "text": "Resumen\nHoy aprendimos a realizar inferencia estádistica en R. En detalle, vimos:\n\nEstablecer el diseño muestral de una base de datos en R.\nRealizar estimaciones puntuales e intervalares para medias y proporciones.\nContrastar hipótesis univariadas."
  },
  {
    "objectID": "assignment/08-practico.html#video-de-la-sesión",
    "href": "assignment/08-practico.html#video-de-la-sesión",
    "title": "Inferencia estadística univariada",
    "section": "Video de la sesión",
    "text": "Video de la sesión"
  },
  {
    "objectID": "ayudantias/01_ayudantia.html#guía-de-ejercicios",
    "href": "ayudantias/01_ayudantia.html#guía-de-ejercicios",
    "title": "Ayudantía 01. Medidas de Frecuencias y Tendencia Central",
    "section": "Guía de ejercicios",
    "text": "Guía de ejercicios",
    "crumbs": [
      "Ayudantías",
      "Sesiones",
      "1: Medidas de Frecuencia y Tendencia Central"
    ]
  },
  {
    "objectID": "ayudantias/03_ayudantia.html#guía-de-ejercicios",
    "href": "ayudantias/03_ayudantia.html#guía-de-ejercicios",
    "title": "Ayudantía 03. Medidas de Posición y Forma",
    "section": "Guía de ejercicios",
    "text": "Guía de ejercicios"
  },
  {
    "objectID": "class/07-class.html#lecturas",
    "href": "class/07-class.html#lecturas",
    "title": "Presentación",
    "section": "Lecturas",
    "text": "Lecturas"
  },
  {
    "objectID": "class/09-class.html#lecturas",
    "href": "class/09-class.html#lecturas",
    "title": "Presentación",
    "section": "Lecturas",
    "text": "Lecturas"
  },
  {
    "objectID": "evaluaciones.html",
    "href": "evaluaciones.html",
    "title": "Evaluaciones",
    "section": "",
    "text": "La presente evaluación tiene por objetivo que las y los estudiantes apliquen de forma integral los contenidos del curso a una temática de interés específica utilizando la base de datos de la Encuesta de Bienestar Social (EBS) 2023, en formato de reporte de investigación breve.\nEl reporte de investigación debe desarrollar de forma integrada los aspectos de diseño de la investigación, análisis estadístico y presentación de resultados, así como la elaboración de conclusiones.\n\n\n\nEl trabajo debe ser realizado en grupos de 5 estudiantes, que deben ser inscritos/as en el siguiente enlace.\nDeben elegir uno de los módulos de la Encuesta de Bienestar Social (EBS) 2023, del cual tomarán las variables con las que elaborarán el informe. También podrán ocupar las variables del módulo sociodemográfico (L. Módulo Caracterización).\nSe realizarán dos entregas, una parcial que contempla el diseño de investigación, y una final que además integrará el análisis y resultados. El reporte se irá construyendo a lo largo del semestre.\nLa investigación a desarrollar debe ser de tipo descriptiva, esto quiere decir que se trata de una pregunta de investigación que se refiere a la forma, magnitud o características que tienen unas determinadas variables en una población.\nEl peso de esta evaluación sobre la nota final del curso es del 40%, es decir, 20% cada entrega.\nSe asignará una bonificación por asistencia a los talleres prácticos de R (2 décimas en la primera entrega, 3 décimas en la segunda entrega) de manera individual, esto quiere decir que una vez puesta la nota grupal, se bonificará la nota de cada estudiante que haya asistido al menos al 80% de los prácticos.\n\n\n\n\n\n\n\n\n\n\n\n\n\nCOMPONENTES\nDETALLE\nPUNTAJE\n\n\n\n\nFormulación del problema\nFundamentar el interés sociológico que habilita el estudio de la temática elegida (¿Qué se va a estudiar?, ¿Por qué es importante?, ¿Qué se sabe sobre el tema?), utilizando al menos 3 referencias bibliográficas. Además, formule una pregunta y un objetivo general de investigación. Estos deben ser coherentes entre sí y con la formulación del problema expuesta en el apartado anterior. El objetivo de investigación formulado debe permitir entender cómo se analizará la temática elegida. Además, la pregunta debe ser de carácter descriptiva. (1 plana)\n1,0\n\n\nDefinición base de datos\nDefinir la fuente de información a utilizar indicando el nombre de la base de datos y la institución que la disponibiliza, la población que busca representar el estudio, el procedimiento de muestreo utilizado y el tamaño de la muestra. Dado que trabajaremos solo con la Encuesta de Bienestar Social (EBS) 2023, se espera que los grupos describan qué busca medir y representar el módulo de la encuesta elegido. (½ plana)\n1,0\n\n\nDefinición variables\nSeleccionar un mínimo de 4 variables para, mediante su estudio, responder a la pregunta de investigación. Todas las variables deben remitir al tema de interés y pertenecer al módulo elegido (además, pueden ocupar variables del módulo sociodemográfico): 2 de las variables deben ser de nivel de medición de intervalo o razón, 1 variable debe ser de nivel de medición ordinal y 1 variable debe ser de nivel de medición nominal. Para cada variable debe indicar: i) una breve descripción que especifique el nivel de medición de la variable, su nombre en la base de datos y el fraseo en la encuesta, ii) explique qué aspecto del fenómeno de interés representa y iii) su utilidad para resolver la pregunta de investigación. La selección de variables debe ser coherente con la formulación del problema y la pregunta y objetivos de investigación propuestos. (1 plana)\n2,0\n\n\nTotal\n\n5,0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCOMPONENTES\nDETALLE\nPUNTAJE\n\n\n\n\nFormulación del problema\nFundamentar el interés sociológico que habilita el estudio de la temática elegida (¿Qué se va a estudiar?, ¿Por qué es importante?, ¿Qué se sabe sobre el tema?), utilizando al menos 3 referencias bibliográficas. Además, formule una pregunta y un objetivo general de investigación. Estos deben ser coherentes entre sí y con la formulación del problema expuesta en el apartado anterior. El objetivo de investigación formulado debe permitir entender cómo se analizará la temática elegida. Además, la pregunta debe ser de carácter descriptiva. (1 plana)\n1,0\n\n\nDefinición base de datos\nDefinir la fuente de información a utilizar indicando el nombre de la base de datos y la institución que la disponibiliza, la población que busca representar el estudio, el procedimiento de muestreo utilizado y el tamaño de la muestra. Dado que trabajaremos solo con la Encuesta de Bienestar Social (EBS) 2023, se espera que los grupos describan qué busca medir y representar el módulo de la encuesta elegido. (½ plana)\n1,0\n\n\nDefinición variables\nSeleccionar un mínimo de 4 variables para, mediante su estudio, responder a la pregunta de investigación. Todas las variables deben remitir al tema de interés y pertenecer al módulo elegido (además, pueden ocupar variables del módulo sociodemográfico): 2 de las variables deben ser de nivel de medición de intervalo o razón, 1 variable debe ser de nivel de medición ordinal y 1 variable debe ser de nivel de medición nominal. Para cada variable debe indicar: i) una breve descripción que especifique el nivel de medición de la variable, su nombre en la base de datos y el fraseo en la encuesta, ii) explique qué aspecto del fenómeno de interés representa y iii) su utilidad para resolver la pregunta de investigación. La selección de variables debe ser coherente con la formulación del problema y la pregunta y objetivos de investigación propuestos. (1 plana)\n2,0\n\n\nTablas de frecuencia\nCalcular una tabla de frecuencia (absoluta y relativa) para las variables que corresponda e interpretar. La interpretación de tablas debe buscar aportar con elementos que permitan construir una respuesta a la pregunta y objetivos de investigación. Los cálculos deben ser realizados en R.\n2,0\n\n\nMedidas de tendencia central\nCalcular e interpretar las medidas de tendencia central (estadístico muestral) para las variables intervalares y de razón seleccionadas. Colocarlas en una tabla. La interpretación debe ser relevante para responder la pregunta y objetivo de investigación. Los cálculos deben ser realizados en R.\n2,0\n\n\nMedidas de dispersión\nCalcular el rango, la desviación estándar y el coeficiente de variación (estadístico muestral) para las variables intervalares y de razón seleccionadas. Colocarlas en una tabla. La interpretación debe ser relevante para responder la pregunta y objetivo de investigación. Los cálculos deben ser realizados en R.\n2,0\n\n\nMedidas de posición\nCalcular el valor mínimo y máximo, el cuartil 1 y el cuartil 3 (estadístico muestral) para las variables intervalares y de razón seleccionadas. Colocarlas en una tabla. La interpretación debe ser relevante para responder la pregunta y objetivo de investigación. Los cálculos deben ser realizados en R.\n2,0\n\n\nGráficos\nPresentar al menos 2 gráficos seleccionando para su construcción aquellas variables más relevantes para el problema de investigación. La interpretación debe ser relevante para responder la pregunta y objetivo de investigación. Los gráficos deben ser realizados en R.\n2,0\n\n\nEstimación puntual, intervalo de confianza y error\nCalcular los parámetros e intervalos de confianza para dos de las variables seleccionadas. Además, debe elaborar una tabla resumen que sintetice todos los indicadores que considere relevantes para interpretar la información. La interpretación debe ser relevante para responder la pregunta y objetivo de investigación. Los cálculos deben ser realizados en R.\n2,5\n\n\nConclusiones\nEn las conclusiones se deben sintetizar los aspectos más relevantes de los análisis estadísticos ya expuestos, articulando toda la información trabajada debe presentarse una respuesta tentativa a la pregunta de investigación. Este resumen de los resultados, así como las conclusiones, deben dialogar con lo planteado en la introducción de su trabajo, haciendo referencia a las fuentes bibliográficas utilizadas en la presentación del problema de investigación. Además, debe reflexionar sobre los límites de su diseño de investigación y señalar posibles ejes de investigación que podrían ser considerados en futuras indagaciones. Se valorará la pertinencia sociológica de la conclusión (1 plana).\n2,0\n\n\nTrabajo en R\nAdemás del informe, entregar la carpeta con el Proyecto R, que contenga un archivo .Rproject, y las carpetas input, procesamiento y output. La carpeta input debe contener la base de datos, manual de usuario, libro de códigos. La carpeta procesamiento debe contener un archivo de sintaxis para el procesamiento y otro para el análisis de los datos. La carpeta output debe contener la base de datos procesada y el resto de salidas asociadas (tablas, gráficos, etc.). Se evaluará que los códigos utilizados generen las salidas (tablas, gráficos, etc.) que se presentan en el informe.\n3,0\n\n\nTotal\n\n18,0\n\n\n\n\n\n\nPara la construcción del reporte de investigación por favor considere:\n\nEl trabajo debe tener una portada que incluya: título, logo de la universidad, nombre de los estudiantes, profesor/a, apoyos docentes, ayudantes y fecha.\nDebe incluirse un índice.\nLas tablas, referencias y bibliografía utilizada debe presentarse en formato APA 7.\nLa fuente a utilizar debe ser Letra Times New Roman 12, interlineado simple y justificado. Notas a pie de página en tamaño 10, en mismo formato que el texto central.\nEl trabajo debe tener una redacción adecuada y sin errores de ortografía. Se descontarán hasta 5 décimas sobre la nota final por errores de este tipo.\n\n\n\n\nEl formato de entrega del informe debe ser un documento en formato Microsoft Word (.docx) o formato PDF (.pdf), que debe estar alojado en la carpeta output del Proyecto R. El proyecto debe llevar por nombre:\n\nPara la primera entrega “Nombre-del-grupo_Entrega_Parcial”.\nPara la segunda entrega “Nombre-del-grupo_Entrega_Final”.\n\nFechas de entrega: \n\nEntrega parcial: viernes 25 de abril hasta las 23:59 vía U-Cursos.\nEntrega final: viernes 20 de junio hasta las 23:59 vía U-Cursos.\n\n\n\n\nTodos los trabajos se procesan en software para detección de plagio: evidencia de una situación de plagio implica obtención de la nota mínima en la evaluación (1,0) junto con constituirse como causal de reprobación de la asignatura.\nSobre uso de IA: Es posible utilizar IA para consultas sobre software R en la realización de sus trabajos. Sin embargo, esta no debe ser utilizada para la realización completa del mismo. Los trabajos elaborados con IA serán evaluados con nota mínima (1,0).\n\n\n\n\nMáxima de escritura: una idea por párrafo. Si comienza una idea nueva, se recomienda comenzar otro párrafo. Al revés, si el párrafo siguiente habla de lo mismo, sumarlo al párrafo anterior.\nLa idea del párrafo se resume en la primera parte del párrafo, lo que en inglés se llama “topic sentence”.\nDeclarar domicilio disciplinar: ej, mencionar la palabra “sociología” en el primer/segundo párrafo, esto fuerza que la investigación se enmarque en la disciplina."
  },
  {
    "objectID": "evaluaciones.html#términos-de-referencia-reporte-de-investigación",
    "href": "evaluaciones.html#términos-de-referencia-reporte-de-investigación",
    "title": "Evaluaciones",
    "section": "",
    "text": "La presente evaluación tiene por objetivo que las y los estudiantes apliquen de forma integral los contenidos del curso a una temática de interés específica utilizando la base de datos de la Encuesta de Bienestar Social (EBS) 2023, en formato de reporte de investigación breve.\nEl reporte de investigación debe desarrollar de forma integrada los aspectos de diseño de la investigación, análisis estadístico y presentación de resultados, así como la elaboración de conclusiones.\n\n\n\nEl trabajo debe ser realizado en grupos de 5 estudiantes, que deben ser inscritos/as en el siguiente enlace.\nDeben elegir uno de los módulos de la Encuesta de Bienestar Social (EBS) 2023, del cual tomarán las variables con las que elaborarán el informe. También podrán ocupar las variables del módulo sociodemográfico (L. Módulo Caracterización).\nSe realizarán dos entregas, una parcial que contempla el diseño de investigación, y una final que además integrará el análisis y resultados. El reporte se irá construyendo a lo largo del semestre.\nLa investigación a desarrollar debe ser de tipo descriptiva, esto quiere decir que se trata de una pregunta de investigación que se refiere a la forma, magnitud o características que tienen unas determinadas variables en una población.\nEl peso de esta evaluación sobre la nota final del curso es del 40%, es decir, 20% cada entrega.\nSe asignará una bonificación por asistencia a los talleres prácticos de R (2 décimas en la primera entrega, 3 décimas en la segunda entrega) de manera individual, esto quiere decir que una vez puesta la nota grupal, se bonificará la nota de cada estudiante que haya asistido al menos al 80% de los prácticos.\n\n\n\n\n\n\n\n\n\n\n\n\n\nCOMPONENTES\nDETALLE\nPUNTAJE\n\n\n\n\nFormulación del problema\nFundamentar el interés sociológico que habilita el estudio de la temática elegida (¿Qué se va a estudiar?, ¿Por qué es importante?, ¿Qué se sabe sobre el tema?), utilizando al menos 3 referencias bibliográficas. Además, formule una pregunta y un objetivo general de investigación. Estos deben ser coherentes entre sí y con la formulación del problema expuesta en el apartado anterior. El objetivo de investigación formulado debe permitir entender cómo se analizará la temática elegida. Además, la pregunta debe ser de carácter descriptiva. (1 plana)\n1,0\n\n\nDefinición base de datos\nDefinir la fuente de información a utilizar indicando el nombre de la base de datos y la institución que la disponibiliza, la población que busca representar el estudio, el procedimiento de muestreo utilizado y el tamaño de la muestra. Dado que trabajaremos solo con la Encuesta de Bienestar Social (EBS) 2023, se espera que los grupos describan qué busca medir y representar el módulo de la encuesta elegido. (½ plana)\n1,0\n\n\nDefinición variables\nSeleccionar un mínimo de 4 variables para, mediante su estudio, responder a la pregunta de investigación. Todas las variables deben remitir al tema de interés y pertenecer al módulo elegido (además, pueden ocupar variables del módulo sociodemográfico): 2 de las variables deben ser de nivel de medición de intervalo o razón, 1 variable debe ser de nivel de medición ordinal y 1 variable debe ser de nivel de medición nominal. Para cada variable debe indicar: i) una breve descripción que especifique el nivel de medición de la variable, su nombre en la base de datos y el fraseo en la encuesta, ii) explique qué aspecto del fenómeno de interés representa y iii) su utilidad para resolver la pregunta de investigación. La selección de variables debe ser coherente con la formulación del problema y la pregunta y objetivos de investigación propuestos. (1 plana)\n2,0\n\n\nTotal\n\n5,0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCOMPONENTES\nDETALLE\nPUNTAJE\n\n\n\n\nFormulación del problema\nFundamentar el interés sociológico que habilita el estudio de la temática elegida (¿Qué se va a estudiar?, ¿Por qué es importante?, ¿Qué se sabe sobre el tema?), utilizando al menos 3 referencias bibliográficas. Además, formule una pregunta y un objetivo general de investigación. Estos deben ser coherentes entre sí y con la formulación del problema expuesta en el apartado anterior. El objetivo de investigación formulado debe permitir entender cómo se analizará la temática elegida. Además, la pregunta debe ser de carácter descriptiva. (1 plana)\n1,0\n\n\nDefinición base de datos\nDefinir la fuente de información a utilizar indicando el nombre de la base de datos y la institución que la disponibiliza, la población que busca representar el estudio, el procedimiento de muestreo utilizado y el tamaño de la muestra. Dado que trabajaremos solo con la Encuesta de Bienestar Social (EBS) 2023, se espera que los grupos describan qué busca medir y representar el módulo de la encuesta elegido. (½ plana)\n1,0\n\n\nDefinición variables\nSeleccionar un mínimo de 4 variables para, mediante su estudio, responder a la pregunta de investigación. Todas las variables deben remitir al tema de interés y pertenecer al módulo elegido (además, pueden ocupar variables del módulo sociodemográfico): 2 de las variables deben ser de nivel de medición de intervalo o razón, 1 variable debe ser de nivel de medición ordinal y 1 variable debe ser de nivel de medición nominal. Para cada variable debe indicar: i) una breve descripción que especifique el nivel de medición de la variable, su nombre en la base de datos y el fraseo en la encuesta, ii) explique qué aspecto del fenómeno de interés representa y iii) su utilidad para resolver la pregunta de investigación. La selección de variables debe ser coherente con la formulación del problema y la pregunta y objetivos de investigación propuestos. (1 plana)\n2,0\n\n\nTablas de frecuencia\nCalcular una tabla de frecuencia (absoluta y relativa) para las variables que corresponda e interpretar. La interpretación de tablas debe buscar aportar con elementos que permitan construir una respuesta a la pregunta y objetivos de investigación. Los cálculos deben ser realizados en R.\n2,0\n\n\nMedidas de tendencia central\nCalcular e interpretar las medidas de tendencia central (estadístico muestral) para las variables intervalares y de razón seleccionadas. Colocarlas en una tabla. La interpretación debe ser relevante para responder la pregunta y objetivo de investigación. Los cálculos deben ser realizados en R.\n2,0\n\n\nMedidas de dispersión\nCalcular el rango, la desviación estándar y el coeficiente de variación (estadístico muestral) para las variables intervalares y de razón seleccionadas. Colocarlas en una tabla. La interpretación debe ser relevante para responder la pregunta y objetivo de investigación. Los cálculos deben ser realizados en R.\n2,0\n\n\nMedidas de posición\nCalcular el valor mínimo y máximo, el cuartil 1 y el cuartil 3 (estadístico muestral) para las variables intervalares y de razón seleccionadas. Colocarlas en una tabla. La interpretación debe ser relevante para responder la pregunta y objetivo de investigación. Los cálculos deben ser realizados en R.\n2,0\n\n\nGráficos\nPresentar al menos 2 gráficos seleccionando para su construcción aquellas variables más relevantes para el problema de investigación. La interpretación debe ser relevante para responder la pregunta y objetivo de investigación. Los gráficos deben ser realizados en R.\n2,0\n\n\nEstimación puntual, intervalo de confianza y error\nCalcular los parámetros e intervalos de confianza para dos de las variables seleccionadas. Además, debe elaborar una tabla resumen que sintetice todos los indicadores que considere relevantes para interpretar la información. La interpretación debe ser relevante para responder la pregunta y objetivo de investigación. Los cálculos deben ser realizados en R.\n2,5\n\n\nConclusiones\nEn las conclusiones se deben sintetizar los aspectos más relevantes de los análisis estadísticos ya expuestos, articulando toda la información trabajada debe presentarse una respuesta tentativa a la pregunta de investigación. Este resumen de los resultados, así como las conclusiones, deben dialogar con lo planteado en la introducción de su trabajo, haciendo referencia a las fuentes bibliográficas utilizadas en la presentación del problema de investigación. Además, debe reflexionar sobre los límites de su diseño de investigación y señalar posibles ejes de investigación que podrían ser considerados en futuras indagaciones. Se valorará la pertinencia sociológica de la conclusión (1 plana).\n2,0\n\n\nTrabajo en R\nAdemás del informe, entregar la carpeta con el Proyecto R, que contenga un archivo .Rproject, y las carpetas input, procesamiento y output. La carpeta input debe contener la base de datos, manual de usuario, libro de códigos. La carpeta procesamiento debe contener un archivo de sintaxis para el procesamiento y otro para el análisis de los datos. La carpeta output debe contener la base de datos procesada y el resto de salidas asociadas (tablas, gráficos, etc.). Se evaluará que los códigos utilizados generen las salidas (tablas, gráficos, etc.) que se presentan en el informe.\n3,0\n\n\nTotal\n\n18,0\n\n\n\n\n\n\nPara la construcción del reporte de investigación por favor considere:\n\nEl trabajo debe tener una portada que incluya: título, logo de la universidad, nombre de los estudiantes, profesor/a, apoyos docentes, ayudantes y fecha.\nDebe incluirse un índice.\nLas tablas, referencias y bibliografía utilizada debe presentarse en formato APA 7.\nLa fuente a utilizar debe ser Letra Times New Roman 12, interlineado simple y justificado. Notas a pie de página en tamaño 10, en mismo formato que el texto central.\nEl trabajo debe tener una redacción adecuada y sin errores de ortografía. Se descontarán hasta 5 décimas sobre la nota final por errores de este tipo.\n\n\n\n\nEl formato de entrega del informe debe ser un documento en formato Microsoft Word (.docx) o formato PDF (.pdf), que debe estar alojado en la carpeta output del Proyecto R. El proyecto debe llevar por nombre:\n\nPara la primera entrega “Nombre-del-grupo_Entrega_Parcial”.\nPara la segunda entrega “Nombre-del-grupo_Entrega_Final”.\n\nFechas de entrega: \n\nEntrega parcial: viernes 25 de abril hasta las 23:59 vía U-Cursos.\nEntrega final: viernes 20 de junio hasta las 23:59 vía U-Cursos.\n\n\n\n\nTodos los trabajos se procesan en software para detección de plagio: evidencia de una situación de plagio implica obtención de la nota mínima en la evaluación (1,0) junto con constituirse como causal de reprobación de la asignatura.\nSobre uso de IA: Es posible utilizar IA para consultas sobre software R en la realización de sus trabajos. Sin embargo, esta no debe ser utilizada para la realización completa del mismo. Los trabajos elaborados con IA serán evaluados con nota mínima (1,0).\n\n\n\n\nMáxima de escritura: una idea por párrafo. Si comienza una idea nueva, se recomienda comenzar otro párrafo. Al revés, si el párrafo siguiente habla de lo mismo, sumarlo al párrafo anterior.\nLa idea del párrafo se resume en la primera parte del párrafo, lo que en inglés se llama “topic sentence”.\nDeclarar domicilio disciplinar: ej, mencionar la palabra “sociología” en el primer/segundo párrafo, esto fuerza que la investigación se enmarque en la disciplina."
  },
  {
    "objectID": "schedule.html",
    "href": "schedule.html",
    "title": "Planificación",
    "section": "",
    "text": "Los dos componentes centrales del curso son las clases lectivas y las sesiones prácticas de Análisis de Datos. Las clases se realizarán los días Martes y Jueves de 08:30 a 10:00 en la sala 1 del Aulario B , mientras que las sesiones de Práctos se realizarán los días Jueves de 08:30 a 10:00 en la Sala 1 del Aulario B, y sala 45 (ver planificación de sesiones).\n\nClases ( ): Documentos de presentación y lecturas asociadas.\nPrácticos (): Actividades prácticas de Análisis de Datos a desarrollar durante el semestre.\nEvaluaciones (): Evaluaciones individuales y colectivas a desarrollar durante el semestre.\n\n\n\n\n\n\n\n\n\n\n\n Clases\n Prácticos\n Evaluaciones\n\n\n\n\n Marzo \n\n\n\n\n\n\n\nUNIDAD 1: Sociología y estadística\n\n\n\n\n\n\n\n\n\nSemana 1 (10/03)\nLa estadística como herramienta de investigación sociológica\n\n\n\n\nSemana 2 (17/03)\nEpistemología, límites y potencialidades de la investigación cuantitativa.\n\n\n\n\nSemana 3 (24/03)\nLa medición en ciencias sociales: algunos conceptos fundamentales.\n\n\n\n\n Abril \n\n\n\n\n\nSemana 4 (31/03)\nDatos y bases de datos. Ética de la investigación con datos sociales.\n\n\n\n\nSemana 5 (07/04)\nDatos y bases de datos. Ética de la investigación con datos sociales.\nPráctico 1\n\n\n\nSemana 6 (14/04)\nSuspensión por paro.\n\n\n\n\nSemana 7 (21/04)\nSuspensión por toma.\n\n\n\n\nSemana 8 (28/04)\nSuspensión por toma.\nFeriado\n\n\n\n Mayo \n\n\n\n\n\nSemana 9 (05/05)\nSuspensión por toma\n\n\n\n\nSemana 10 (12/05)\nSuspensión por toma.\n\n\n\n\n\n\n\nUNIDAD 2: La descripción de los datos.\n\n\n\n\n\n\n\n\n\nSemana 11 (19/05)\nMedidas de tendencia central.\nPráctico 2\n\n\n\nSemana 12 (26/05)\nMedidas de dispersión.\nPráctico 3\n\n\n\n Junio \n\n\n\n\n\nSemana 13 (02/06)\nMedidas de posición.\nPráctico 3\n\n\n\nSemana 14 (09/06)\nVisualización de datos y distribuciones de datos.\nPráctico 4\n\n\n\n\n\n\nUNIDAD 3: La forma de una distribución\n\n\n\n\n\n\n\n\n\nSemana 15 (16/06)\nNoción de función y distribución.\nPráctico 5\n\n\n\nSemana 16 (23/06)\nAsimetría y Curtosis.\nSesión de apoyo a trabajos.\n\n\n\n Julio \n\n\n\n\n\nSemana 17 (30/06)\nConcepto de distribución estadística. Distribución normal y sus probabilidades.\n\n\n\n\nSemana 18 (07/07)\nExámenes\n\n\n\n\nSemana 19 (14/07)\nExámenes"
  }
]